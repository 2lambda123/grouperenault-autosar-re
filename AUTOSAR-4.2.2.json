{
   "1" : {
      "abbreviation" : "Os(not used asAPI prefix)",
      "services" : {
         "0" : {
            "name" : "GetApplicationID",
            "param" : 0,
            "proto" : "ApplicationType GetApplicationID();"
         },
         "1" : {
            "name" : "GetISRID",
            "param" : 0,
            "proto" : "ISRType GetISRID();"
         },
         "10" : {
            "name" : "NextScheduleTable",
            "param" : 2,
            "proto" : "StatusType NextScheduleTable(ScheduleTableType ScheduleTableID_From,ScheduleTableType ScheduleTableID_To);"
         },
         "11" : {
            "name" : "StartScheduleTableSynchron",
            "param" : 1,
            "proto" : "StatusType StartScheduleTableSynchron(ScheduleTableType ScheduleTableID);"
         },
         "12" : {
            "name" : "SyncScheduleTable",
            "param" : 2,
            "proto" : "StatusType SyncScheduleTable(ScheduleTableType ScheduleTableID,TickType Value);"
         },
         "13" : {
            "name" : "SetScheduletableAsync",
            "param" : 1,
            "proto" : "StatusType SetScheduletableAsync(ScheduleTableType ScheduleTableID);"
         },
         "14" : {
            "name" : "GetScheduleTableStatus",
            "param" : 2,
            "proto" : "StatusType GetScheduleTableStatus(ScheduleTableType ScheduleTableID,ScheduleTableStatusRefType ScheduleStatus);"
         },
         "15" : {
            "name" : "IncrementCounter",
            "param" : 1,
            "proto" : "StatusType IncrementCounter(CounterType CounterID);"
         },
         "16" : {
            "name" : "GetCounterValue",
            "param" : 2,
            "proto" : "StatusType GetCounterValue(CounterType CounterID,TickRefType Value);"
         },
         "17" : {
            "name" : "GetElapsedValue",
            "param" : 3,
            "proto" : "StatusType GetElapsedValue(CounterType CounterID,TickRefType Value,TickRefType ElapsedValue);"
         },
         "18" : {
            "name" : "TerminateApplication",
            "param" : 2,
            "proto" : "StatusType TerminateApplication(ApplicationType Application,RestartType RestartOption);"
         },
         "19" : {
            "name" : "AllowAccess",
            "param" : 0,
            "proto" : "StatusType AllowAccess();"
         },
         "2" : {
            "name" : "CallTrustedFunction",
            "param" : 2,
            "proto" : "StatusType CallTrustedFunction(TrustedFunctionIndexType FunctionIndex,TrustedFunctionParameterRefType FunctionParams);"
         },
         "20" : {
            "name" : "GetApplicationState",
            "param" : 2,
            "proto" : "StatusType GetApplicationState(ApplicationType Application,ApplicationStateRefType Value);"
         },
         "21" : {
            "name" : "GetNumberOfActivatedCores",
            "param" : 0,
            "proto" : "uint32 GetNumberOfActivatedCores();"
         },
         "22" : {
            "name" : "GetCoreID",
            "param" : 0,
            "proto" : "CoreIdType GetCoreID();"
         },
         "23" : {
            "name" : "StartCore",
            "param" : 2,
            "proto" : "void StartCore(CoreIdType CoreID,StatusType* Status);"
         },
         "24" : {
            "name" : "StartNonAutosarCore",
            "param" : 2,
            "proto" : "void StartNonAutosarCore(CoreIdType CoreID,StatusType* Status);"
         },
         "25" : {
            "name" : "GetSpinlock",
            "param" : 1,
            "proto" : "StatusType GetSpinlock(SpinlockIdType SpinlockId);"
         },
         "26" : {
            "name" : "ReleaseSpinlock",
            "param" : 1,
            "proto" : "StatusType ReleaseSpinlock(SpinlockIdType SpinlockId);"
         },
         "27" : {
            "name" : "TryToGetSpinlock",
            "param" : 2,
            "proto" : "StatusType TryToGetSpinlock(SpinlockIdType SpinlockId,TryToGetSpinlockType* Success);"
         },
         "28" : {
            "name" : "ShutdownAllCores",
            "param" : 1,
            "proto" : "void ShutdownAllCores(StatusType Error);"
         },
         "29" : {
            "name" : "ControlIdle",
            "param" : 2,
            "proto" : "StatusType ControlIdle(CoreIdType CoreID,IdleModeType IdleMode);"
         },
         "3" : {
            "name" : "CheckISRMemoryAccess",
            "param" : 3,
            "proto" : "AccessType CheckISRMemoryAccess(ISRType ISRID,MemoryStartAddressType Address,MemorySizeType Size);"
         },
         "30" : {
            "name" : "IocSend__IocId_[__SenderId_]",
            "param" : 1,
            "proto" : "Std_ReturnType IocSend__IocId_[__SenderId_](_Data_ IN);"
         },
         "31" : {
            "name" : "IocWrite__IocId_[__SenderId_]",
            "param" : 1,
            "proto" : "Std_ReturnType IocWrite__IocId_[__SenderId_](_Data_ IN);"
         },
         "32" : {
            "name" : "IocSendGroup__IocId_",
            "param" : 3,
            "proto" : "Std_ReturnType IocSendGroup__IocId_(_Data1_ IN1,_Data2_ IN2,...);"
         },
         "33" : {
            "name" : "IocWriteGroup__IocId_",
            "param" : 3,
            "proto" : "Std_ReturnType IocWriteGroup__IocId_(_Data1_ IN1,_Data2_ IN2,...);"
         },
         "34" : {
            "name" : "IocReceive__IocId_",
            "param" : 1,
            "proto" : "Std_ReturnType IocReceive__IocId_(_Data_ OUT);"
         },
         "35" : {
            "name" : "IocRead__IocId_",
            "param" : 1,
            "proto" : "Std_ReturnType IocRead__IocId_(_Data_ OUT);"
         },
         "36" : {
            "name" : "IocReceiveGroup__IocId_",
            "param" : 3,
            "proto" : "Std_ReturnType IocReceiveGroup__IocId_(_Data1_ OUT1,_Data2_ OUT2,...);"
         },
         "37" : {
            "name" : "IocReadGroup__IocId_",
            "param" : 3,
            "proto" : "Std_ReturnType IocReadGroup__IocId_(_Data1_ OUT1,_Data2_ OUT2,...);"
         },
         "38" : {
            "name" : "IocEmptyQueue__IocId_",
            "param" : 0,
            "proto" : "Std_ReturnType IocEmptyQueue__IocId_();"
         },
         "39" : {
            "name" : "GetCurrentApplicationID",
            "param" : 0,
            "proto" : "ApplicationType GetCurrentApplicationID();"
         },
         "4" : {
            "name" : "CheckTaskMemoryAccess",
            "param" : 3,
            "proto" : "AccessType CheckTaskMemoryAccess(TaskType TaskID,MemoryStartAddressType Address,MemorySizeType Size);"
         },
         "5" : {
            "name" : "CheckObjectAccess",
            "param" : 4,
            "proto" : "ObjectAccessType CheckObjectAccess(ApplicationType ApplID,ObjectTypeType ObjectType,void ...);"
         },
         "6" : {
            "name" : "CheckObjectOwnership",
            "param" : 3,
            "proto" : "ApplicationType CheckObjectOwnership(ObjectTypeType ObjectType,void ...);"
         },
         "7" : {
            "name" : "StartScheduleTableRel",
            "param" : 2,
            "proto" : "StatusType StartScheduleTableRel(ScheduleTableType ScheduleTableID,TickType Offset);"
         },
         "8" : {
            "name" : "StartScheduleTableAbs",
            "param" : 2,
            "proto" : "StatusType StartScheduleTableAbs(ScheduleTableType ScheduleTableID,TickType Start);"
         },
         "9" : {
            "name" : "StopScheduleTable",
            "param" : 1,
            "proto" : "StatusType StopScheduleTable(ScheduleTableType ScheduleTableID);"
         }
      }
   },
   "10" : {
      "abbreviation" : "EcuM",
      "services" : {}
   },
   "100" : {
      "abbreviation" : "Gpt",
      "services" : {
         "0" : {
            "name" : "Gpt_GetVersionInfo",
            "param" : 1,
            "proto" : "void Gpt_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "1" : {
            "name" : "Gpt_Init",
            "param" : 1,
            "proto" : "void Gpt_Init(const Gpt_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "Gpt_DisableWakeup",
            "param" : 1,
            "proto" : "void Gpt_DisableWakeup(Gpt_ChannelType Channel);"
         },
         "11" : {
            "name" : "Gpt_EnableWakeup",
            "param" : 1,
            "proto" : "void Gpt_EnableWakeup(Gpt_ChannelType Channel);"
         },
         "12" : {
            "name" : "Gpt_CheckWakeup",
            "param" : 1,
            "proto" : "void Gpt_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "13" : {
            "name" : "Gpt_GetPredefTimerValue",
            "param" : 2,
            "proto" : "Std_ReturnType Gpt_GetPredefTimerValue(Gpt_PredefTimerType PredefTimer,uint32* TimeValuePtr);"
         },
         "2" : {
            "name" : "Gpt_DeInit",
            "param" : 0,
            "proto" : "void Gpt_DeInit();"
         },
         "3" : {
            "name" : "Gpt_GetTimeElapsed",
            "param" : 1,
            "proto" : "Gpt_ValueType Gpt_GetTimeElapsed(Gpt_ChannelType Channel);"
         },
         "4" : {
            "name" : "Gpt_GetTimeRemaining",
            "param" : 1,
            "proto" : "Gpt_ValueType Gpt_GetTimeRemaining(Gpt_ChannelType Channel);"
         },
         "5" : {
            "name" : "Gpt_StartTimer",
            "param" : 2,
            "proto" : "void Gpt_StartTimer(Gpt_ChannelType Channel,Gpt_ValueType Value);"
         },
         "6" : {
            "name" : "Gpt_StopTimer",
            "param" : 1,
            "proto" : "void Gpt_StopTimer(Gpt_ChannelType Channel);"
         },
         "7" : {
            "name" : "Gpt_EnableNotification",
            "param" : 1,
            "proto" : "void Gpt_EnableNotification(Gpt_ChannelType Channel);"
         },
         "8" : {
            "name" : "Gpt_DisableNotification",
            "param" : 1,
            "proto" : "void Gpt_DisableNotification(Gpt_ChannelType Channel);"
         },
         "9" : {
            "name" : "Gpt_SetMode",
            "param" : 1,
            "proto" : "void Gpt_SetMode(Gpt_ModeType Mode);"
         }
      }
   },
   "101" : {
      "abbreviation" : "Mcu",
      "services" : {
         "0" : {
            "name" : "Mcu_Init",
            "param" : 1,
            "proto" : "void Mcu_Init(const Mcu_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Mcu_InitRamSection",
            "param" : 1,
            "proto" : "Std_ReturnType Mcu_InitRamSection(Mcu_RamSectionType RamSection);"
         },
         "10" : {
            "name" : "Mcu_GetRamState",
            "param" : 0,
            "proto" : "Mcu_RamStateType Mcu_GetRamState();"
         },
         "2" : {
            "name" : "Mcu_InitClock",
            "param" : 1,
            "proto" : "Std_ReturnType Mcu_InitClock(Mcu_ClockType ClockSetting);"
         },
         "3" : {
            "name" : "Mcu_DistributePllClock",
            "param" : 0,
            "proto" : "Std_ReturnType Mcu_DistributePllClock();"
         },
         "4" : {
            "name" : "Mcu_GetPllStatus",
            "param" : 0,
            "proto" : "Mcu_PllStatusType Mcu_GetPllStatus();"
         },
         "5" : {
            "name" : "Mcu_GetResetReason",
            "param" : 0,
            "proto" : "Mcu_ResetType Mcu_GetResetReason();"
         },
         "6" : {
            "name" : "Mcu_GetResetRawValue",
            "param" : 0,
            "proto" : "Mcu_RawResetType Mcu_GetResetRawValue();"
         },
         "7" : {
            "name" : "Mcu_PerformReset",
            "param" : 0,
            "proto" : "void Mcu_PerformReset();"
         },
         "8" : {
            "name" : "Mcu_SetMode",
            "param" : 1,
            "proto" : "void Mcu_SetMode(Mcu_ModeType McuMode);"
         },
         "9" : {
            "name" : "Mcu_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mcu_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "102" : {
      "abbreviation" : "Wdg",
      "services" : {
         "0" : {
            "name" : "Wdg_Init",
            "param" : 1,
            "proto" : "void Wdg_Init(const Wdg_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Wdg_SetMode",
            "param" : 1,
            "proto" : "Std_ReturnType Wdg_SetMode(WdgIf_ModeType Mode);"
         },
         "3" : {
            "name" : "Wdg_SetTriggerCondition",
            "param" : 1,
            "proto" : "void Wdg_SetTriggerCondition(uint16 timeout);"
         },
         "4" : {
            "name" : "Wdg_GetVersionInfo",
            "param" : 1,
            "proto" : "void Wdg_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "103" : {
      "abbreviation" : "CorTst",
      "services" : {
         "0" : {
            "name" : "CorTst_Init",
            "param" : 1,
            "proto" : "void CorTst_Init(const CorTst_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "CorTst_DeInit",
            "param" : 0,
            "proto" : "void CorTst_DeInit();"
         },
         "11" : {
            "name" : "CorTst_MainFunction",
            "param" : 0,
            "proto" : "void CorTst_MainFunction();"
         },
         "2" : {
            "name" : "CorTst_Abort",
            "param" : 0,
            "proto" : "void CorTst_Abort();"
         },
         "3" : {
            "name" : "CorTst_GetState",
            "param" : 0,
            "proto" : "CorTst_StateType CorTst_GetState();"
         },
         "4" : {
            "name" : "CorTst_GetCurrentStatus",
            "param" : 1,
            "proto" : "void CorTst_GetCurrentStatus(CorTst_ErrOkType* ErrOk);"
         },
         "5" : {
            "name" : "CorTst_GetSignature",
            "param" : 0,
            "proto" : "CorTst_CsumSignatureBgndType CorTst_GetSignature();"
         },
         "6" : {
            "name" : "CorTst_GetFgndSignature",
            "param" : 0,
            "proto" : "CorTst_CsumSignatureType CorTst_GetFgndSignature();"
         },
         "7" : {
            "name" : "CorTst_Start",
            "param" : 1,
            "proto" : "Std_ReturnType CorTst_Start(CorTst_TestIdFgndType TestId);"
         },
         "8" : {
            "name" : "CorTst_GetVersionInfo",
            "param" : 1,
            "proto" : "void CorTst_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "104" : {
      "abbreviation" : "FlsTst",
      "services" : {
         "0" : {
            "name" : "FlsTst_Init",
            "param" : 1,
            "proto" : "void FlsTst_Init(const FlsTst_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "FlsTst_DeInit",
            "param" : 0,
            "proto" : "void FlsTst_DeInit();"
         },
         "10" : {
            "name" : "FlsTst_GetTestSignatureFgnd",
            "param" : 0,
            "proto" : "FlsTst_TestSignatureFgndType FlsTst_GetTestSignatureFgnd();"
         },
         "11" : {
            "name" : "FlsTst_GetErrorDetails",
            "param" : 0,
            "proto" : "FlsTst_ErrorDetailsType FlsTst_GetErrorDetails();"
         },
         "12" : {
            "name" : "FlsTst_TestEcc",
            "param" : 0,
            "proto" : "Std_ReturnType FlsTst_TestEcc();"
         },
         "13" : {
            "name" : "FlsTst_MainFunction",
            "param" : 0,
            "proto" : "void FlsTst_MainFunction();"
         },
         "14" : {
            "name" : "FlsTst_TestCompletedNotification",
            "param" : 0,
            "proto" : "void FlsTst_TestCompletedNotification();"
         },
         "15" : {
            "name" : "FlsTst_GetTestResultFgnd",
            "param" : 0,
            "proto" : "FlsTst_TestResultFgndType FlsTst_GetTestResultFgnd();"
         },
         "2" : {
            "name" : "FlsTst_StartFgnd",
            "param" : 1,
            "proto" : "Std_ReturnType FlsTst_StartFgnd(FlsTst_BlockIdFgndType FgndBlockId);"
         },
         "3" : {
            "name" : "FlsTst_Abort",
            "param" : 0,
            "proto" : "void FlsTst_Abort();"
         },
         "4" : {
            "name" : "FlsTst_Suspend",
            "param" : 0,
            "proto" : "void FlsTst_Suspend();"
         },
         "5" : {
            "name" : "FlsTst_Resume",
            "param" : 0,
            "proto" : "void FlsTst_Resume();"
         },
         "6" : {
            "name" : "FlsTst_GetCurrentState",
            "param" : 0,
            "proto" : "FlsTst_StateType FlsTst_GetCurrentState();"
         },
         "7" : {
            "name" : "FlsTst_GetTestResultBgnd",
            "param" : 0,
            "proto" : "FlsTst_TestResultBgndType FlsTst_GetTestResultBgnd();"
         },
         "8" : {
            "name" : "FlsTst_GetVersionInfo",
            "param" : 1,
            "proto" : "void FlsTst_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "9" : {
            "name" : "FlsTst_GetTestSignatureBgnd",
            "param" : 0,
            "proto" : "FlsTst_TestSignatureBgndType FlsTst_GetTestSignatureBgnd();"
         }
      }
   },
   "11" : {
      "abbreviation" : "FiM",
      "services" : {
         "0" : {
            "name" : "FiM_Init",
            "param" : 1,
            "proto" : "void FiM_Init(const FiM_ConfigType* FiMConfigPtr);"
         },
         "1" : {
            "name" : "FiM_GetFunctionPermission",
            "param" : 2,
            "proto" : "Std_ReturnType FiM_GetFunctionPermission(FiM_FunctionIdType FID,boolean* Permission);"
         },
         "2" : {
            "name" : "FiM_DemTriggerOnEventStatus",
            "param" : 3,
            "proto" : "void FiM_DemTriggerOnEventStatus(Dem_EventIdType EventId,Dem_UdsStatusByteType EventStatusByteOld,Dem_UdsStatusByteType EventStatusByteNew);"
         },
         "3" : {
            "name" : "FiM_DemInit",
            "param" : 0,
            "proto" : "void FiM_DemInit();"
         },
         "4" : {
            "name" : "FiM_GetVersionInfo",
            "param" : 1,
            "proto" : "void FiM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "FiM_MainFunction",
            "param" : 0,
            "proto" : "void FiM_MainFunction();"
         },
         "6" : {
            "name" : "FiM_DemTriggerOnComponentStatus",
            "param" : 2,
            "proto" : "void FiM_DemTriggerOnComponentStatus(Dem_ComponentIdType ComponentId,boolean ComponentFailedStatus);"
         },
         "7" : {
            "name" : "FiM_SetFunctionAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType FiM_SetFunctionAvailable(FiM_FunctionIdType FID,boolean Availability);"
         }
      }
   },
   "110" : {
      "abbreviation" : "Csm",
      "services" : {
         "0" : {
            "name" : "Csm_Init",
            "param" : 0,
            "proto" : "void Csm_Init();"
         },
         "1" : {
            "name" : "Csm_MainFunction",
            "param" : 0,
            "proto" : "void Csm_MainFunction();"
         },
         "10" : {
            "name" : "Csm_MacVerifyUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_MacVerifyUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "11" : {
            "name" : "Csm_MacVerifyFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_MacVerifyFinish(Csm_ConfigIdType cfgId,const uint8* MacPtr,uint32 MacLength,Csm_VerifyResultType* resultPtr);"
         },
         "12" : {
            "name" : "Csm_RandomSeedStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_RandomSeedStart(Csm_ConfigIdType cfgId);"
         },
         "13" : {
            "name" : "Csm_RandomSeedUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_RandomSeedUpdate(Csm_ConfigIdType cfgId,const uint8* seedPtr,uint32 seedLength);"
         },
         "14" : {
            "name" : "Csm_RandomSeedFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_RandomSeedFinish(Csm_ConfigIdType cfgId);"
         },
         "15" : {
            "name" : "Csm_RandomGenerate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_RandomGenerate(Csm_ConfigIdType cfgId,uint8* resultPtr,uint32 resultLength);"
         },
         "16" : {
            "name" : "Csm_SymBlockEncryptStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_SymBlockEncryptStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr);"
         },
         "17" : {
            "name" : "Csm_SymBlockEncryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_SymBlockEncryptUpdate(Csm_ConfigIdType cfgId,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "18" : {
            "name" : "Csm_SymBlockEncryptFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymBlockEncryptFinish(Csm_ConfigIdType cfgId);"
         },
         "19" : {
            "name" : "Csm_SymBlockDecryptStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_SymBlockDecryptStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr);"
         },
         "20" : {
            "name" : "Csm_SymBlockDecryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_SymBlockDecryptUpdate(Csm_ConfigIdType cfgId,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "21" : {
            "name" : "Csm_SymBlockDecryptFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymBlockDecryptFinish(Csm_ConfigIdType cfgId);"
         },
         "22" : {
            "name" : "Csm_SymEncryptStart",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_SymEncryptStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr,const uint8* InitVectorPtr,uint32 InitVectorLength);"
         },
         "23" : {
            "name" : "Csm_SymEncryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_SymEncryptUpdate(Csm_ConfigIdType cfgId,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "24" : {
            "name" : "Csm_SymEncryptFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymEncryptFinish(Csm_ConfigIdType cfgId,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "25" : {
            "name" : "Csm_SymDecryptStart",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_SymDecryptStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr,const uint8* InitVectorPtr,uint32 InitVectorLength);"
         },
         "26" : {
            "name" : "Csm_SymDecryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_SymDecryptUpdate(Csm_ConfigIdType cfgId,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "27" : {
            "name" : "Csm_SymDecryptFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymDecryptFinish(Csm_ConfigIdType cfgId,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "28" : {
            "name" : "Csm_AsymEncryptStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_AsymEncryptStart(Csm_ConfigIdType cfgId,const Csm_AsymPublicKeyType* keyPtr);"
         },
         "29" : {
            "name" : "Csm_AsymEncryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_AsymEncryptUpdate(Csm_ConfigIdType cfgId,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "3" : {
            "name" : "Csm_HashStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_HashStart(Csm_ConfigIdType cfgId);"
         },
         "30" : {
            "name" : "Csm_AsymEncryptFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymEncryptFinish(Csm_ConfigIdType cfgId,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "31" : {
            "name" : "Csm_AsymDecryptStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_AsymDecryptStart(Csm_ConfigIdType cfgId,const Csm_AsymPrivateKeyType* keyPtr);"
         },
         "32" : {
            "name" : "Csm_AsymDecryptUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_AsymDecryptUpdate(Csm_ConfigIdType cfgId,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "33" : {
            "name" : "Csm_AsymDecryptFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymDecryptFinish(Csm_ConfigIdType cfgId,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "34" : {
            "name" : "Csm_SignatureGenerateStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_SignatureGenerateStart(Csm_ConfigIdType cfgId,const Csm_AsymPrivateKeyType* keyPtr);"
         },
         "35" : {
            "name" : "Csm_SignatureGenerateUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SignatureGenerateUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "36" : {
            "name" : "Csm_SignatureGenerateFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SignatureGenerateFinish(Csm_ConfigIdType cfgId,uint8* resultPtr,uint32* resultLengthPtr);"
         },
         "37" : {
            "name" : "Csm_SignatureVerifyStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_SignatureVerifyStart(Csm_ConfigIdType cfgId,const Csm_AsymPublicKeyType* keyPtr);"
         },
         "38" : {
            "name" : "Csm_SignatureVerifyUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SignatureVerifyUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "39" : {
            "name" : "Csm_SignatureVerifyFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_SignatureVerifyFinish(Csm_ConfigIdType cfgId,const uint8* signaturePtr,uint32 signatureLength,Csm_VerifyResultType* resultPtr);"
         },
         "4" : {
            "name" : "Csm_HashUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_HashUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "40" : {
            "name" : "Csm_ChecksumStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_ChecksumStart(Csm_ConfigIdType cfgId);"
         },
         "41" : {
            "name" : "Csm_ChecksumUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_ChecksumUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "42" : {
            "name" : "Csm_ChecksumFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_ChecksumFinish(Csm_ConfigIdType cfgId,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "43" : {
            "name" : "Csm_KeyDeriveStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_KeyDeriveStart(Csm_ConfigIdType cfgId,uint32 keyLength,uint32 iterations);"
         },
         "44" : {
            "name" : "Csm_KeyDeriveUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_KeyDeriveUpdate(Csm_ConfigIdType cfgId,const uint8* passwordPtr,uint32 passwordLength,const uint8* saltPtr,uint32 saltLength);"
         },
         "45" : {
            "name" : "Csm_KeyDeriveFinish",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_KeyDeriveFinish(Csm_ConfigIdType cfgId,Csm_SymKeyType* keyPtr);"
         },
         "46" : {
            "name" : "Csm_KeyExchangeCalcPubVal",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcPubVal(Csm_ConfigIdType cfgId,const Csm_KeyExchangeBaseType* basePtr,const Csm_KeyExchangePrivateType* privateValuePtr,uint8* publicValuePtr,uint32* publicValueLengthPtr);"
         },
         "47" : {
            "name" : "Csm_KeyExchangeCalcSecretStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSecretStart(Csm_ConfigIdType cfgId,const Csm_KeyExchangeBaseType* basePtr,const Csm_KeyExchangePrivateType* privateValuePtr);"
         },
         "48" : {
            "name" : "Csm_KeyExchangeCalcSecretUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSecretUpdate(Csm_ConfigIdType cfgId,const uint8* partnerPublicValuePtr,uint32 partnerPublicValueLength);"
         },
         "49" : {
            "name" : "Csm_KeyExchangeCalcSecretFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSecretFinish(Csm_ConfigIdType cfgId,uint8* sharedSecretPtr,uint32* sharedSecretLengthPtr,boolean TruncationIsAllowed);"
         },
         "5" : {
            "name" : "Csm_HashFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_HashFinish(Csm_ConfigIdType cfgId,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "50" : {
            "name" : "Csm_SymKeyExtractStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymKeyExtractStart(Csm_ConfigIdType cfgId);"
         },
         "51" : {
            "name" : "Csm_SymKeyExtractUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyExtractUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "52" : {
            "name" : "Csm_SymKeyExtractFinish",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_SymKeyExtractFinish(Csm_ConfigIdType cfgId,Csm_SymKeyType* keyPtr);"
         },
         "53" : {
            "name" : "Csm_AsymPublicKeyExtractStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyExtractStart(Csm_ConfigIdType cfgId);"
         },
         "54" : {
            "name" : "Csm_AsymPublicKeyExtractUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyExtractUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "55" : {
            "name" : "Csm_AsymPublicKeyExtractFinish",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyExtractFinish(Csm_ConfigIdType cfgId,Csm_AsymPublicKeyType* keyPtr);"
         },
         "56" : {
            "name" : "Csm_AsymPrivateKeyExtractStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyExtractStart(Csm_ConfigIdType cfgId);"
         },
         "57" : {
            "name" : "Csm_AsymPrivateKeyExtractUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyExtractUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "58" : {
            "name" : "Csm_AsymPrivateKeyExtractFinish",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyExtractFinish(Csm_ConfigIdType cfgId,Csm_AsymPrivateKeyType* keyPtr);"
         },
         "59" : {
            "name" : "Csm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Csm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "6" : {
            "name" : "Csm_MacGenerateStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_MacGenerateStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr);"
         },
         "61" : {
            "name" : "Csm_KeyExchangeCalcSymKeyStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSymKeyStart(Csm_ConfigIdType cfgId,const Csm_KeyExchangeBaseType* basePtr,const Csm_KeyExchangePrivateType* privateValuePtr);"
         },
         "62" : {
            "name" : "Csm_KeyExchangeCalcSymKeyUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSymKeyUpdate(Csm_ConfigIdType cfgId,const uint8* partnerPublicValuePtr,uint32 partnerPublicValueLength);"
         },
         "63" : {
            "name" : "Csm_KeyExchangeCalcSymKeyFinish",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_KeyExchangeCalcSymKeyFinish(Csm_ConfigIdType cfgId,Csm_SymKeyType* sharedKeyPtr);"
         },
         "64" : {
            "name" : "Csm_SymKeyWrapSymStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyWrapSymStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr,const Csm_SymKeyType* wrappingKeyPtr);"
         },
         "65" : {
            "name" : "Csm_SymKeyWrapSymUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyWrapSymUpdate(Csm_ConfigIdType cfgId,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "66" : {
            "name" : "Csm_SymKeyWrapSymFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymKeyWrapSymFinish(Csm_ConfigIdType cfgId);"
         },
         "67" : {
            "name" : "Csm_SymKeyWrapAsymStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyWrapAsymStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr,const Csm_AsymPublicKeyType* wrappingKeyPtr);"
         },
         "68" : {
            "name" : "Csm_SymKeyWrapAsymUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyWrapAsymUpdate(Csm_ConfigIdType cfgId,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "69" : {
            "name" : "Csm_SymKeyWrapAsymFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymKeyWrapAsymFinish(Csm_ConfigIdType cfgId);"
         },
         "7" : {
            "name" : "Csm_MacGenerateUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_MacGenerateUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "70" : {
            "name" : "Csm_AsymPrivateKeyWrapSymStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapSymStart(Csm_ConfigIdType cfgId,const Csm_AsymPrivateKeyType* keyPtr,const Csm_SymKeyType* wrappingKeyPtr);"
         },
         "71" : {
            "name" : "Csm_AsymPrivateKeyWrapSymUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapSymUpdate(Csm_ConfigIdType cfgId,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "72" : {
            "name" : "Csm_AsymPrivateKeyWrapSymFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapSymFinish(Csm_ConfigIdType cfgId);"
         },
         "73" : {
            "name" : "Csm_AsymPrivateKeyWrapAsymStart",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapAsymStart(Csm_ConfigIdType cfgId,const Csm_AsymPrivateKeyType* keyPtr,const Csm_AsymPublicKeyType* wrappingKeyPtr);"
         },
         "74" : {
            "name" : "Csm_AsymPrivateKeyWrapAsymUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapAsymUpdate(Csm_ConfigIdType cfgId,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "75" : {
            "name" : "Csm_AsymPrivateKeyWrapAsymFinish",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyWrapAsymFinish(Csm_ConfigIdType cfgId);"
         },
         "76" : {
            "name" : "Csm_KeyDeriveSymKey",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_KeyDeriveSymKey(Csm_ConfigIdType cfgId,const Csm_SymKeyType* baseKeyPtr,const uint8* customisationValPtr,uint32 customisationValLength,Csm_SymKeyType* derivedKeyPtr);"
         },
         "77" : {
            "name" : "Csm_CompressStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_CompressStart(Csm_ConfigIdType cfgId);"
         },
         "78" : {
            "name" : "Csm_CompressUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_CompressUpdate(Csm_ConfigIdType cfgId,const uint8* plainTextPtr,uint32 plainTextLength,uint8* compressedTextPtr,uint32* compressedTextLengthPtr);"
         },
         "79" : {
            "name" : "Csm_CompressFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_CompressFinish(Csm_ConfigIdType cfgId,uint8* compressedTextPtr,uint32* compressTextLengthPtr);"
         },
         "8" : {
            "name" : "Csm_MacGenerateFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_MacGenerateFinish(Csm_ConfigIdType cfgId,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "80" : {
            "name" : "Csm_DecompressStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_DecompressStart(Csm_ConfigIdType cfgId);"
         },
         "81" : {
            "name" : "Csm_DecompressUpdate",
            "param" : 5,
            "proto" : "Std_ReturnType Csm_DecompressUpdate(Csm_ConfigIdType cfgId,const uint8* plainTextPtr,uint32 plainTextLength,uint8* decompressedTextPtr,uint32* decompressedTextLengthPtr);"
         },
         "82" : {
            "name" : "Csm_DecompressFinish",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_DecompressFinish(Csm_ConfigIdType cfgId,uint8* decompressTextPtr,uint32* decompressTextLengthPtr);"
         },
         "83" : {
            "name" : "Csm_SymKeyGenerate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyGenerate(Csm_ConfigIdType cfgId,Csm_SymKeyType* keyPtr,uint32 keyLength);"
         },
         "84" : {
            "name" : "Csm_SymKeyUpdateStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_SymKeyUpdateStart(Csm_ConfigIdType cfgId);"
         },
         "85" : {
            "name" : "Csm_SymKeyUpdateUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_SymKeyUpdateUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "86" : {
            "name" : "Csm_SymKeyUpdateFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_SymKeyUpdateFinish(Csm_ConfigIdType cfgId,Csm_SymKeyType* targetKeyPtr,uint8* proofPtr,uint32* proofLengthPtr);"
         },
         "87" : {
            "name" : "Csm_AsymPublicKeyUpdateStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyUpdateStart(Csm_ConfigIdType cfgId);"
         },
         "88" : {
            "name" : "Csm_AsymPublicKeyUpdateUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyUpdateUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "89" : {
            "name" : "Csm_AsymPublicKeyUpdateFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_AsymPublicKeyUpdateFinish(Csm_ConfigIdType cfgId,Csm_AsymPublicKeyType* targetKeyPtr,uint8* proofPtr,uint32* proofLengthPtr);"
         },
         "9" : {
            "name" : "Csm_MacVerifyStart",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_MacVerifyStart(Csm_ConfigIdType cfgId,const Csm_SymKeyType* keyPtr);"
         },
         "90" : {
            "name" : "Csm_AsymPrivateKeyUpdateStart",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyUpdateStart(Csm_ConfigIdType cfgId);"
         },
         "91" : {
            "name" : "Csm_AsymPrivateKeyUpdateUpdate",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyUpdateUpdate(Csm_ConfigIdType cfgId,const uint8* dataPtr,uint32 dataLength);"
         },
         "92" : {
            "name" : "Csm_AsymPrivateKeyUpdateFinish",
            "param" : 4,
            "proto" : "Std_ReturnType Csm_AsymPrivateKeyUpdateFinish(Csm_ConfigIdType cfgId,Csm_AsymPrivateKeyType* targetKeyPtr,uint8* proofPtr,uint32* proofLengthPtr);"
         }
      }
   },
   "12" : {
      "abbreviation" : "ComM",
      "services" : {
         "1" : {
            "name" : "ComM_Init",
            "param" : 1,
            "proto" : "void ComM_Init(const ComM_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "Com_SendSignal",
            "param" : 2,
            "proto" : "uint8 Com_SendSignal(Com_SignalIdType SignalId,const void* SignalDataPtr);"
         },
         "11" : {
            "name" : "Com_ReceiveSignal",
            "param" : 2,
            "proto" : "uint8 Com_ReceiveSignal(Com_SignalIdType SignalId,void* SignalDataPtr);"
         },
         "12" : {
            "name" : "ComM_LimitECUToNoComMode",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_LimitECUToNoComMode(boolean Status);"
         },
         "13" : {
            "name" : "ComM_ReadInhibitCounter",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_ReadInhibitCounter(uint16* CounterValue);"
         },
         "14" : {
            "name" : "ComM_ResetInhibitCounter",
            "param" : 0,
            "proto" : "Std_ReturnType ComM_ResetInhibitCounter();"
         },
         "15" : {
            "name" : "ComM_SetECUGroupClassification",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_SetECUGroupClassification(ComM_InhibitionStatusType Status);"
         },
         "16" : {
            "name" : "ComM_GetVersionInfo",
            "param" : 1,
            "proto" : "void ComM_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         },
         "2" : {
            "name" : "ComM_DeInit",
            "param" : 0,
            "proto" : "void ComM_DeInit();"
         },
         "21" : {
            "name" : "ComM_Nm_NetworkStartIndication",
            "param" : 1,
            "proto" : "void ComM_Nm_NetworkStartIndication(NetworkHandleType Channel);"
         },
         "24" : {
            "name" : "ComM_Nm_NetworkMode",
            "param" : 1,
            "proto" : "void ComM_Nm_NetworkMode(NetworkHandleType Channel);"
         },
         "25" : {
            "name" : "ComM_Nm_PrepareBusSleepMode",
            "param" : 1,
            "proto" : "void ComM_Nm_PrepareBusSleepMode(NetworkHandleType Channel);"
         },
         "26" : {
            "name" : "ComM_Nm_BusSleepMode",
            "param" : 1,
            "proto" : "void ComM_Nm_BusSleepMode(NetworkHandleType Channel);"
         },
         "27" : {
            "name" : "ComM_Nm_RestartIndication",
            "param" : 1,
            "proto" : "void ComM_Nm_RestartIndication(NetworkHandleType Channel);"
         },
         "3" : {
            "name" : "ComM_GetStatus",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_GetStatus(ComM_InitStatusType* Status);"
         },
         "31" : {
            "name" : "ComM_DCM_ActiveDiagnostic",
            "param" : 1,
            "proto" : "void ComM_DCM_ActiveDiagnostic(NetworkHandleType Channel);"
         },
         "32" : {
            "name" : "ComM_DCM_InactiveDiagnostic",
            "param" : 1,
            "proto" : "void ComM_DCM_InactiveDiagnostic(NetworkHandleType Channel);"
         },
         "4" : {
            "name" : "ComM_GetInhibitionStatus",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetInhibitionStatus(NetworkHandleType Channel,ComM_InhibitionStatusType* Status);"
         },
         "42" : {
            "name" : "ComM_EcuM_WakeUpIndication",
            "param" : 1,
            "proto" : "void ComM_EcuM_WakeUpIndication(NetworkHandleType Channel);"
         },
         "5" : {
            "name" : "ComM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_RequestComMode(ComM_UserHandleType User,ComM_ModeType ComMode);"
         },
         "51" : {
            "name" : "ComM_BusSM_ModeIndication",
            "param" : 2,
            "proto" : "void ComM_BusSM_ModeIndication(NetworkHandleType Channel,ComM_ModeType* ComMode);"
         },
         "52" : {
            "name" : "ComM_GetState",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetState(NetworkHandleType Channel,ComM_StateType* State);"
         },
         "53" : {
            "name" : "ComM_CommunicationAllowed",
            "param" : 2,
            "proto" : "void ComM_CommunicationAllowed(NetworkHandleType Channel,boolean Allowed);"
         },
         "54" : {
            "name" : "ComM_COMCbk__sn_",
            "param" : 0,
            "proto" : "void ComM_COMCbk__sn_();"
         },
         "6" : {
            "name" : "ComM_GetMaxComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetMaxComMode(ComM_UserHandleType User,ComM_ModeType* ComMode);"
         },
         "7" : {
            "name" : "ComM_GetRequestedComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetRequestedComMode(ComM_UserHandleType User,ComM_ModeType* ComMode);"
         },
         "8" : {
            "name" : "ComM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetCurrentComMode(ComM_UserHandleType User,ComM_ModeType* ComMode);"
         },
         "9" : {
            "name" : "ComM_PreventWakeUp",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_PreventWakeUp(NetworkHandleType Channel,boolean Status);"
         },
         "96" : {
            "name" : "ComM_MainFunction__Channel_Id_",
            "param" : 0,
            "proto" : "void ComM_MainFunction__Channel_Id_();"
         }
      }
   },
   "120" : {
      "abbreviation" : "Dio",
      "services" : {
         "0" : {
            "name" : "Dio_ReadChannel",
            "param" : 1,
            "proto" : "Dio_LevelType Dio_ReadChannel(Dio_ChannelType ChannelId);"
         },
         "1" : {
            "name" : "Dio_WriteChannel",
            "param" : 2,
            "proto" : "void Dio_WriteChannel(Dio_ChannelType ChannelId,Dio_LevelType Level);"
         },
         "17" : {
            "name" : "Dio_FlipChannel",
            "param" : 1,
            "proto" : "Dio_LevelType Dio_FlipChannel(Dio_ChannelType ChannelId);"
         },
         "18" : {
            "name" : "Dio_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dio_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "2" : {
            "name" : "Dio_ReadPort",
            "param" : 1,
            "proto" : "Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId);"
         },
         "3" : {
            "name" : "Dio_WritePort",
            "param" : 2,
            "proto" : "void Dio_WritePort(Dio_PortType PortId,Dio_PortLevelType Level);"
         },
         "4" : {
            "name" : "Dio_ReadChannelGroup",
            "param" : 1,
            "proto" : "Dio_PortLevelType Dio_ReadChannelGroup(const Dio_ChannelGroupType* ChannelGroupIdPtr);"
         },
         "5" : {
            "name" : "Dio_WriteChannelGroup",
            "param" : 2,
            "proto" : "void Dio_WriteChannelGroup(const Dio_ChannelGroupType* ChannelGroupIdPtr,Dio_PortLevelType Level);"
         }
      }
   },
   "121" : {
      "abbreviation" : "Pwm",
      "services" : {
         "5" : {
            "name" : "Pwm_GetOutputState",
            "param" : 1,
            "proto" : "Pwm_OutputStateType Pwm_GetOutputState(Pwm_ChannelType ChannelNumber);"
         },
         "96" : {
            "name" : "IoHwAb_Pwm_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Pwm_NotifyReadyForPowerState_Mode_();"
         }
      }
   },
   "122" : {
      "abbreviation" : "Icu",
      "services" : {
         "0" : {
            "name" : "Icu_Init",
            "param" : 1,
            "proto" : "void Icu_Init(const Icu_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Icu_DeInit",
            "param" : 0,
            "proto" : "void Icu_DeInit();"
         },
         "10" : {
            "name" : "Icu_StopTimestamp",
            "param" : 1,
            "proto" : "void Icu_StopTimestamp(Icu_ChannelType Channel);"
         },
         "11" : {
            "name" : "Icu_GetTimestampIndex",
            "param" : 1,
            "proto" : "Icu_IndexType Icu_GetTimestampIndex(Icu_ChannelType Channel);"
         },
         "12" : {
            "name" : "Icu_ResetEdgeCount",
            "param" : 1,
            "proto" : "void Icu_ResetEdgeCount(Icu_ChannelType Channel);"
         },
         "13" : {
            "name" : "Icu_EnableEdgeCount",
            "param" : 1,
            "proto" : "void Icu_EnableEdgeCount(Icu_ChannelType Channel);"
         },
         "14" : {
            "name" : "Icu_DisableEdgeCount",
            "param" : 1,
            "proto" : "void Icu_DisableEdgeCount(Icu_ChannelType Channel);"
         },
         "15" : {
            "name" : "Icu_GetEdgeNumbers",
            "param" : 1,
            "proto" : "Icu_EdgeNumberType Icu_GetEdgeNumbers(Icu_ChannelType Channel);"
         },
         "16" : {
            "name" : "Icu_GetTimeElapsed",
            "param" : 1,
            "proto" : "Icu_ValueType Icu_GetTimeElapsed(Icu_ChannelType Channel);"
         },
         "17" : {
            "name" : "Icu_GetDutyCycleValues",
            "param" : 2,
            "proto" : "void Icu_GetDutyCycleValues(Icu_ChannelType Channel,Icu_DutyCycleType* DutyCycleValues);"
         },
         "18" : {
            "name" : "Icu_GetVersionInfo",
            "param" : 1,
            "proto" : "void Icu_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "19" : {
            "name" : "Icu_StartSignalMeasurement",
            "param" : 1,
            "proto" : "void Icu_StartSignalMeasurement(Icu_ChannelType Channel);"
         },
         "2" : {
            "name" : "Icu_SetMode",
            "param" : 1,
            "proto" : "void Icu_SetMode(Icu_ModeType Mode);"
         },
         "20" : {
            "name" : "Icu_StopSignalMeasurement",
            "param" : 1,
            "proto" : "void Icu_StopSignalMeasurement(Icu_ChannelType Channel);"
         },
         "21" : {
            "name" : "Icu_CheckWakeup",
            "param" : 1,
            "proto" : "void Icu_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "22" : {
            "name" : "Icu_EnableEdgeDetection",
            "param" : 1,
            "proto" : "void Icu_EnableEdgeDetection(Icu_ChannelType Channel);"
         },
         "23" : {
            "name" : "Icu_DisableEdgeDetection",
            "param" : 1,
            "proto" : "void Icu_DisableEdgeDetection(Icu_ChannelType Channel);"
         },
         "3" : {
            "name" : "Icu_DisableWakeup",
            "param" : 1,
            "proto" : "void Icu_DisableWakeup(Icu_ChannelType Channel);"
         },
         "4" : {
            "name" : "Icu_EnableWakeup",
            "param" : 1,
            "proto" : "void Icu_EnableWakeup(Icu_ChannelType Channel);"
         },
         "5" : {
            "name" : "Icu_SetActivationCondition",
            "param" : 2,
            "proto" : "void Icu_SetActivationCondition(Icu_ChannelType Channel,Icu_ActivationType Activation);"
         },
         "6" : {
            "name" : "Icu_DisableNotification",
            "param" : 1,
            "proto" : "void Icu_DisableNotification(Icu_ChannelType Channel);"
         },
         "7" : {
            "name" : "Icu_EnableNotification",
            "param" : 1,
            "proto" : "void Icu_EnableNotification(Icu_ChannelType Channel);"
         },
         "8" : {
            "name" : "Icu_GetInputState",
            "param" : 1,
            "proto" : "Icu_InputStateType Icu_GetInputState(Icu_ChannelType Channel);"
         },
         "9" : {
            "name" : "Icu_StartTimestamp",
            "param" : 4,
            "proto" : "void Icu_StartTimestamp(Icu_ChannelType Channel,Icu_ValueType* BufferPtr,uint16 BufferSize,uint16 NotifyInterval);"
         }
      }
   },
   "123" : {
      "abbreviation" : "Adc",
      "services" : {
         "0" : {
            "name" : "Adc_Init",
            "param" : 1,
            "proto" : "void Adc_Init(const Adc_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Adc_DeInit",
            "param" : 0,
            "proto" : "void Adc_DeInit();"
         },
         "10" : {
            "name" : "Adc_GetVersionInfo",
            "param" : 1,
            "proto" : "void Adc_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "11" : {
            "name" : "Adc_GetStreamLastPointer",
            "param" : 2,
            "proto" : "Adc_StreamNumSampleType Adc_GetStreamLastPointer(Adc_GroupType Group,Adc_ValueGroupType** PtrToSamplePtr);"
         },
         "112" : {
            "name" : "IoHwAb_Adc_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Adc_NotifyReadyForPowerState_Mode_();"
         },
         "12" : {
            "name" : "Adc_SetupResultBuffer",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_SetupResultBuffer(Adc_GroupType Group,Adc_ValueGroupType* DataBufferPtr);"
         },
         "16" : {
            "name" : "Adc_SetPowerState",
            "param" : 1,
            "proto" : "Std_ReturnType Adc_SetPowerState(Adc_PowerStateRequestResultType* Result);"
         },
         "17" : {
            "name" : "Adc_GetCurrentPowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_GetCurrentPowerState(Adc_PowerStateType* CurrentPowerState,Adc_PowerStateRequestResultType* Result);"
         },
         "18" : {
            "name" : "Adc_GetTargetPowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_GetTargetPowerState(Adc_PowerStateType* TargetPowerState,Adc_PowerStateRequestResultType* Result);"
         },
         "19" : {
            "name" : "Adc_PreparePowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_PreparePowerState(Adc_PowerStateType PowerState,Adc_PowerStateRequestResultType* Result);"
         },
         "2" : {
            "name" : "Adc_StartGroupConversion",
            "param" : 1,
            "proto" : "void Adc_StartGroupConversion(Adc_GroupType Group);"
         },
         "20" : {
            "name" : "Adc_Main_PowerTransitionManager",
            "param" : 0,
            "proto" : "void Adc_Main_PowerTransitionManager();"
         },
         "3" : {
            "name" : "Adc_StopGroupConversion",
            "param" : 1,
            "proto" : "void Adc_StopGroupConversion(Adc_GroupType Group);"
         },
         "32" : {
            "name" : "IoHwAb_AdcNotification_groupID_",
            "param" : 0,
            "proto" : "void IoHwAb_AdcNotification_groupID_();"
         },
         "4" : {
            "name" : "Adc_ReadGroup",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_ReadGroup(Adc_GroupType Group,Adc_ValueGroupType* DataBufferPtr);"
         },
         "5" : {
            "name" : "Adc_EnableHardwareTrigger",
            "param" : 1,
            "proto" : "void Adc_EnableHardwareTrigger(Adc_GroupType Group);"
         },
         "6" : {
            "name" : "Adc_DisableHardwareTrigger",
            "param" : 1,
            "proto" : "void Adc_DisableHardwareTrigger(Adc_GroupType Group);"
         },
         "7" : {
            "name" : "Adc_EnableGroupNotification",
            "param" : 1,
            "proto" : "void Adc_EnableGroupNotification(Adc_GroupType Group);"
         },
         "8" : {
            "name" : "Adc_DisableGroupNotification",
            "param" : 1,
            "proto" : "void Adc_DisableGroupNotification(Adc_GroupType Group);"
         },
         "9" : {
            "name" : "Adc_GetGroupStatus",
            "param" : 1,
            "proto" : "Adc_StatusType Adc_GetGroupStatus(Adc_GroupType Group);"
         }
      }
   },
   "124" : {
      "abbreviation" : "Port",
      "services" : {
         "0" : {
            "name" : "Port_Init",
            "param" : 1,
            "proto" : "void Port_Init(const Port_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Port_SetPinDirection",
            "param" : 2,
            "proto" : "void Port_SetPinDirection(Port_PinType Pin,Port_PinDirectionType Direction);"
         },
         "2" : {
            "name" : "Port_RefreshPortDirection",
            "param" : 0,
            "proto" : "void Port_RefreshPortDirection();"
         },
         "3" : {
            "name" : "Port_GetVersionInfo",
            "param" : 1,
            "proto" : "void Port_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "Port_SetPinMode",
            "param" : 2,
            "proto" : "void Port_SetPinMode(Port_PinType Pin,Port_PinModeType Mode);"
         }
      }
   },
   "125" : {
      "abbreviation" : "Ocu",
      "services" : {
         "10" : {
            "name" : "Ocu_DisableNotification",
            "param" : 1,
            "proto" : "void Ocu_DisableNotification(Ocu_ChannelType ChannelNumber);"
         },
         "8" : {
            "name" : "Ocu_SetRelativeThreshold",
            "param" : 2,
            "proto" : "Ocu_ReturnType Ocu_SetRelativeThreshold(Ocu_ChannelType ChannelNumber,Ocu_ValueType RelativeValue);"
         }
      }
   },
   "13" : {
      "abbreviation" : "WdgM",
      "services" : {
         "0" : {
            "name" : "WdgM_Init",
            "param" : 1,
            "proto" : "void WdgM_Init(const WdgM_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "WdgM_DeInit",
            "param" : 0,
            "proto" : "void WdgM_DeInit();"
         },
         "11" : {
            "name" : "WdgM_GetMode",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetMode(WdgM_ModeType* Mode);"
         },
         "12" : {
            "name" : "WdgM_GetLocalStatus",
            "param" : 2,
            "proto" : "Std_ReturnType WdgM_GetLocalStatus(WdgM_SupervisedEntityIdType SEID,WdgM_LocalStatusType* Status);"
         },
         "13" : {
            "name" : "WdgM_GetGlobalStatus",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetGlobalStatus(WdgM_GlobalStatusType* Status);"
         },
         "14" : {
            "name" : "WdgM_CheckpointReached",
            "param" : 2,
            "proto" : "Std_ReturnType WdgM_CheckpointReached(WdgM_SupervisedEntityIdType SEID,WdgM_CheckpointIdType CheckpointID);"
         },
         "15" : {
            "name" : "WdgM_PerformReset",
            "param" : 0,
            "proto" : "void WdgM_PerformReset();"
         },
         "16" : {
            "name" : "WdgM_GetFirstExpiredSEID",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetFirstExpiredSEID(WdgM_SupervisedEntityIdType* SEID);"
         },
         "2" : {
            "name" : "WdgM_GetVersionInfo",
            "param" : 1,
            "proto" : "void WdgM_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "3" : {
            "name" : "WdgM_SetMode",
            "param" : 2,
            "proto" : "Std_ReturnType WdgM_SetMode(WdgM_ModeType Mode,uint16 CallerID);"
         },
         "4" : {
            "name" : "WdgM_UpdateAliveCounter",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_UpdateAliveCounter(WdgM_SupervisedEntityIdType SEID);"
         },
         "8" : {
            "name" : "WdgM_MainFunction",
            "param" : 0,
            "proto" : "void WdgM_MainFunction();"
         }
      }
   },
   "130" : {
      "abbreviation" : "SchM",
      "services" : {}
   },
   "14" : {
      "abbreviation" : "Tm",
      "services" : {
         "1" : {
            "name" : "Tm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Tm_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "10" : {
            "name" : "Tm_SyncTimer1us24bit",
            "param" : 2,
            "proto" : "void Tm_SyncTimer1us24bit(Tm_PredefTimer1us24bitType* TimerDstPtr,const Tm_PredefTimer1us24bitType* TimerSrcPtr);"
         },
         "11" : {
            "name" : "Tm_BusyWait1us24bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_BusyWait1us24bit(uint8 WaitingTimeMin);"
         },
         "12" : {
            "name" : "Tm_ResetTimer1us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer1us32bit(Tm_PredefTimer1us32bitType* TimerPtr);"
         },
         "13" : {
            "name" : "Tm_GetTimeSpan1us32bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan1us32bit(const Tm_PredefTimer1us32bitType* TimerPtr,uint32* TimeSpanPtr);"
         },
         "14" : {
            "name" : "Tm_ShiftTimer1us32bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer1us32bit(Tm_PredefTimer1us32bitType* TimerPtr,uint32 TimeValue);"
         },
         "15" : {
            "name" : "Tm_SyncTimer1us32bit",
            "param" : 2,
            "proto" : "void Tm_SyncTimer1us32bit(Tm_PredefTimer1us32bitType* TimerDstPtr,const Tm_PredefTimer1us32bitType* TimerSrcPtr);"
         },
         "16" : {
            "name" : "Tm_BusyWait1us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_BusyWait1us32bit(uint8 WaitingTimeMin);"
         },
         "17" : {
            "name" : "Tm_ResetTimer100us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer100us32bit(Tm_PredefTimer100us32bitType* TimerPtr);"
         },
         "18" : {
            "name" : "Tm_GetTimeSpan100us32bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan100us32bit(const Tm_PredefTimer100us32bitType* TimerPtr,uint32* TimeSpanPtr);"
         },
         "19" : {
            "name" : "Tm_ShiftTimer100us32bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer100us32bit(Tm_PredefTimer100us32bitType* TimerPtr,uint32 TimeValue);"
         },
         "2" : {
            "name" : "Tm_ResetTimer1us16bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer1us16bit(Tm_PredefTimer1us16bitType* TimerPtr);"
         },
         "20" : {
            "name" : "Tm_SyncTimer100us32bit",
            "param" : 2,
            "proto" : "void Tm_SyncTimer100us32bit(Tm_PredefTimer100us32bitType* TimerDstPtr,const Tm_PredefTimer100us32bitType* TimerSrcPtr);"
         },
         "3" : {
            "name" : "Tm_GetTimeSpan1us16bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan1us16bit(const Tm_PredefTimer1us16bitType* TimerPtr,uint16* TimeSpanPtr);"
         },
         "4" : {
            "name" : "Tm_ShiftTimer1us16bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer1us16bit(Tm_PredefTimer1us16bitType* TimerPtr,uint16 TimeValue);"
         },
         "5" : {
            "name" : "Tm_SyncTimer1us16bit",
            "param" : 2,
            "proto" : "void Tm_SyncTimer1us16bit(Tm_PredefTimer1us16bitType* TimerDstPtr,const Tm_PredefTimer1us16bitType* TimerSrcPtr);"
         },
         "6" : {
            "name" : "Tm_BusyWait1us16bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_BusyWait1us16bit(uint8 WaitingTimeMin);"
         },
         "7" : {
            "name" : "Tm_ResetTimer1us24bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer1us24bit(Tm_PredefTimer1us24bitType* TimerPtr);"
         },
         "8" : {
            "name" : "Tm_GetTimeSpan1us24bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan1us24bit(const Tm_PredefTimer1us24bitType* TimerPtr,uint32* TimeSpanPtr);"
         },
         "9" : {
            "name" : "Tm_ShiftTimer1us24bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer1us24bit(Tm_PredefTimer1us24bitType* TimerPtr,uint32 TimeValue);"
         }
      }
   },
   "140" : {
      "abbreviation" : "CanSM",
      "services" : {
         "3" : {
            "name" : "CanSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanSM_GetCurrentComMode(NetworkHandleType network,ComM_ModeType* ComM_ModePtr);"
         }
      }
   },
   "141" : {
      "abbreviation" : "LinSM",
      "services" : {
         "1" : {
            "name" : "LinSM_Init",
            "param" : 1,
            "proto" : "void LinSM_Init(const LinSM_ConfigType* ConfigPtr);"
         },
         "16" : {
            "name" : "LinSM_ScheduleRequest",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_ScheduleRequest(NetworkHandleType network,LinIf_SchHandleType schedule);"
         },
         "17" : {
            "name" : "LinSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_GetCurrentComMode(NetworkHandleType network,ComM_ModeType* mode);"
         },
         "18" : {
            "name" : "LinSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_RequestComMode(NetworkHandleType network,ComM_ModeType mode);"
         },
         "2" : {
            "name" : "LinSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "32" : {
            "name" : "LinSM_ScheduleRequestConfirmation",
            "param" : 2,
            "proto" : "void LinSM_ScheduleRequestConfirmation(NetworkHandleType network,LinIf_SchHandleType schedule);"
         },
         "33" : {
            "name" : "LinSM_WakeupConfirmation",
            "param" : 2,
            "proto" : "void LinSM_WakeupConfirmation(NetworkHandleType network,boolean success);"
         },
         "34" : {
            "name" : "LinSM_GotoSleepConfirmation",
            "param" : 2,
            "proto" : "void LinSM_GotoSleepConfirmation(NetworkHandleType network,boolean success);"
         },
         "48" : {
            "name" : "LinSM_MainFunction",
            "param" : 0,
            "proto" : "void LinSM_MainFunction();"
         }
      }
   },
   "142" : {
      "abbreviation" : "FrSM",
      "services" : {
         "1" : {
            "name" : "FrSM_Init",
            "param" : 1,
            "proto" : "void FrSM_Init(const FrSM_ConfigType* FrSM_ConfigPtr);"
         },
         "2" : {
            "name" : "FrSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrSM_RequestComMode(NetworkHandleType NetworkHandle,ComM_ModeType ComM_Mode);"
         },
         "3" : {
            "name" : "FrSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrSM_GetCurrentComMode(NetworkHandleType NetworkHandle,ComM_ModeType* ComM_ModePtr);"
         },
         "4" : {
            "name" : "FrSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "FrSM_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType FrSM_AllSlots(NetworkHandleType NetworkHandle);"
         },
         "6" : {
            "name" : "FrSM_SetEcuPassive",
            "param" : 1,
            "proto" : "Std_ReturnType FrSM_SetEcuPassive(boolean FrSM_Passive);"
         }
      }
   },
   "143" : {
      "abbreviation" : "EthSM",
      "services" : {
         "1" : {
            "name" : "EthSM_MainFunction",
            "param" : 0,
            "proto" : "void EthSM_MainFunction();"
         },
         "10" : {
            "name" : "EthSM_TrcvModeIndication",
            "param" : 2,
            "proto" : "void EthSM_TrcvModeIndication(uint8 CtrlIdx,EthTrcv_ModeType TrcvMode);"
         },
         "2" : {
            "name" : "EthSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "EthSM_GetCurrentInternalMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthSM_GetCurrentInternalMode(NetworkHandleType NetworkHandle,EthSM_NetworkModeStateType* EthSM_InternalMode);"
         },
         "4" : {
            "name" : "EthSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthSM_GetCurrentComMode(NetworkHandleType NetworkHandle,ComM_ModeType* ComM_ModePtr);"
         },
         "5" : {
            "name" : "EthSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthSM_RequestComMode(NetworkHandleType NetworkHandle,ComM_ModeType ComM_Mode);"
         },
         "6" : {
            "name" : "EthSM_TrcvLinkStateChg",
            "param" : 2,
            "proto" : "void EthSM_TrcvLinkStateChg(uint8 CtrlIdx,EthTrcv_LinkStateType TransceiverLinkState);"
         },
         "7" : {
            "name" : "EthSM_Init",
            "param" : 0,
            "proto" : "void EthSM_Init();"
         },
         "8" : {
            "name" : "EthSM_TcpIpModeIndication",
            "param" : 2,
            "proto" : "Std_ReturnType EthSM_TcpIpModeIndication(uint8 CtrlIdx,TcpIp_StateType TcpIpState);"
         },
         "9" : {
            "name" : "EthSM_CtrlModeIndication",
            "param" : 2,
            "proto" : "void EthSM_CtrlModeIndication(uint8 CtrlIdx,Eth_ModeType CtrlMode);"
         }
      }
   },
   "15" : {
      "abbreviation" : "Det",
      "services" : {}
   },
   "150" : {
      "abbreviation" : "SecOC",
      "services" : {
         "1" : {
            "name" : "SecOC_Init",
            "param" : 1,
            "proto" : "void SecOC_Init(const SecOC_ConfigType* config);"
         },
         "11" : {
            "name" : "SecOC_VerifyStatusOverride",
            "param" : 3,
            "proto" : "Std_ReturnType SecOC_VerifyStatusOverride(uint16 freshnessValueID,uint8 overrideStatus,uint8 numberOfMessagesToOverride);"
         },
         "2" : {
            "name" : "SecOC_GetVersionInfo",
            "param" : 1,
            "proto" : "void SecOC_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "SecOC_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_Transmit(PduIdType id,const PduInfoType* info);"
         },
         "4" : {
            "name" : "SecOC_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType SecOC_CancelTransmit(PduIdType id);"
         },
         "5" : {
            "name" : "SecOC_DeInit",
            "param" : 0,
            "proto" : "void SecOC_DeInit();"
         },
         "6" : {
            "name" : "SecOC_MainFunction",
            "param" : 0,
            "proto" : "void SecOC_MainFunction();"
         },
         "64" : {
            "name" : "SecOC_TxConfirmation",
            "param" : 1,
            "proto" : "void SecOC_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "SecOC_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "SecOC_RxIndication",
            "param" : 2,
            "proto" : "void SecOC_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "SecOC_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType SecOC_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "SecOC_CopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType SecOC_CopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "69" : {
            "name" : "SecOC_TpRxIndication",
            "param" : 2,
            "proto" : "void SecOC_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "7" : {
            "name" : "SecOC_AssociateKey",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_AssociateKey(uint8 keyID,const SecOC_KeyType* keyPtr);"
         },
         "70" : {
            "name" : "SecOC_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType SecOC_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "SecOC_TpTxConfirmation",
            "param" : 2,
            "proto" : "void SecOC_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "8" : {
            "name" : "SecOC_FreshnessValueRead",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_FreshnessValueRead(uint16 freshnessValueID,uint64* counterValue);"
         },
         "9" : {
            "name" : "SecOC_FreshnessValueWrite",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_FreshnessValueWrite(uint16 freshnessValueID,uint64 counterValue);"
         }
      }
   },
   "160" : {
      "abbreviation" : "StbM",
      "services" : {
         "0" : {
            "name" : "StbM_Init",
            "param" : 1,
            "proto" : "void StbM_Init(const StbM_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "StbM_GetCurrentTimeDiff",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetCurrentTimeDiff(StbM_TimeStampRawType givenTimeStamp,StbM_TimeStampRawType* timeStampDiffPtr);"
         },
         "11" : {
            "name" : "StbM_SetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_SetGlobalTime(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* timeStampPtr,const StbM_UserDataType* userDataPtr);"
         },
         "12" : {
            "name" : "StbM_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_SetUserData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_UserDataType* userDataPtr);"
         },
         "13" : {
            "name" : "StbM_SetOffset",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_SetOffset(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* timeStampPtr);"
         },
         "14" : {
            "name" : "StbM_GetOffset",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetOffset(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* timeStampPtr);"
         },
         "15" : {
            "name" : "StbM_BusSetGlobalTime",
            "param" : 4,
            "proto" : "Std_ReturnType StbM_BusSetGlobalTime(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* timeStampPtr,const StbM_UserDataType* userDataPtr,boolean syncToTimeBase);"
         },
         "4" : {
            "name" : "StbM_MainFunction",
            "param" : 0,
            "proto" : "void StbM_MainFunction();"
         },
         "5" : {
            "name" : "StbM_GetVersionInfo",
            "param" : 1,
            "proto" : "void StbM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "7" : {
            "name" : "StbM_GetCurrentTime",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_GetCurrentTime(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* timeStampPtr,StbM_UserDataType* userDataPtr);"
         },
         "8" : {
            "name" : "StbM_GetCurrentTimeExtended",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_GetCurrentTimeExtended(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampExtendedType* timeStampPtr,StbM_UserDataType* userDataPtr);"
         },
         "9" : {
            "name" : "StbM_GetCurrentTimeRaw",
            "param" : 1,
            "proto" : "Std_ReturnType StbM_GetCurrentTimeRaw(StbM_TimeStampRawType* timeStampRawPtr);"
         }
      }
   },
   "161" : {
      "abbreviation" : "CanTSyn",
      "services" : {
         "1" : {
            "name" : "CanTSyn_Init",
            "param" : 1,
            "proto" : "void CanTSyn_Init(const CanTSyn_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "CanTSyn_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanTSyn_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "CanTSyn_SetTransmissionMode",
            "param" : 2,
            "proto" : "void CanTSyn_SetTransmissionMode(uint8 CtrlIdx,CanTSyn_TransmissionModeType Mode);"
         },
         "6" : {
            "name" : "CanTSyn_MainFunction",
            "param" : 0,
            "proto" : "void CanTSyn_MainFunction();"
         },
         "64" : {
            "name" : "CanTSyn_TxConfirmation",
            "param" : 1,
            "proto" : "void CanTSyn_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "CanTSyn_RxIndication",
            "param" : 2,
            "proto" : "void CanTSyn_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "163" : {
      "abbreviation" : "FrTSyn",
      "services" : {
         "1" : {
            "name" : "FrTSyn_Init",
            "param" : 1,
            "proto" : "void FrTSyn_Init(const FrTSyn_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "FrTSyn_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrTSyn_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "FrTSyn_SetTransmissionMode",
            "param" : 2,
            "proto" : "void FrTSyn_SetTransmissionMode(uint8 CtrlIdx,FrTSyn_TransmissionModeType Mode);"
         },
         "4" : {
            "name" : "FrTSyn_MainFunction",
            "param" : 0,
            "proto" : "void FrTSyn_MainFunction();"
         },
         "65" : {
            "name" : "FrTSyn_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrTSyn_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "FrTSyn_RxIndication",
            "param" : 2,
            "proto" : "void FrTSyn_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "164" : {
      "abbreviation" : "EthTSyn",
      "services" : {
         "1" : {
            "name" : "EthTSyn_Init",
            "param" : 1,
            "proto" : "void EthTSyn_Init(const EthTSyn_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "EthTSyn_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthTSyn_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "EthTSyn_GetCurrentTime",
            "param" : 3,
            "proto" : "Std_ReturnType EthTSyn_GetCurrentTime(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* timeStampPtr,EthTSyn_SyncStateType* syncState);"
         },
         "4" : {
            "name" : "EthTSyn_SetGlobalTime",
            "param" : 2,
            "proto" : "Std_ReturnType EthTSyn_SetGlobalTime(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* timeStampPtr);"
         },
         "5" : {
            "name" : "EthTSyn_SetTransmissionMode",
            "param" : 2,
            "proto" : "void EthTSyn_SetTransmissionMode(uint8 CtrlIdx,EthTSyn_TransmissionModeType Mode);"
         },
         "6" : {
            "name" : "EthTSyn_RxIndication",
            "param" : 6,
            "proto" : "void EthTSyn_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,uint8* DataPtr,uint16 LenByte);"
         },
         "7" : {
            "name" : "EthTSyn_TxConfirmation",
            "param" : 2,
            "proto" : "void EthTSyn_TxConfirmation(uint8 CtrlIdx,uint8 BufIdx);"
         },
         "8" : {
            "name" : "EthTSyn_TrcvLinkStateChg",
            "param" : 2,
            "proto" : "Std_ReturnType EthTSyn_TrcvLinkStateChg(uint8 CtrlIdx,EthTrcv_LinkStateType TrcvLinkState);"
         },
         "9" : {
            "name" : "EthTSyn_MainFunction",
            "param" : 0,
            "proto" : "void EthTSyn_MainFunction();"
         }
      }
   },
   "170" : {
      "abbreviation" : "TcpIp",
      "services" : {
         "1" : {
            "name" : "TcpIp_Init",
            "param" : 1,
            "proto" : "void TcpIp_Init(const TcpIp_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "TcpIp_RequestIpAddrAssignment",
            "param" : 5,
            "proto" : "Std_ReturnType TcpIp_RequestIpAddrAssignment(TcpIp_LocalAddrIdType LocalAddrId,TcpIp_IpAddrAssignmentType Type,const TcpIp_SockAddrType* LocalIpAddrPtr,uint8 Netmask,const TcpIp_SockAddrType* DefaultRouterPtr);"
         },
         "11" : {
            "name" : "TcpIp_ReleaseIpAddrAssignment",
            "param" : 1,
            "proto" : "Std_ReturnType TcpIp_ReleaseIpAddrAssignment(TcpIp_LocalAddrIdType LocalAddrId);"
         },
         "12" : {
            "name" : "TcpIp_IcmpTransmit",
            "param" : 7,
            "proto" : "Std_ReturnType TcpIp_IcmpTransmit(TcpIp_LocalAddrIdType LocalIpAddrId,const TcpIp_SockAddrType* RemoteAddrPtr,uint8 Ttl,uint8 Type,uint8 Code,uint16 DataLength,const uint8* DataPtr);"
         },
         "13" : {
            "name" : "TcpIp_DhcpReadOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpReadOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint8 Option,uint8* DataLength,uint8* DataPtr);"
         },
         "14" : {
            "name" : "TcpIp_DhcpWriteOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpWriteOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint8 Option,uint8 DataLength,const uint8* DataPtr);"
         },
         "15" : {
            "name" : "TcpIp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType TcpIp_ChangeParameter(TcpIp_SocketIdType SocketId,TcpIp_ParamIdType ParameterId,const uint8* ParameterValue);"
         },
         "16" : {
            "name" : "TcpIp_GetIpAddr",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_GetIpAddr(TcpIp_LocalAddrIdType LocalAddrId,TcpIp_SockAddrType* IpAddrPtr,uint8* NetmaskPtr,TcpIp_SockAddrType* DefaultRouterPtr);"
         },
         "17" : {
            "name" : "TcpIp_GetPhysAddr",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_GetPhysAddr(TcpIp_LocalAddrIdType LocalAddrId,uint8* PhysAddrPtr);"
         },
         "18" : {
            "name" : "TcpIp_UdpTransmit",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_UdpTransmit(TcpIp_SocketIdType SocketId,const uint8* DataPtr,const TcpIp_SockAddrType* RemoteAddrPtr,uint16 TotalLength);"
         },
         "19" : {
            "name" : "TcpIp_TcpTransmit",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_TcpTransmit(TcpIp_SocketIdType SocketId,const uint8* DataPtr,uint32 AvailableLength,boolean ForceRetrieve);"
         },
         "2" : {
            "name" : "TcpIp_GetVersionInfo",
            "param" : 1,
            "proto" : "void TcpIp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "20" : {
            "name" : "TcpIp_RxIndication",
            "param" : 6,
            "proto" : "void TcpIp_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,uint8* DataPtr,uint16 LenByte);"
         },
         "21" : {
            "name" : "TcpIp_MainFunction",
            "param" : 0,
            "proto" : "void TcpIp_MainFunction();"
         },
         "22" : {
            "name" : "TcpIp_GetRemotePhysAddr",
            "param" : 4,
            "proto" : "TcpIp_ReturnType TcpIp_GetRemotePhysAddr(uint8 CtrlIdx,const TcpIp_SockAddrType* IpAddrPtr,TcpIp_ReturnType PhysAddrPtr,boolean initRes);"
         },
         "23" : {
            "name" : "TcpIp_GetCtrlIdx",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_GetCtrlIdx(TcpIp_LocalAddrIdType LocalAddrId,uint8* CtrlIdxPtr);"
         },
         "24" : {
            "name" : "TcpIp_IcmpV6Transmit",
            "param" : 7,
            "proto" : "Std_ReturnType TcpIp_IcmpV6Transmit(TcpIp_LocalAddrIdType LocalIpAddrId,const TcpIp_SockAddrType* RemoteAddrPtr,uint8 HopLimit,uint8 Type,uint8 Code,uint16 DataLength,const uint8* DataPtr);"
         },
         "25" : {
            "name" : "TcpIp_DhcpV6ReadOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpV6ReadOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint16 Option,uint16* DataLength,uint8* DataPtr);"
         },
         "26" : {
            "name" : "TcpIp_DhcpV6WriteOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpV6WriteOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint16 Option,uint16 DataLength,const uint8* DataPtr);"
         },
         "27" : {
            "name" : "TcpIp_ResetIpAssignment",
            "param" : 0,
            "proto" : "Std_ReturnType TcpIp_ResetIpAssignment();"
         },
         "3" : {
            "name" : "TcpIp__Up_GetSocket",
            "param" : 3,
            "proto" : "Std_ReturnType TcpIp__Up_GetSocket(TcpIp_DomainType Domain,TcpIp_ProtocolType Protocol,TcpIp_SocketIdType* SocketIdPtr);"
         },
         "4" : {
            "name" : "TcpIp_Close",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_Close(TcpIp_SocketIdType SocketId,boolean Abort);"
         },
         "5" : {
            "name" : "TcpIp_Bind",
            "param" : 3,
            "proto" : "Std_ReturnType TcpIp_Bind(TcpIp_SocketIdType SocketId,TcpIp_LocalAddrIdType LocalAddrId,uint16* PortPtr);"
         },
         "6" : {
            "name" : "TcpIp_TcpConnect",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpConnect(TcpIp_SocketIdType SocketId,const TcpIp_SockAddrType* RemoteAddrPtr);"
         },
         "7" : {
            "name" : "TcpIp_TcpListen",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpListen(TcpIp_SocketIdType SocketId,uint16 MaxChannels);"
         },
         "8" : {
            "name" : "TcpIp_TcpReceived",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpReceived(TcpIp_SocketIdType SocketId,uint32 Length);"
         },
         "9" : {
            "name" : "TcpIp_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_RequestComMode(uint8 CtrlIdx,TcpIp_StateType State);"
         }
      }
   },
   "171" : {
      "abbreviation" : "Sd",
      "services" : {
         "1" : {
            "name" : "Sd_Init",
            "param" : 1,
            "proto" : "void Sd_Init(const Sd_ConfigType* ConfigPtr);"
         },
         "2" : {
            "name" : "Sd_GetVersionInfo",
            "param" : 1,
            "proto" : "void Sd_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "Sd_LocalIpAddrAssignmentChg",
            "param" : 2,
            "proto" : "void Sd_LocalIpAddrAssignmentChg(SoAd_SoConIdType SoConId,TcpIp_IpAddrStateType State);"
         },
         "6" : {
            "name" : "Sd_MainFunction",
            "param" : 0,
            "proto" : "void Sd_MainFunction();"
         },
         "66" : {
            "name" : "Sd_RxIndication",
            "param" : 2,
            "proto" : "void Sd_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "Sd_ServerServiceSetState",
            "param" : 2,
            "proto" : "Std_ReturnType Sd_ServerServiceSetState(uint16 SdServerServiceHandleId,Sd_ServerServiceSetStateType ServerServiceState);"
         },
         "8" : {
            "name" : "Sd_ClientServiceSetState",
            "param" : 2,
            "proto" : "Std_ReturnType Sd_ClientServiceSetState(uint16 ClientServiceHandleId,Sd_ClientServiceSetStateType ClientServiceState);"
         },
         "9" : {
            "name" : "Sd_ConsumedEventGroupSetState",
            "param" : 2,
            "proto" : "Std_ReturnType Sd_ConsumedEventGroupSetState(uint16 SdConsumedEventGroupHandleId,Sd_ConsumedEventGroupSetStateTypeConsumedEventGroupState);"
         }
      }
   },
   "173" : {
      "abbreviation" : "DoIP",
      "services" : {
         "0" : {
            "name" : "_User__DoIPGetGidCallback",
            "param" : 1,
            "proto" : "Std_ReturnType _User__DoIPGetGidCallback(uint8* GroupId);"
         },
         "1" : {
            "name" : "DoIP_Init",
            "param" : 1,
            "proto" : "void DoIP_Init(const DoIP_ConfigType* DoIPConfigPtr);"
         },
         "11" : {
            "name" : "DoIP_SoConModeChg",
            "param" : 2,
            "proto" : "void DoIP_SoConModeChg(SoAd_SoConIdType SoConId,SoAd_SoConModeType Mode);"
         },
         "12" : {
            "name" : "DoIP_LocalIpAddrAssignmentChg",
            "param" : 2,
            "proto" : "void DoIP_LocalIpAddrAssignmentChg(SoAd_SoConIdType SoConId,TcpIp_IpAddrStateType State);"
         },
         "15" : {
            "name" : "DoIP_ActivationLineSwitch",
            "param" : 0,
            "proto" : "void DoIP_ActivationLineSwitch();"
         },
         "2" : {
            "name" : "DoIP_MainFunction",
            "param" : 0,
            "proto" : "void DoIP_MainFunction();"
         },
         "3" : {
            "name" : "DoIP_TpTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType DoIP_TpTransmit(PduIdType DoIPPduRTxId,const PduInfoType* DoIPPduRTxInfoPtr);"
         },
         "4" : {
            "name" : "DoIP_TpCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_TpCancelTransmit(PduIdType DoIPPduRTxId);"
         },
         "5" : {
            "name" : "DoIP_TpCancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_TpCancelReceive(PduIdType DoIPPduRRxId);"
         },
         "64" : {
            "name" : "DoIP_SoAdIfTxConfirmation",
            "param" : 1,
            "proto" : "void DoIP_SoAdIfTxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "DoIP_SoAdIfRxIndication",
            "param" : 2,
            "proto" : "void DoIP_SoAdIfRxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "DoIP_SoAdTpCopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType DoIP_SoAdTpCopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "DoIP_SoAdTpCopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType DoIP_SoAdTpCopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "69" : {
            "name" : "DoIP_SoAdTpRxIndication",
            "param" : 2,
            "proto" : "void DoIP_SoAdTpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "70" : {
            "name" : "DoIP_SoAdTpStartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType DoIP_SoAdTpStartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "DoIP_SoAdTpTxConfirmation",
            "param" : 2,
            "proto" : "void DoIP_SoAdTpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "DoIP_IfTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType DoIP_IfTransmit(PduIdType id,const PduInfoType* info);"
         },
         "74" : {
            "name" : "DoIP_IfCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_IfCancelTransmit(PduIdType id);"
         }
      }
   },
   "174" : {
      "abbreviation" : "SomeIpXf",
      "services" : {
         "0" : {
            "name" : "SomeIpXf_GetVersionInfo",
            "param" : 1,
            "proto" : "void SomeIpXf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "1" : {
            "name" : "SomeIpXf_Init",
            "param" : 1,
            "proto" : "void SomeIpXf_Init(const SomeIpXf_ConfigType* config);"
         },
         "3" : {
            "name" : "SomeIpXf__transformerId_",
            "param" : 2,
            "proto" : "uint8 SomeIpXf__transformerId_(uint8* buffer,uint16* bufferLength);"
         },
         "4" : {
            "name" : "SomeIpXf_Inv__transformerId_",
            "param" : 2,
            "proto" : "uint8 SomeIpXf_Inv__transformerId_(const uint8* buffer,uint16 bufferLength);"
         }
      }
   },
   "175" : {
      "abbreviation" : "ComXf",
      "services" : {
         "0" : {
            "name" : "ComXf_GetVersionInfo",
            "param" : 1,
            "proto" : "void ComXf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "2" : {
            "name" : "ComXf_DeInit",
            "param" : 0,
            "proto" : "void ComXf_DeInit();"
         },
         "3" : {
            "name" : "ComXf__transformerId_",
            "param" : 3,
            "proto" : "uint8 ComXf__transformerId_(uint8* buffer,uint16* bufferLength,const _type_* dataElement);"
         },
         "4" : {
            "name" : "ComXf_Inv__transformerId_",
            "param" : 3,
            "proto" : "uint8 ComXf_Inv__transformerId_(const uint8* buffer,uint16 bufferLength,_type_* dataElement);"
         }
      }
   },
   "176" : {
      "abbreviation" : "E2EXf",
      "services" : {}
   },
   "195" : {
      "abbreviation" : "MemMap",
      "services" : {}
   },
   "196" : {
      "abbreviation" : "Comtype",
      "services" : {}
   },
   "197" : {
      "abbreviation" : "Std",
      "services" : {}
   },
   "198" : {
      "abbreviation" : "Compiler",
      "services" : {}
   },
   "199" : {
      "abbreviation" : "Platform",
      "services" : {}
   },
   "2" : {
      "abbreviation" : "Rte",
      "services" : {}
   },
   "20" : {
      "abbreviation" : "NvM",
      "services" : {}
   },
   "201" : {
      "abbreviation" : "Crc",
      "services" : {
         "1" : {
            "name" : "Crc_CalculateCRC8",
            "param" : 4,
            "proto" : "uint8 Crc_CalculateCRC8(const uint8* Crc_DataPtr,uint32 Crc_Length,uint8 Crc_StartValue8,boolean Crc_IsFirstCall);"
         },
         "2" : {
            "name" : "Crc_CalculateCRC16",
            "param" : 4,
            "proto" : "uint16 Crc_CalculateCRC16(const uint8* Crc_DataPtr,uint32 Crc_Length,uint16 Crc_StartValue16,boolean Crc_IsFirstCall);"
         },
         "3" : {
            "name" : "Crc_CalculateCRC32",
            "param" : 4,
            "proto" : "uint32 Crc_CalculateCRC32(const uint8* Crc_DataPtr,uint32 Crc_Length,uint32 Crc_StartValue32,boolean Crc_IsFirstCall);"
         },
         "4" : {
            "name" : "Crc_GetVersionInfo",
            "param" : 1,
            "proto" : "void Crc_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         },
         "5" : {
            "name" : "Crc_CalculateCRC8H2F",
            "param" : 4,
            "proto" : "uint8 Crc_CalculateCRC8H2F(const uint8* Crc_DataPtr,uint32 Crc_Length,uint8 Crc_StartValue8H2F,boolean Crc_IsFirstCall);"
         },
         "6" : {
            "name" : "Crc_CalculateCRC32P4",
            "param" : 4,
            "proto" : "uint32 Crc_CalculateCRC32P4(const uint8* Crc_DataPtr,uint32 Crc_Length,uint32 Crc_StartValue32,boolean Crc_IsFirstCall);"
         }
      }
   },
   "205" : {
      "abbreviation" : "Bfx",
      "services" : {}
   },
   "206" : {
      "abbreviation" : "Cal",
      "services" : {
         "10" : {
            "name" : "Cal_MacVerifyUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_MacVerifyUpdate(Cal_ConfigIdType cfgId,Cal_MacVerifyCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "11" : {
            "name" : "Cal_MacVerifyFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_MacVerifyFinish(Cal_ConfigIdType cfgId,Cal_MacVerifyCtxBufType contextBuffer,const uint8* MacPtr,uint32 MacLength,Cal_VerifyResultType* resultPtr);"
         },
         "12" : {
            "name" : "Cal_RandomSeedStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_RandomSeedStart(Cal_ConfigIdType cfgId,Cal_RandomCtxBufType contextBuffer);"
         },
         "13" : {
            "name" : "Cal_RandomSeedUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_RandomSeedUpdate(Cal_ConfigIdType cfgId,Cal_RandomCtxBufType contextBuffer,const uint8* seedPtr,uint32 seedLength);"
         },
         "14" : {
            "name" : "Cal_RandomSeedFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_RandomSeedFinish(Cal_ConfigIdType cfgId,Cal_RandomCtxBufType contextBuffer);"
         },
         "15" : {
            "name" : "Cal_RandomGenerate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_RandomGenerate(Cal_ConfigIdType cfgId,Cal_RandomCtxBufType contextBuffer,uint8* resultPtr,uint32 resultLength);"
         },
         "16" : {
            "name" : "Cal_SymBlockEncryptStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_SymBlockEncryptStart(Cal_ConfigIdType cfgId,Cal_SymBlockEncryptCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr);"
         },
         "17" : {
            "name" : "Cal_SymBlockEncryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_SymBlockEncryptUpdate(Cal_ConfigIdType cfgId,Cal_SymBlockEncryptCtxBufType contextBuffer,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "18" : {
            "name" : "Cal_SymBlockEncryptFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_SymBlockEncryptFinish(Cal_ConfigIdType cfgId,Cal_SymBlockEncryptCtxBufType contextBuffer);"
         },
         "19" : {
            "name" : "Cal_SymBlockDecryptStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_SymBlockDecryptStart(Cal_ConfigIdType cfgId,Cal_SymBlockDecryptCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr);"
         },
         "20" : {
            "name" : "Cal_SymBlockDecryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_SymBlockDecryptUpdate(Cal_ConfigIdType cfgId,Cal_SymBlockDecryptCtxBufType contextBuffer,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "21" : {
            "name" : "Cal_SymBlockDecryptFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_SymBlockDecryptFinish(Cal_ConfigIdType cfgId,Cal_SymBlockDecryptCtxBufType contextBuffer);"
         },
         "22" : {
            "name" : "Cal_SymEncryptStart",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_SymEncryptStart(Cal_ConfigIdType cfgId,Cal_SymEncryptCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr,const uint8* InitVectorPtr,uint32 InitVectorLength);"
         },
         "23" : {
            "name" : "Cal_SymEncryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_SymEncryptUpdate(Cal_ConfigIdType cfgId,Cal_SymEncryptCtxBufType contextBuffer,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "24" : {
            "name" : "Cal_SymEncryptFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymEncryptFinish(Cal_ConfigIdType cfgId,Cal_SymEncryptCtxBufType contextBuffer,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "25" : {
            "name" : "Cal_SymDecryptStart",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_SymDecryptStart(Cal_ConfigIdType cfgId,Cal_SymDecryptCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr,const uint8* InitVectorPtr,uint32 InitVectorLength);"
         },
         "26" : {
            "name" : "Cal_SymDecryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_SymDecryptUpdate(Cal_ConfigIdType cfgId,Cal_SymDecryptCtxBufType contextBuffer,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "27" : {
            "name" : "Cal_SymDecryptFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymDecryptFinish(Cal_ConfigIdType cfgId,Cal_SymDecryptCtxBufType contextBuffer,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "28" : {
            "name" : "Cal_AsymEncryptStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_AsymEncryptStart(Cal_ConfigIdType cfgId,Cal_AsymEncryptCtxBufType contextBuffer,const Cal_AsymPublicKeyType* keyPtr);"
         },
         "29" : {
            "name" : "Cal_AsymEncryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_AsymEncryptUpdate(Cal_ConfigIdType cfgId,Cal_AsymEncryptCtxBufType contextBuffer,const uint8* plainTextPtr,uint32 plainTextLength,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "3" : {
            "name" : "Cal_HashStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_HashStart(Cal_ConfigIdType cfgId,Cal_HashCtxBufType contextBuffer);"
         },
         "30" : {
            "name" : "Cal_AsymEncryptFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymEncryptFinish(Cal_ConfigIdType cfgId,Cal_AsymEncryptCtxBufType contextBuffer,uint8* cipherTextPtr,uint32* cipherTextLengthPtr);"
         },
         "31" : {
            "name" : "Cal_AsymDecryptStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_AsymDecryptStart(Cal_ConfigIdType cfgId,Cal_AsymDecryptCtxBufType contextBuffer,const Cal_AsymPrivateKeyType* keyPtr);"
         },
         "32" : {
            "name" : "Cal_AsymDecryptUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_AsymDecryptUpdate(Cal_ConfigIdType cfgId,Cal_AsymDecryptCtxBufType contextBuffer,const uint8* cipherTextPtr,uint32 cipherTextLength,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "33" : {
            "name" : "Cal_AsymDecryptFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymDecryptFinish(Cal_ConfigIdType cfgId,Cal_AsymDecryptCtxBufType contextBuffer,uint8* plainTextPtr,uint32* plainTextLengthPtr);"
         },
         "34" : {
            "name" : "Cal_SignatureGenerateStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_SignatureGenerateStart(Cal_ConfigIdType cfgId,Cal_SignatureGenerateCtxBufType contextBuffer,const Cal_AsymPrivateKeyType* keyPtr);"
         },
         "35" : {
            "name" : "Cal_SignatureGenerateUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SignatureGenerateUpdate(Cal_ConfigIdType cfgId,Cal_SignatureGenerateCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "36" : {
            "name" : "Cal_SignatureGenerateFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SignatureGenerateFinish(Cal_ConfigIdType cfgId,Cal_SignatureGenerateCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr);"
         },
         "37" : {
            "name" : "Cal_SignatureVerifyStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_SignatureVerifyStart(Cal_ConfigIdType cfgId,Cal_SignatureVerifyCtxBufType contextBuffer,const Cal_AsymPublicKeyType* keyPtr);"
         },
         "38" : {
            "name" : "Cal_SignatureVerifyUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SignatureVerifyUpdate(Cal_ConfigIdType cfgId,Cal_SignatureVerifyCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "39" : {
            "name" : "Cal_SignatureVerifyFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_SignatureVerifyFinish(Cal_ConfigIdType cfgId,Cal_SignatureVerifyCtxBufType contextBuffer,const uint8* signaturePtr,uint32 signatureLength,Cal_VerifyResultType* resultPtr);"
         },
         "4" : {
            "name" : "Cal_HashUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_HashUpdate(Cal_ConfigIdType cfgId,Cal_HashCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "40" : {
            "name" : "Cal_ChecksumStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_ChecksumStart(Cal_ConfigIdType cfgId,Cal_ChecksumCtxBufType contextBuffer);"
         },
         "41" : {
            "name" : "Cal_ChecksumUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_ChecksumUpdate(Cal_ConfigIdType cfgId,Cal_ChecksumCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "42" : {
            "name" : "Cal_ChecksumFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_ChecksumFinish(Cal_ConfigIdType cfgId,Cal_ChecksumCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "43" : {
            "name" : "Cal_KeyDeriveStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_KeyDeriveStart(Cal_ConfigIdType cfgId,Cal_KeyDeriveCtxBufType contextBuffer,uint32 keyLength,uint32 iterations);"
         },
         "44" : {
            "name" : "Cal_KeyDeriveUpdate",
            "param" : 6,
            "proto" : "Cal_ReturnType Cal_KeyDeriveUpdate(Cal_ConfigIdType cfgId,Cal_KeyDeriveCtxBufType contextBuffer,const uint8* passwordPtr,uint32 passwordLength,const uint8* saltPtr,uint32 saltLength);"
         },
         "45" : {
            "name" : "Cal_KeyDeriveFinish",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_KeyDeriveFinish(Cal_ConfigIdType cfgId,Cal_KeyDeriveCtxBufType contextBuffer,Cal_SymKeyType* keyPtr);"
         },
         "46" : {
            "name" : "Cal_KeyExchangeCalcPubVal",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_KeyExchangeCalcPubVal(Cal_ConfigIdType cfgId,const Cal_KeyExchangeBaseType* basePtr,const Cal_KeyExchangePrivateType* privateValuePtr,uint8* publicValuePtr,uint32* publicValueLengthPtr);"
         },
         "47" : {
            "name" : "Cal_KeyExchangeCalcSecretStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_KeyExchangeCalcSecretStart(Cal_ConfigIdType cfgId,Cal_KeyExchangeCalcSecretCtxBufType contextBuffer,const Cal_KeyExchangeBaseType* basePtr,const Cal_KeyExchangePrivateType* privateValuePtr);"
         },
         "48" : {
            "name" : "Cal_KeyExchangeCalcSecretUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_KeyExchangeCalcSecretUpdate(Cal_ConfigIdType cfgId,Cal_KeyExchangeCalcSecretCtxBufType contextBuffer,const uint8* partnerPublicValuePtr,uint32 partnerPublicValueLength);"
         },
         "49" : {
            "name" : "Cal_KeyExchangeCalcSecretFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_KeyExchangeCalcSecretFinish(Cal_ConfigIdType cfgId,Cal_KeyExchangeCalcSecretCtxBufType contextBuffer,uint8* sharedSecretPtr,uint32* sharedSecretLengthPtr,boolean TruncationIsAllowed);"
         },
         "5" : {
            "name" : "Cal_HashFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_HashFinish(Cal_ConfigIdType cfgId,Cal_HashCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "50" : {
            "name" : "Cal_SymKeyExtractStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_SymKeyExtractStart(Cal_ConfigIdType cfgId,Cal_SymKeyExtractCtxBufType contextBuffer);"
         },
         "51" : {
            "name" : "Cal_SymKeyExtractUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymKeyExtractUpdate(Cal_ConfigIdType cfgId,Cal_SymKeyExtractCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "52" : {
            "name" : "Cal_SymKeyExtractFinish",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_SymKeyExtractFinish(Cal_ConfigIdType cfgId,Cal_SymKeyExtractCtxBufType contextBuffer,Cal_SymKeyType* keyPtr);"
         },
         "53" : {
            "name" : "Cal_AsymPublicKeyExtractStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_AsymPublicKeyExtractStart(Cal_ConfigIdType cfgId,Cal_AsymPublicKeyExtractCtxBufType contextBuffer);"
         },
         "54" : {
            "name" : "Cal_AsymPublicKeyExtractUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPublicKeyExtractUpdate(Cal_ConfigIdType cfgId,Cal_AsymPublicKeyExtractCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "55" : {
            "name" : "Cal_AsymPublicKeyExtractFinish",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_AsymPublicKeyExtractFinish(Cal_ConfigIdType cfgId,Cal_AsymPublicKeyExtractCtxBufType contextBuffer,Cal_AsymPublicKeyType* keyPtr);"
         },
         "56" : {
            "name" : "Cal_AsymPrivateKeyExtractStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyExtractStart(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyExtractCtxBufType contextBuffer);"
         },
         "57" : {
            "name" : "Cal_AsymPrivateKeyExtractUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyExtractUpdate(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyExtractCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "58" : {
            "name" : "Cal_AsymPrivateKeyExtractFinish",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyExtractFinish(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyExtractCtxBufType contextBuffer,Cal_AsymPrivateKeyType* keyPtr);"
         },
         "59" : {
            "name" : "Cal_GetVersionInfo",
            "param" : 1,
            "proto" : "void Cal_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "6" : {
            "name" : "Cal_MacGenerateStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_MacGenerateStart(Cal_ConfigIdType cfgId,Cal_MacGenerateCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr);"
         },
         "60" : {
            "name" : "Cal_SymKeyWrapSymStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapSymStart(Cal_ConfigIdType cfgId,Cal_SymKeyWrapSymCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr,const Cal_SymKeyType* wrappingKeyPtr);"
         },
         "61" : {
            "name" : "Cal_SymKeyWrapSymUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapSymUpdate(Cal_ConfigIdType cfgId,Cal_SymKeyWrapSymCtxBufType contextBuffer,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "62" : {
            "name" : "Cal_SymKeyWrapSymFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapSymFinish(Cal_ConfigIdType cfgId,Cal_SymKeyWrapSymCtxBufType contextBuffer);"
         },
         "63" : {
            "name" : "Cal_SymKeyWrapAsymStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapAsymStart(Cal_ConfigIdType cfgId,Cal_SymKeyWrapAsymCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr,const Cal_AsymPublicKeyType* wrappingKeyPtr);"
         },
         "64" : {
            "name" : "Cal_SymKeyWrapAsymUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapAsymUpdate(Cal_ConfigIdType cfgId,Cal_SymKeyWrapAsymCtxBufType contextBuffer,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "65" : {
            "name" : "Cal_SymKeyWrapAsymFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_SymKeyWrapAsymFinish(Cal_ConfigIdType cfgId,Cal_SymKeyWrapAsymCtxBufType contextBuffer);"
         },
         "66" : {
            "name" : "Cal_AsymPrivateKeyWrapSymStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapSymStart(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapSymCtxBufType contextBuffer,const Cal_AsymPrivateKeyType* keyPtr,const Cal_SymKeyType* wrappingKeyPtr);"
         },
         "67" : {
            "name" : "Cal_AsymPrivateKeyWrapSymUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapSymUpdate(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapSymCtxBufType contextBuffer,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "68" : {
            "name" : "Cal_AsymPrivateKeyWrapSymFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapSymFinish(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapSymCtxBufType contextBuffer);"
         },
         "69" : {
            "name" : "Cal_AsymPrivateKeyWrapAsymStart",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapAsymStart(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapAsymCtxBufType contextBuffer,const Cal_AsymPrivateKeyType* keyPtr,const Cal_AsymPublicKeyType* wrappingKeyPtr);"
         },
         "7" : {
            "name" : "Cal_MacGenerateUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_MacGenerateUpdate(Cal_ConfigIdType cfgId,Cal_MacGenerateCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "70" : {
            "name" : "Cal_AsymPrivateKeyWrapAsymUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapAsymUpdate(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapAsymCtxBufType contextBuffer,uint8* dataPtr,uint32* dataLengthPtr);"
         },
         "71" : {
            "name" : "Cal_AsymPrivateKeyWrapAsymFinish",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_AsymPrivateKeyWrapAsymFinish(Cal_ConfigIdType cfgId,Cal_AsymPrivateKeyWrapAsymCtxBufType contextBuffer);"
         },
         "77" : {
            "name" : "Cal_CompressStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_CompressStart(Cal_ConfigIdType cfgId,Cal_CompressCtxBufType contextBuffer);"
         },
         "78" : {
            "name" : "Cal_CompressUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_CompressUpdate(Cal_ConfigIdType cfgId,Cal_CompressCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "79" : {
            "name" : "Cal_CompressFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_CompressFinish(Cal_ConfigIdType cfgId,Cal_CompressCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr);"
         },
         "8" : {
            "name" : "Cal_MacGenerateFinish",
            "param" : 5,
            "proto" : "Cal_ReturnType Cal_MacGenerateFinish(Cal_ConfigIdType cfgId,Cal_MacGenerateCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr,boolean TruncationIsAllowed);"
         },
         "80" : {
            "name" : "Cal_DecompressStart",
            "param" : 2,
            "proto" : "Cal_ReturnType Cal_DecompressStart(Cal_ConfigIdType cfgId,Cal_DecompressCtxBufType contextBuffer);"
         },
         "81" : {
            "name" : "Cal_DecompressUpdate",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_DecompressUpdate(Cal_ConfigIdType cfgId,Cal_DecompressCtxBufType contextBuffer,const uint8* dataPtr,uint32 dataLength);"
         },
         "82" : {
            "name" : "Cal_DecompressFinish",
            "param" : 4,
            "proto" : "Cal_ReturnType Cal_DecompressFinish(Cal_ConfigIdType cfgId,Cal_DecompressCtxBufType contextBuffer,uint8* resultPtr,uint32* resultLengthPtr);"
         },
         "9" : {
            "name" : "Cal_MacVerifyStart",
            "param" : 3,
            "proto" : "Cal_ReturnType Cal_MacVerifyStart(Cal_ConfigIdType cfgId,Cal_MacVerifyCtxBufType contextBuffer,const Cal_SymKeyType* keyPtr);"
         }
      }
   },
   "207" : {
      "abbreviation" : "E2E",
      "services" : {
         "23" : {
            "name" : "E2EPW_WriteInit1__p___o_",
            "param" : 1,
            "proto" : "uint8 E2EPW_WriteInit1__p___o_(Rte_Instance _instance_);"
         },
         "24" : {
            "name" : "E2EPW_WriteInit2__p___o_",
            "param" : 1,
            "proto" : "uint8 E2EPW_WriteInit2__p___o_(Rte_Instance _instance_);"
         },
         "25" : {
            "name" : "E2EPW_ReadInit1__p___o_",
            "param" : 1,
            "proto" : "uint8 E2EPW_ReadInit1__p___o_(Rte_Instance _instance_);"
         },
         "37" : {
            "name" : "E2E_P04MapStatusToSM",
            "param" : 2,
            "proto" : "E2E_PCheckStatusType E2E_P04MapStatusToSM(Std_ReturnType CheckReturn,E2E_P04CheckStatusType Status);"
         },
         "42" : {
            "name" : "E2E_P05MapStatusToSM",
            "param" : 2,
            "proto" : "E2E_PCheckStatusType E2E_P05MapStatusToSM(Std_ReturnType CheckReturn,E2E_P05CheckStatusType Status);"
         },
         "47" : {
            "name" : "E2E_P06MapStatusToSM",
            "param" : 2,
            "proto" : "E2E_PCheckStatusType E2E_P06MapStatusToSM(Std_ReturnType CheckReturn,E2E_P06CheckStatusType Status);"
         }
      }
   },
   "208" : {
      "abbreviation" : "Efx",
      "services" : {
         "112" : {
            "name" : "Efx_Hypot_u32u32_u32",
            "param" : 2,
            "proto" : "uint32 Efx_Hypot_u32u32_u32(uint32 x_value,uint32 y_value);"
         },
         "113" : {
            "name" : "Efx_Hypot_u16u16_u16",
            "param" : 2,
            "proto" : "uint16 Efx_Hypot_u16u16_u16(uint16 x_value,uint16 y_value);"
         },
         "114" : {
            "name" : "Efx_Hypot_u8u8_u8",
            "param" : 2,
            "proto" : "uint8 Efx_Hypot_u8u8_u8(uint8 x_value,uint8 y_value);"
         },
         "117" : {
            "name" : "Efx_Sin_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_Sin_s32_s32(sint32 x_value);"
         },
         "118" : {
            "name" : "Efx_Sin_s16_s16",
            "param" : 1,
            "proto" : "sint16 Efx_Sin_s16_s16(sint16 x_value);"
         },
         "119" : {
            "name" : "Efx_Sin_s8_s8",
            "param" : 1,
            "proto" : "sint8 Efx_Sin_s8_s8(sint8 x_value);"
         },
         "122" : {
            "name" : "Efx_Cos_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_Cos_s32_s32(sint32 x_value);"
         },
         "123" : {
            "name" : "Efx_Cos_s16_s16",
            "param" : 1,
            "proto" : "sint16 Efx_Cos_s16_s16(sint16 x_value);"
         },
         "124" : {
            "name" : "Efx_Cos_s8_s8",
            "param" : 1,
            "proto" : "sint8 Efx_Cos_s8_s8(sint8 x_value);"
         },
         "128" : {
            "name" : "Efx_Arcsin_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_Arcsin_s32_s32(sint32 x_value);"
         },
         "129" : {
            "name" : "Efx_Arcsin_s16_s16",
            "param" : 1,
            "proto" : "sint16 Efx_Arcsin_s16_s16(sint16 x_value);"
         },
         "130" : {
            "name" : "Efx_Arcsin_s8_s8",
            "param" : 1,
            "proto" : "sint8 Efx_Arcsin_s8_s8(sint8 x_value);"
         },
         "133" : {
            "name" : "Efx_Arccos_s32_u32",
            "param" : 1,
            "proto" : "uint32 Efx_Arccos_s32_u32(sint32 x_value);"
         },
         "134" : {
            "name" : "Efx_Arccos_s16_u16",
            "param" : 1,
            "proto" : "uint16 Efx_Arccos_s16_u16(sint16 x_value);"
         },
         "135" : {
            "name" : "Efx_Arccos_s8_u8",
            "param" : 1,
            "proto" : "uint8 Efx_Arccos_s8_u8(sint8 x_value);"
         },
         "144" : {
            "name" : "Efx_RampCalc",
            "param" : 4,
            "proto" : "void Efx_RampCalc(sint32 X_s32,Efx_StateRamp_Type* State_cpst,const Efx_ParamRamp_Type* Param_cpcst,sint32 dT_s32);"
         },
         "145" : {
            "name" : "Efx_RampInitState",
            "param" : 2,
            "proto" : "void Efx_RampInitState(Efx_StateRamp_Type* State_cpst,sint32 Val_s32);"
         },
         "146" : {
            "name" : "Efx_RampSetParam",
            "param" : 3,
            "proto" : "void Efx_RampSetParam(Efx_ParamRamp_Type* Param_cpst,uint32 SlopePosVal_u32,uint32 SlopeNegVal_u32);"
         },
         "147" : {
            "name" : "Efx_RampOut_s32",
            "param" : 1,
            "proto" : "sint32 Efx_RampOut_s32(const Efx_StateRamp_Type* State_cpcst);"
         },
         "148" : {
            "name" : "Efx_RampCalcJump",
            "param" : 2,
            "proto" : "void Efx_RampCalcJump(sint32 X_s32,Efx_StateRamp_Type* State_cpst);"
         },
         "149" : {
            "name" : "Efx_RampCalcSwitch_s32",
            "param" : 5,
            "proto" : "sint32 Efx_RampCalcSwitch_s32(sint32 Xa_s32,sint32 Xb_s32,Efx_StateRamp_Type* State_cpst,const Efx_ParamRamp_Type* Param_cpcst,sint32 dT_s32);"
         },
         "150" : {
            "name" : "Efx_RampCalcSwitch",
            "param" : 4,
            "proto" : "sint32 Efx_RampCalcSwitch(sint32 Xa_s32,sint32 Xb_s32,boolean Switch,Efx_StateRamp_Type* State_cpst);"
         },
         "151" : {
            "name" : "Efx_CtrlSetLimits",
            "param" : 3,
            "proto" : "void Efx_CtrlSetLimits(Efx_Limits_Type* Limit_cpst,sint32 Min_s32,sint32 Max_s32);"
         },
         "152" : {
            "name" : "Efx_RampGetSwitchPos",
            "param" : 1,
            "proto" : "boolean Efx_RampGetSwitchPos(Efx_StateRamp_Type* State_cpst);"
         },
         "153" : {
            "name" : "Efx_RampCheckActivity",
            "param" : 1,
            "proto" : "boolean Efx_RampCheckActivity(Efx_StateRamp_Type* State_cpst);"
         },
         "16" : {
            "name" : "Efx_HpFilter_u8_s16",
            "param" : 4,
            "proto" : "sint16 Efx_HpFilter_u8_s16(sint16 Yn_1,uint8 Xn,uint8 Xn_1,uint16 K);"
         },
         "17" : {
            "name" : "Efx_HpFilter_s8_s16",
            "param" : 4,
            "proto" : "sint16 Efx_HpFilter_s8_s16(sint16 Yn_1,sint8 Xn,sint8 Xn_1,uint16 K);"
         },
         "170" : {
            "name" : "Efx_DeadTime_s16_s16",
            "param" : 4,
            "proto" : "sint16 Efx_DeadTime_s16_s16(sint16 X,sint32 DelayTime,sint32 StepTime,Efx_DeadTimeParam_Type* Param);"
         },
         "176" : {
            "name" : "Efx_Debounce_u8_u8",
            "param" : 4,
            "proto" : "uint8 Efx_Debounce_u8_u8(boolean X,Efx_DebounceState_Type * State,Efx_DebounceParam_Type * Param,sint32 dT);"
         },
         "177" : {
            "name" : "Efx_DebounceInit",
            "param" : 2,
            "proto" : "void Efx_DebounceInit(Efx_DebounceState_Type* State,boolean X);"
         },
         "178" : {
            "name" : "Efx_DebounceSetParam",
            "param" : 3,
            "proto" : "void Efx_DebounceSetParam(Efx_DebounceParam_Type * Param,sint16 THighLow,sint16 TLowHigh);"
         },
         "18" : {
            "name" : "Efx_HpFilter_u16_s32",
            "param" : 4,
            "proto" : "sint32 Efx_HpFilter_u16_s32(sint32 Yn_1,uint16 Xn,uint16 Xn_1,uint16 K);"
         },
         "19" : {
            "name" : "Efx_HpFilter_s16_s32",
            "param" : 4,
            "proto" : "sint32 Efx_HpFilter_s16_s32(sint32 Yn_1,sint16 Xn,sint16 Xn_1,uint16 K);"
         },
         "197" : {
            "name" : "Efx_EdgeBipol_u8_u8",
            "param" : 2,
            "proto" : "boolean Efx_EdgeBipol_u8_u8(boolean Inp_Val,boolean* Old_Val);"
         },
         "198" : {
            "name" : "Efx_EdgeFalling_u8_u8",
            "param" : 2,
            "proto" : "boolean Efx_EdgeFalling_u8_u8(boolean Inp_Val,boolean* Old_Val);"
         },
         "199" : {
            "name" : "Efx_EdgeRising_u8_u8",
            "param" : 2,
            "proto" : "boolean Efx_EdgeRising_u8_u8(boolean Inp_Val,boolean* Old_Val);"
         },
         "20" : {
            "name" : "Efx_PCalc",
            "param" : 3,
            "proto" : "void Efx_PCalc(sint32 X_s32,sint32* P_ps32,sint32 K_s32);"
         },
         "239" : {
            "name" : "Efx_RSFlipFlop",
            "param" : 3,
            "proto" : "boolean Efx_RSFlipFlop(boolean R_Val,boolean S_Val,boolean* State_Val);"
         },
         "255" : {
            "name" : "Efx_GetVersionInfo",
            "param" : 1,
            "proto" : "void Efx_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "33" : {
            "name" : "Efx_PSetState",
            "param" : 2,
            "proto" : "void Efx_PSetState(sint32* P_s32,sint16 Y_s16);"
         },
         "41" : {
            "name" : "Efx_CalcTeQApp_s32",
            "param" : 2,
            "proto" : "sint32 Efx_CalcTeQApp_s32(sint32 T1rec_s32,sint32 dT_s32);"
         },
         "42" : {
            "name" : "Efx_PT1Calc",
            "param" : 4,
            "proto" : "void Efx_PT1Calc(sint32 X_s32,Efx_StatePT1_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32);"
         },
         "43" : {
            "name" : "Efx_PT1SetState",
            "param" : 3,
            "proto" : "void Efx_PT1SetState(Efx_StatePT1_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "44" : {
            "name" : "Efx_CalcTeQ_s32",
            "param" : 2,
            "proto" : "sint32 Efx_CalcTeQ_s32(sint32 T1rec_s32,sint32 dT_s32);"
         },
         "47" : {
            "name" : "Efx_DT1Typ2Calc",
            "param" : 5,
            "proto" : "void Efx_DT1Typ2Calc(sint32 X_s32,Efx_StateDT1Typ2_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32,sint32 dT_s32);"
         },
         "48" : {
            "name" : "Efx_DT1Typ1Calc",
            "param" : 5,
            "proto" : "void Efx_DT1Typ1Calc(sint32 X_s32,Efx_StateDT1Typ1_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32,sint32 dT_s32);"
         },
         "49" : {
            "name" : "Efx_DT1Typ1SetState",
            "param" : 4,
            "proto" : "void Efx_DT1Typ1SetState(Efx_StateDT1Typ1_Type* State_cpst,sint32 X1_s32,sint32 X2_s32,sint16 Y1_s16);"
         },
         "50" : {
            "name" : "Efx_DT1Typ2SetState",
            "param" : 3,
            "proto" : "void Efx_DT1Typ2SetState(Efx_StateDT1Typ2_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "53" : {
            "name" : "Efx_PITyp1LimCalc",
            "param" : 5,
            "proto" : "void Efx_PITyp1LimCalc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "54" : {
            "name" : "Efx_PITyp2LimCalc",
            "param" : 5,
            "proto" : "void Efx_PITyp2LimCalc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "55" : {
            "name" : "Efx_PIDTyp1LimCalc",
            "param" : 5,
            "proto" : "void Efx_PIDTyp1LimCalc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "58" : {
            "name" : "Efx_PDCalc",
            "param" : 4,
            "proto" : "void Efx_PDCalc(sint32 X_s32,Efx_StatePD_Type* State_cpst,const Efx_ParamPD_Type* Param_cpst,sint32 dT_s32);"
         },
         "59" : {
            "name" : "Efx_PDSetState",
            "param" : 3,
            "proto" : "void Efx_PDSetState(Efx_StatePD_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "60" : {
            "name" : "Efx_PDSetParam",
            "param" : 3,
            "proto" : "void Efx_PDSetParam(Efx_ParamPD_Type* Param_cpst,sint32 K_s32,sint32 Tv_s32);"
         },
         "63" : {
            "name" : "Efx_ILimCalc",
            "param" : 5,
            "proto" : "void Efx_ILimCalc(sint32 X_s32,Efx_StateI_Type* State_cpst,sint32 K_s32,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "64" : {
            "name" : "Efx_ICalc",
            "param" : 4,
            "proto" : "void Efx_ICalc(sint32 X_s32,Efx_StateI_Type* State_cpst,sint32 K_s32,sint32 dT_s32);"
         },
         "65" : {
            "name" : "Efx_ISetState",
            "param" : 3,
            "proto" : "void Efx_ISetState(Efx_StateI_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "66" : {
            "name" : "Efx_CtrlSetLimit",
            "param" : 3,
            "proto" : "void Efx_CtrlSetLimit(sint32 Min_s32,sint32 Max_s32,Efx_Limits_Type* Limit_cpst);"
         },
         "69" : {
            "name" : "Efx_PITyp1Calc",
            "param" : 4,
            "proto" : "void Efx_PITyp1Calc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,sint32 dT_s32);"
         },
         "70" : {
            "name" : "Efx_PITyp2Calc",
            "param" : 4,
            "proto" : "void Efx_PITyp2Calc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,sint32 dT_s32);"
         },
         "71" : {
            "name" : "Efx_PISetState",
            "param" : 3,
            "proto" : "void Efx_PISetState(Efx_StatePI_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "72" : {
            "name" : "Efx_PISetParam",
            "param" : 3,
            "proto" : "void Efx_PISetParam(Efx_ParamPI_Type* Param_cpst,sint32 K_s32,sint32 Tnrec);"
         },
         "75" : {
            "name" : "Efx_PIDTyp1Calc",
            "param" : 4,
            "proto" : "void Efx_PIDTyp1Calc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,sint32 dT_s32);"
         },
         "76" : {
            "name" : "Efx_PIDTyp2Calc",
            "param" : 4,
            "proto" : "void Efx_PIDTyp2Calc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,sint32 dT_s32);"
         },
         "77" : {
            "name" : "Efx_PIDSetState",
            "param" : 4,
            "proto" : "void Efx_PIDSetState(Efx_StatePID_Type* State_cpst,sint32 X1_s32,sint32 X2_s32,sint16 Y1_s16);"
         },
         "78" : {
            "name" : "Efx_PIDSetParam",
            "param" : 4,
            "proto" : "void Efx_PIDSetParam(Efx_ParamPID_Type* Param_cpst,sint32 K_s32,sint32 Tv_s32,sint32 Tnrec_s32);"
         },
         "79" : {
            "name" : "Efx_PIDTyp2LimCalc",
            "param" : 5,
            "proto" : "void Efx_PIDTyp2LimCalc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "82" : {
            "name" : "Efx_Sqrt_u32_u32",
            "param" : 1,
            "proto" : "uint32 Efx_Sqrt_u32_u32(uint32 x_value);"
         },
         "83" : {
            "name" : "Efx_Sqrt_u16_u16",
            "param" : 1,
            "proto" : "uint16 Efx_Sqrt_u16_u16(uint16 x_value);"
         },
         "84" : {
            "name" : "Efx_Sqrt_u8_u8",
            "param" : 1,
            "proto" : "uint8 Efx_Sqrt_u8_u8(uint8 x_value);"
         },
         "85" : {
            "name" : "Efx_Exp_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_Exp_s32_s32(sint32 Value1);"
         },
         "90" : {
            "name" : "Efx_Average_s32_s32",
            "param" : 2,
            "proto" : "sint32 Efx_Average_s32_s32(sint32 value1,sint32 value2);"
         }
      }
   },
   "209" : {
      "abbreviation" : "Ifl",
      "services" : {
         "16" : {
            "name" : "Ifl_IntIpoCur_f32_f32",
            "param" : 4,
            "proto" : "float32 Ifl_IntIpoCur_f32_f32(float32 X_in,uint32 N,const float32* X_array,const float32* Val_array);"
         },
         "17" : {
            "name" : "Ifl_IntIpoMap_f32f32_f32",
            "param" : 7,
            "proto" : "float32 Ifl_IntIpoMap_f32f32_f32(float32 Xin,float32 Yin,uint32 Nx,uint32 Ny,const float32* X_array,const float32* Y_array,const float32* Val_array);"
         },
         "6" : {
            "name" : "Ifl_Interpolate_f32",
            "param" : 3,
            "proto" : "float32 Ifl_Interpolate_f32(float32 Value1,float32 Value2,float32 Coef);"
         }
      }
   },
   "21" : {
      "abbreviation" : "Fee",
      "services" : {
         "0" : {
            "name" : "Fee_Init",
            "param" : 1,
            "proto" : "void Fee_Init(const Fee_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Fee_SetMode",
            "param" : 1,
            "proto" : "void Fee_SetMode(MemIf_ModeType Mode);"
         },
         "16" : {
            "name" : "Fee_JobEndNotification",
            "param" : 0,
            "proto" : "void Fee_JobEndNotification();"
         },
         "17" : {
            "name" : "Fee_JobErrorNotification",
            "param" : 0,
            "proto" : "void Fee_JobErrorNotification();"
         },
         "18" : {
            "name" : "Fee_MainFunction",
            "param" : 0,
            "proto" : "void Fee_MainFunction();"
         },
         "2" : {
            "name" : "Fee_Read",
            "param" : 4,
            "proto" : "Std_ReturnType Fee_Read(uint16 BlockNumber,uint16 BlockOffset,uint8* DataBufferPtr,uint16 Length);"
         },
         "3" : {
            "name" : "Fee_Write",
            "param" : 2,
            "proto" : "Std_ReturnType Fee_Write(uint16 BlockNumber,const uint8* DataBufferPtr);"
         },
         "4" : {
            "name" : "Fee_Cancel",
            "param" : 0,
            "proto" : "void Fee_Cancel();"
         },
         "5" : {
            "name" : "Fee_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Fee_GetStatus();"
         },
         "6" : {
            "name" : "Fee_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Fee_GetJobResult();"
         },
         "7" : {
            "name" : "Fee_InvalidateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Fee_InvalidateBlock(uint16 BlockNumber);"
         },
         "8" : {
            "name" : "Fee_GetVersionInfo",
            "param" : 1,
            "proto" : "void Fee_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "9" : {
            "name" : "Fee_EraseImmediateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Fee_EraseImmediateBlock(uint16 BlockNumber);"
         }
      }
   },
   "210" : {
      "abbreviation" : "Mfl",
      "services" : {
         "10" : {
            "name" : "Mfl_Round_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Round_f32(float32 ValValue);"
         },
         "101" : {
            "name" : "Mfl_ArrayAverage_f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_ArrayAverage_f32_f32(const float32* Array,uint32 Count);"
         },
         "11" : {
            "name" : "Mfl_Ceil_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Ceil_f32(float32 ValValue);"
         },
         "112" : {
            "name" : "Mfl_Hypot_f32f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Hypot_f32f32_f32(float32 x_value,float32 y_value);"
         },
         "12" : {
            "name" : "Mfl_Floor_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Floor_f32(float32 ValValue);"
         },
         "145" : {
            "name" : "Mfl_RampInitState",
            "param" : 2,
            "proto" : "void Mfl_RampInitState(Mfl_StateRamp_Type* State_cpst,float32 Val_f32);"
         },
         "146" : {
            "name" : "Mfl_RampSetParam",
            "param" : 3,
            "proto" : "void Mfl_RampSetParam(Mfl_ParamRamp_Type* Param_cpst,float32 SlopePosVal_f32,float32 SlopeNegVal_f32);"
         },
         "147" : {
            "name" : "Mfl_RampOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_RampOut_f32(const Mfl_StateRamp_Type* State_cpcst);"
         },
         "148" : {
            "name" : "Mfl_RampCalcJump",
            "param" : 2,
            "proto" : "void Mfl_RampCalcJump(float32 X_f32,Mfl_StateRamp_Type* State_cpst);"
         },
         "149" : {
            "name" : "Mfl_RampCalcSwitch_f32",
            "param" : 5,
            "proto" : "float32 Mfl_RampCalcSwitch_f32(float32 Xa_f32,float32 Xb_f32,Mfl_StateRamp_Type* State_cpst,const Mfl_ParamRamp_Type* Param_cpcst,float32 dT_f32);"
         },
         "151" : {
            "name" : "Mfl_RampCheckActivity",
            "param" : 1,
            "proto" : "boolean Mfl_RampCheckActivity(Mfl_StateRamp_Type* State_cpst);"
         },
         "16" : {
            "name" : "Mfl_PCalc",
            "param" : 3,
            "proto" : "void Mfl_PCalc(float32 X_f32,float32* P_pf32,float32 K_f32);"
         },
         "160" : {
            "name" : "Mfl_HystCenterHalfDelta_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystCenterHalfDelta_f32_u8(float32 X,float32 center,float32 halfDelta,uint8* State);"
         },
         "163" : {
            "name" : "Mfl_HystLeftRight_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystLeftRight_f32_u8(float32 X,float32 Lsp,float32 Rsp,uint8* State);"
         },
         "165" : {
            "name" : "Mfl_HystDeltaRight_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystDeltaRight_f32_u8(float32 X,float32 Delta,float32 Rsp,uint8* State);"
         },
         "167" : {
            "name" : "Mfl_HystLeftDelta_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystLeftDelta_f32_u8(float32 X,float32 Lsp,float32 Delta,uint8* State);"
         },
         "170" : {
            "name" : "Mfl_DeadTime_f32_f32",
            "param" : 4,
            "proto" : "float32 Mfl_DeadTime_f32_f32(float32 X,float32 DelayTime,float32 StepTime,Mfl_DeadTimeParam_Type* Param);"
         },
         "177" : {
            "name" : "Mfl_DebounceInit",
            "param" : 2,
            "proto" : "void Mfl_DebounceInit(Mfl_DebounceState_Type* State,boolean X);"
         },
         "178" : {
            "name" : "Mfl_DebounceSetparam",
            "param" : 3,
            "proto" : "void Mfl_DebounceSetparam(Mfl_DebounceParam_Type* Param,float32 THighLow,float32 TLowHigh);"
         },
         "18" : {
            "name" : "Mfl_POut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_POut_f32(const float32* P_pf32);"
         },
         "181" : {
            "name" : "Mfl_SortAscend_f32",
            "param" : 2,
            "proto" : "void Mfl_SortAscend_f32(float32* Array,uint16 Num);"
         },
         "186" : {
            "name" : "Mfl_SortDescend_f32",
            "param" : 2,
            "proto" : "void Mfl_SortDescend_f32(float32* Array,uint16 Num);"
         },
         "187" : {
            "name" : "Mfl_MedianSort_f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_MedianSort_f32_f32(float32* Array,uint8 N);"
         },
         "188" : {
            "name" : "Mfl_ArcSin_f32",
            "param" : 1,
            "proto" : "float32 Mfl_ArcSin_f32(float32 value);"
         },
         "189" : {
            "name" : "Mfl_ArcCos_f32",
            "param" : 1,
            "proto" : "float32 Mfl_ArcCos_f32(float32 value);"
         },
         "190" : {
            "name" : "Mfl_ArcTan_f32",
            "param" : 1,
            "proto" : "float32 Mfl_ArcTan_f32(float32 value);"
         },
         "191" : {
            "name" : "Mfl_ArcTan2_f32",
            "param" : 2,
            "proto" : "float32 Mfl_ArcTan2_f32(float32 X1_f32,float32 X2_f32);"
         },
         "192" : {
            "name" : "Mfl_DT1Typ2Calc",
            "param" : 5,
            "proto" : "void Mfl_DT1Typ2Calc(float32 X_f32,Mfl_StateDT1Typ2_Type* State_cpst,float32 K_f32,float32 TeQ_f32,float32 dT_f32);"
         },
         "193" : {
            "name" : "Mfl_DT1Typ2SetState",
            "param" : 3,
            "proto" : "void Mfl_DT1Typ2SetState(Mfl_StateDT1Typ2_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "194" : {
            "name" : "Mfl_DT1Typ2Out_f32",
            "param" : 1,
            "proto" : "float32 Mfl_DT1Typ2Out_f32(const Mfl_StateDT1Typ2_Type* State_cpst);"
         },
         "195" : {
            "name" : "Mfl_PITyp1LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PITyp1LimCalc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "196" : {
            "name" : "Mfl_PITyp2LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PITyp2LimCalc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "198" : {
            "name" : "Mfl_PIDTyp2LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PIDTyp2LimCalc(float32 X_f32,Mfl_StatePID_Type* State_cpst,const Mfl_ParamPID_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "200" : {
            "name" : "Mfl_DebounceSetParam",
            "param" : 3,
            "proto" : "void Mfl_DebounceSetParam(Mfl_DebounceParam_Type* Param,float32 THighLow,float32 TLowHigh);"
         },
         "201" : {
            "name" : "Mfl_CtrlSetLimits",
            "param" : 3,
            "proto" : "void Mfl_CtrlSetLimits(Mfl_Limits_Type* Limit_cpst,float32 Min_f32,float32 Max_f32);"
         },
         "202" : {
            "name" : "Mfl_RampCalcSwitch",
            "param" : 4,
            "proto" : "float32 Mfl_RampCalcSwitch(float32 Xa_f32,float32 Xb_f32,boolean Switch,Mfl_StateRamp_Type* State_cpst);"
         },
         "255" : {
            "name" : "Mfl_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mfl_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "26" : {
            "name" : "Mfl_PT1Calc",
            "param" : 4,
            "proto" : "void Mfl_PT1Calc(float32 X_f32,Mfl_StatePT1_Type* State_cpst,float32 K_f32,float32 TeQ_f32);"
         },
         "27" : {
            "name" : "Mfl_PT1SetState",
            "param" : 3,
            "proto" : "void Mfl_PT1SetState(Mfl_StatePT1_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "28" : {
            "name" : "Mfl_CalcTeQ_f32",
            "param" : 2,
            "proto" : "float32 Mfl_CalcTeQ_f32(float32 T1rec_f32,float32 dT_f32);"
         },
         "29" : {
            "name" : "Mfl_PT1Out_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PT1Out_f32(const Mfl_StatePT1_Type* State_cpst);"
         },
         "30" : {
            "name" : "Mfl_CalcTeQApp_f32",
            "param" : 2,
            "proto" : "float32 Mfl_CalcTeQApp_f32(float32 T1rec_f32,float32 dT_f32);"
         },
         "32" : {
            "name" : "Mfl_DT1Typ1Calc",
            "param" : 5,
            "proto" : "void Mfl_DT1Typ1Calc(float32 X_f32,Mfl_StateDT1Typ1_Type* State_cpst,float32 K_f32,float32 TeQ_f32,float32 dT_f32);"
         },
         "35" : {
            "name" : "Mfl_DT1Typ1Out_f32",
            "param" : 1,
            "proto" : "float32 Mfl_DT1Typ1Out_f32(const Mfl_StateDT1Typ1_Type* State_cpst);"
         },
         "42" : {
            "name" : "Mfl_PDCalc",
            "param" : 4,
            "proto" : "void Mfl_PDCalc(float32 X_f32,Mfl_StatePD_Type* State_cpst,const Mfl_ParamPD_Type* Param_cpst,float32 dT_f32);"
         },
         "43" : {
            "name" : "Mfl_PDSetState",
            "param" : 3,
            "proto" : "void Mfl_PDSetState(Mfl_StatePD_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "44" : {
            "name" : "Mfl_PDSetParam",
            "param" : 3,
            "proto" : "void Mfl_PDSetParam(Mfl_ParamPD_Type* Param_cpst,float32 K_f32,float32 Tv_f32);"
         },
         "45" : {
            "name" : "Mfl_PDOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PDOut_f32(const Mfl_StatePD_Type* State_cpst);"
         },
         "48" : {
            "name" : "Mfl_ICalc",
            "param" : 4,
            "proto" : "void Mfl_ICalc(float32 X_f32,Mfl_StateI_Type* State_cpst,float32 K_f32,float32 dT_f32);"
         },
         "49" : {
            "name" : "Mfl_ISetState",
            "param" : 3,
            "proto" : "void Mfl_ISetState(Mfl_StateI_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "50" : {
            "name" : "Mfl_ILimCalc",
            "param" : 5,
            "proto" : "void Mfl_ILimCalc(float32 X_f32,Mfl_StateI_Type* State_cpst,float32 K_f32,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "51" : {
            "name" : "Mfl_IOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_IOut_f32(const Mfl_StateI_Type* State_cpst);"
         },
         "52" : {
            "name" : "Mfl_CtrlSetLimit",
            "param" : 3,
            "proto" : "void Mfl_CtrlSetLimit(float32 Min_f32,float32 Max_f32,Mfl_Limits_Type* Limit_cpst);"
         },
         "53" : {
            "name" : "Mfl_PITyp1Calc",
            "param" : 4,
            "proto" : "void Mfl_PITyp1Calc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,float32 dT_f32);"
         },
         "54" : {
            "name" : "Mfl_PITyp2Calc",
            "param" : 4,
            "proto" : "void Mfl_PITyp2Calc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,float32 dT_f32);"
         },
         "57" : {
            "name" : "Mfl_PIOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PIOut_f32(const Mfl_StatePI_Type* State_cpst);"
         },
         "58" : {
            "name" : "Mfl_PIDTyp1Calc",
            "param" : 4,
            "proto" : "void Mfl_PIDTyp1Calc(float32 X_f32,Mfl_StatePID_Type* State_cpst,const Mfl_ParamPID_Type* Param_cpst,float32 dT_f32);"
         },
         "60" : {
            "name" : "Mfl_PIDSetState",
            "param" : 4,
            "proto" : "void Mfl_PIDSetState(Mfl_StatePID_Type* State_cpst,float32 X1_f32,float32 X2_f32,float32 Y1_f32);"
         },
         "61" : {
            "name" : "Mfl_PIDSetParam",
            "param" : 4,
            "proto" : "void Mfl_PIDSetParam(Mfl_ParamPID_Type* Param_cpst,float32 K_f32,float32 Tv_f32,float32 Tnrec_f32);"
         },
         "62" : {
            "name" : "Mfl_PIDOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PIDOut_f32(const Mfl_StatePID_Type* State_cpst);"
         },
         "64" : {
            "name" : "Mfl_Abs_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Abs_f32(float32 ValValue);"
         },
         "65" : {
            "name" : "Mfl_Sign_f32",
            "param" : 1,
            "proto" : "sint8 Mfl_Sign_f32(float32 ValValue);"
         },
         "69" : {
            "name" : "Mfl_Max_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Max_f32(float32 ValValue1,float32 ValValue2);"
         },
         "70" : {
            "name" : "Mfl_Min_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Min_f32(float32 Value1,float32 Value2);"
         },
         "71" : {
            "name" : "Mfl_RateLimiter_f32",
            "param" : 3,
            "proto" : "float32 Mfl_RateLimiter_f32(float32 newval,float32 oldval,float32 maxdif);"
         },
         "72" : {
            "name" : "Mfl_Limit_f32",
            "param" : 3,
            "proto" : "float32 Mfl_Limit_f32(float32 val,float32 lowLim,float32 upLim);"
         },
         "80" : {
            "name" : "Mfl_Pow_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Pow_f32(float32 ValBase,float32 ValExp);"
         },
         "81" : {
            "name" : "Mfl_Sqrt_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Sqrt_f32(float32 ValValue);"
         },
         "83" : {
            "name" : "Mfl_Exp_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Exp_f32(float32 ValValue);"
         },
         "84" : {
            "name" : "Mfl_Log_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Log_f32(float32 ValValue);"
         },
         "85" : {
            "name" : "Mfl_Sin_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Sin_f32(float32 value);"
         },
         "86" : {
            "name" : "Mfl_Cos_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Cos_f32(float32 value);"
         },
         "87" : {
            "name" : "Mfl_Tan_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Tan_f32(float32 value);"
         },
         "88" : {
            "name" : "Mfl_arcSin_f32",
            "param" : 1,
            "proto" : "float32 Mfl_arcSin_f32(float32 value);"
         },
         "89" : {
            "name" : "Mfl_arcCos_f32",
            "param" : 1,
            "proto" : "float32 Mfl_arcCos_f32(float32 value);"
         },
         "9" : {
            "name" : "Mfl_Trunc_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Trunc_f32(float32 ValValue);"
         },
         "90" : {
            "name" : "Mfl_arcTan_f32",
            "param" : 1,
            "proto" : "float32 Mfl_arcTan_f32(float32 value);"
         },
         "91" : {
            "name" : "Mfl_arcTan2_f32",
            "param" : 2,
            "proto" : "float32 Mfl_arcTan2_f32(float32 X1_f32,float32 X2_f32);"
         },
         "97" : {
            "name" : "Mfl_Average_f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Average_f32_f32(float32 value1,float32 value2);"
         }
      }
   },
   "211" : {
      "abbreviation" : "Mfx",
      "services" : {
         "1024" : {
            "name" : "Mfx_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mfx_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "212" : {
      "abbreviation" : "Xcp",
      "services" : {
         "0" : {
            "name" : "Xcp_Init",
            "param" : 1,
            "proto" : "void Xcp_Init(const Xcp_ConfigType* Xcp_ConfigPtr);"
         },
         "1" : {
            "name" : "Xcp_GetVersionInfo",
            "param" : 1,
            "proto" : "void Xcp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "2" : {
            "name" : "Xcp__module_TxConfirmation",
            "param" : 1,
            "proto" : "void Xcp__module_TxConfirmation(PduIdType XcpTxPduId);"
         },
         "3" : {
            "name" : "Xcp__module_RxIndication",
            "param" : 2,
            "proto" : "void Xcp__module_RxIndication(PduIdType XcpRxPduId,const PduInfoType* XcpRxPduPtr);"
         },
         "4" : {
            "name" : "Xcp_MainFunction",
            "param" : 0,
            "proto" : "void Xcp_MainFunction();"
         },
         "5" : {
            "name" : "Xcp_SetTransmissionMode",
            "param" : 2,
            "proto" : "void Xcp_SetTransmissionMode(NetworkHandleType Channel,Xcp_TransmissionModeType Mode);"
         },
         "65" : {
            "name" : "Xcp__Lo_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType Xcp__Lo_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         }
      }
   },
   "213" : {
      "abbreviation" : "Ifx",
      "services" : {
         "255" : {
            "name" : "Ifx_GetVersionInfo",
            "param" : 1,
            "proto" : "void Ifx_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "22" : {
      "abbreviation" : "MemIf",
      "services" : {
         "1" : {
            "name" : "MemIf_SetMode",
            "param" : 1,
            "proto" : "void MemIf_SetMode(MemIf_ModeType Mode);"
         },
         "2" : {
            "name" : "MemIf_Read",
            "param" : 5,
            "proto" : "Std_ReturnType MemIf_Read(uint8 DeviceIndex,uint16 BlockNumber,uint16 BlockOffset,uint8* DataBufferPtr,uint16 Length);"
         },
         "3" : {
            "name" : "MemIf_Write",
            "param" : 3,
            "proto" : "Std_ReturnType MemIf_Write(uint8 DeviceIndex,uint16 BlockNumber,const uint8* DataBufferPtr);"
         },
         "4" : {
            "name" : "MemIf_Cancel",
            "param" : 1,
            "proto" : "void MemIf_Cancel(uint8 DeviceIndex);"
         },
         "5" : {
            "name" : "MemIf_GetStatus",
            "param" : 1,
            "proto" : "MemIf_StatusType MemIf_GetStatus(uint8 DeviceIndex);"
         },
         "6" : {
            "name" : "MemIf_GetJobResult",
            "param" : 1,
            "proto" : "MemIf_JobResultType MemIf_GetJobResult(uint8 DeviceIndex);"
         },
         "7" : {
            "name" : "MemIf_InvalidateBlock",
            "param" : 2,
            "proto" : "Std_ReturnType MemIf_InvalidateBlock(uint8 DeviceIndex,uint16 BlockNumber);"
         },
         "8" : {
            "name" : "MemIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void MemIf_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "9" : {
            "name" : "MemIf_EraseImmediateBlock",
            "param" : 2,
            "proto" : "Std_ReturnType MemIf_EraseImmediateBlock(uint8 DeviceIndex,uint16 BlockNumber);"
         }
      }
   },
   "254" : {
      "abbreviation" : "IO_HW_Abstraction",
      "services" : {
         "1" : {
            "name" : "IoHwAb_Init_Init_Id_",
            "param" : 1,
            "proto" : "void IoHwAb_Init_Init_Id_(const IoHwAb_Init_Id__ConfigType* ConfigPtr);"
         },
         "112" : {
            "name" : "IoHwAb_Adc_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Adc_NotifyReadyForPowerState_Mode_();"
         },
         "128" : {
            "name" : "IoHwAb_PreparePowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_PreparePowerState_Mode_();"
         },
         "144" : {
            "name" : "IoHwAb_EnterPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_EnterPowerState_Mode_();"
         },
         "16" : {
            "name" : "IoHwAb_GetVersionInfo",
            "param" : 1,
            "proto" : "void IoHwAb_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "160" : {
            "name" : "IoHwAb_OcuNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_OcuNotification_channel_();"
         },
         "32" : {
            "name" : "IoHwAb_AdcNotification_groupID_",
            "param" : 0,
            "proto" : "void IoHwAb_AdcNotification_groupID_();"
         },
         "48" : {
            "name" : "IoHwAb_PwmNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_PwmNotification_channel_();"
         },
         "64" : {
            "name" : "IoHwAb_IcuNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_IcuNotification_channel_();"
         },
         "80" : {
            "name" : "IoHwAb_GptNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_GptNotification_channel_();"
         },
         "96" : {
            "name" : "IoHwAb_Pwm_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Pwm_NotifyReadyForPowerState_Mode_();"
         }
      }
   },
   "255" : {
      "abbreviation" : "Complex_Drivers",
      "services" : {}
   },
   "29" : {
      "abbreviation" : "Nm",
      "services" : {
         "0" : {
            "name" : "Nm_Init",
            "param" : 1,
            "proto" : "void Nm_Init(const Nm_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "Nm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "11" : {
            "name" : "Nm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetLocalNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "13" : {
            "name" : "Nm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_CheckRemoteSleepIndication(NetworkHandleType nmNetworkHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "14" : {
            "name" : "Nm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType Nm_GetState(NetworkHandleType nmNetworkHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "15" : {
            "name" : "Nm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Nm_GetVersionInfo(Std_VersionInfoType* nmVerInfoPtr);"
         },
         "16" : {
            "name" : "Nm_MainFunction",
            "param" : 0,
            "proto" : "void Nm_MainFunction();"
         },
         "17" : {
            "name" : "Nm_NetworkStartIndication",
            "param" : 1,
            "proto" : "void Nm_NetworkStartIndication(NetworkHandleType nmNetworkHandle);"
         },
         "18" : {
            "name" : "Nm_NetworkMode",
            "param" : 1,
            "proto" : "void Nm_NetworkMode(NetworkHandleType nmNetworkHandle);"
         },
         "19" : {
            "name" : "Nm_PrepareBusSleepMode",
            "param" : 1,
            "proto" : "void Nm_PrepareBusSleepMode(NetworkHandleType nmNetworkHandle);"
         },
         "2" : {
            "name" : "Nm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_NetworkRequest(NetworkHandleType NetworkHandle);"
         },
         "20" : {
            "name" : "Nm_BusSleepMode",
            "param" : 1,
            "proto" : "void Nm_BusSleepMode(NetworkHandleType nmNetworkHandle);"
         },
         "21" : {
            "name" : "Nm_PduRxIndication",
            "param" : 1,
            "proto" : "void Nm_PduRxIndication(NetworkHandleType nmNetworkHandle);"
         },
         "22" : {
            "name" : "Nm_StateChangeNotification",
            "param" : 3,
            "proto" : "void Nm_StateChangeNotification(NetworkHandleType nmNetworkHandle,Nm_StateType nmPreviousState,Nm_StateType nmCurrentState);"
         },
         "23" : {
            "name" : "Nm_RemoteSleepIndication",
            "param" : 1,
            "proto" : "void Nm_RemoteSleepIndication(NetworkHandleType nmNetworkHandle);"
         },
         "24" : {
            "name" : "Nm_RemoteSleepCancellation",
            "param" : 1,
            "proto" : "void Nm_RemoteSleepCancellation(NetworkHandleType nmNetworkHandle);"
         },
         "25" : {
            "name" : "Nm_SynchronizationPoint",
            "param" : 1,
            "proto" : "void Nm_SynchronizationPoint(NetworkHandleType nmNetworkHandle);"
         },
         "26" : {
            "name" : "Nm_RepeatMessageIndication",
            "param" : 1,
            "proto" : "void Nm_RepeatMessageIndication(NetworkHandleType nmNetworkHandle);"
         },
         "27" : {
            "name" : "Nm_TxTimeoutException",
            "param" : 1,
            "proto" : "void Nm_TxTimeoutException(NetworkHandleType nmNetworkHandle);"
         },
         "29" : {
            "name" : "Nm_CarWakeUpIndication",
            "param" : 1,
            "proto" : "void Nm_CarWakeUpIndication(NetworkHandleType nmChannelHandle);"
         },
         "3" : {
            "name" : "Nm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_NetworkRelease(NetworkHandleType NetworkHandle);"
         },
         "30" : {
            "name" : "Nm_CoordReadyToSleepIndication",
            "param" : 1,
            "proto" : "void Nm_CoordReadyToSleepIndication(NetworkHandleType nmChannelHandle);"
         },
         "31" : {
            "name" : "Nm_CoordReadyToSleepCancellation",
            "param" : 1,
            "proto" : "void Nm_CoordReadyToSleepCancellation(NetworkHandleType nmChannelHandle);"
         },
         "4" : {
            "name" : "Nm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_DisableCommunication(NetworkHandleType NetworkHandle);"
         },
         "5" : {
            "name" : "Nm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_EnableCommunication(NetworkHandleType NetworkHandle);"
         },
         "6" : {
            "name" : "Nm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_SetUserData(NetworkHandleType NetworkHandle,const uint8* nmUserDataPtr);"
         },
         "7" : {
            "name" : "Nm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetUserData(NetworkHandleType NetworkHandle,uint8* nmUserDataPtr);"
         },
         "8" : {
            "name" : "Nm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetPduData(NetworkHandleType NetworkHandle,uint8* nmPduData);"
         },
         "9" : {
            "name" : "Nm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_RepeatMessageRequest(NetworkHandleType NetworkHandle);"
         }
      }
   },
   "31" : {
      "abbreviation" : "CanNm",
      "services" : {
         "0" : {
            "name" : "CanNm_Init",
            "param" : 1,
            "proto" : "void CanNm_Init(const CanNm_ConfigType* cannmConfigPtr);"
         },
         "1" : {
            "name" : "CanNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "10" : {
            "name" : "CanNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetPduData(NetworkHandleType nmChannelHandle,uint8* nmPduDataPtr);"
         },
         "11" : {
            "name" : "CanNm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType CanNm_GetState(NetworkHandleType nmChannelHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "12" : {
            "name" : "CanNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "13" : {
            "name" : "CanNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_EnableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "19" : {
            "name" : "CanNm_MainFunction",
            "param" : 0,
            "proto" : "void CanNm_MainFunction();"
         },
         "192" : {
            "name" : "CanNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_RequestBusSynchronization(NetworkHandleType nmChannelHandle);"
         },
         "2" : {
            "name" : "CanNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "20" : {
            "name" : "CanNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_Transmit(PduIdType CanNmTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "208" : {
            "name" : "CanNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_CheckRemoteSleepIndication(NetworkHandleType nmChannelHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "22" : {
            "name" : "CanNm_ConfirmPnAvailability",
            "param" : 1,
            "proto" : "void CanNm_ConfirmPnAvailability(NetworkHandleType nmChannelHandle);"
         },
         "23" : {
            "name" : "CanNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "241" : {
            "name" : "CanNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanNm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "CanNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_NetworkRelease(NetworkHandleType nmChannelHandle);"
         },
         "4" : {
            "name" : "CanNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_SetUserData(NetworkHandleType nmChannelHandle,const uint8* nmUserDataPtr);"
         },
         "5" : {
            "name" : "CanNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetUserData(NetworkHandleType nmChannelHandle,uint8* nmUserDataPtr);"
         },
         "6" : {
            "name" : "CanNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "64" : {
            "name" : "CanNm_TxConfirmation",
            "param" : 1,
            "proto" : "void CanNm_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "CanNm_RxIndication",
            "param" : 2,
            "proto" : "void CanNm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "CanNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetLocalNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "8" : {
            "name" : "CanNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_RepeatMessageRequest(NetworkHandleType nmChannelHandle);"
         }
      }
   },
   "32" : {
      "abbreviation" : "FrNm",
      "services" : {
         "1" : {
            "name" : "FrNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_PassiveStartUp(NetworkHandleType NetworkHandle);"
         },
         "10" : {
            "name" : "FrNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "11" : {
            "name" : "FrNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetLocalNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "12" : {
            "name" : "FrNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "13" : {
            "name" : "FrNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_CheckRemoteSleepIndication(NetworkHandleType NetworkHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "14" : {
            "name" : "FrNm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType FrNm_GetState(NetworkHandleType NetworkHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "15" : {
            "name" : "FrNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrNm_GetVersionInfo(Std_VersionInfoType* NmVerInfoPtr);"
         },
         "16" : {
            "name" : "FrNm_StartupError",
            "param" : 1,
            "proto" : "void FrNm_StartupError(NetworkHandleType NetworkHandle);"
         },
         "17" : {
            "name" : "FrNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_Transmit(PduIdType FrNmTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "18" : {
            "name" : "FrNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "192" : {
            "name" : "FrNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_RequestBusSynchronization(NetworkHandleType NetworkHandle);"
         },
         "2" : {
            "name" : "FrNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_NetworkRequest(NetworkHandleType NetworkHandle);"
         },
         "240" : {
            "name" : "FrNm_MainFunction__NmClstIdx_",
            "param" : 0,
            "proto" : "void FrNm_MainFunction__NmClstIdx_();"
         },
         "3" : {
            "name" : "FrNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_NetworkRelease(NetworkHandleType NetworkHandle);"
         },
         "5" : {
            "name" : "FrNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_EnableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "6" : {
            "name" : "FrNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_SetUserData(NetworkHandleType NetworkHandle,const uint8* nmUserDataPtr);"
         },
         "64" : {
            "name" : "FrNm_TxConfirmation",
            "param" : 1,
            "proto" : "void FrNm_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "FrNm_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "FrNm_RxIndication",
            "param" : 2,
            "proto" : "void FrNm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "FrNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetUserData(NetworkHandleType NetworkHandle,uint8* nmUserDataPtr);"
         },
         "8" : {
            "name" : "FrNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetPduData(NetworkHandleType NetworkHandle,uint8* nmPduData);"
         },
         "9" : {
            "name" : "FrNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_RepeatMessageRequest(NetworkHandleType NetworkHandle);"
         }
      }
   },
   "33" : {
      "abbreviation" : "UdpNm",
      "services" : {
         "1" : {
            "name" : "UdpNm_Init",
            "param" : 1,
            "proto" : "void UdpNm_Init(const UdpNm_ConfigType* UdpNmConfigPtr);"
         },
         "10" : {
            "name" : "UdpNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetPduData(NetworkHandleType nmChannelHandle,uint8* nmPduDataPtr);"
         },
         "11" : {
            "name" : "UdpNm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType UdpNm_GetState(NetworkHandleType nmChannelHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "12" : {
            "name" : "UdpNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "13" : {
            "name" : "UdpNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_EnableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "14" : {
            "name" : "UdpNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "17" : {
            "name" : "UdpNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_CheckRemoteSleepIndication(NetworkHandleType nmChannelHandle,boolean* NmRemoteSleepIndPtr);"
         },
         "18" : {
            "name" : "UdpNm_SetCoordBits",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_SetCoordBits(NetworkHandleType nmChannelHandle,uint8 nmCoordBits);"
         },
         "19" : {
            "name" : "UdpNm_MainFunction_Instance_Id_",
            "param" : 0,
            "proto" : "void UdpNm_MainFunction_Instance_Id_();"
         },
         "2" : {
            "name" : "UdpNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "20" : {
            "name" : "UdpNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_RequestBusSynchronization(NetworkHandleType nmChannelHandle);"
         },
         "21" : {
            "name" : "UdpNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_Transmit(PduIdType UdpNmTxPduId,const PduInfoType* UdpNmSrcPduInfoPtr);"
         },
         "22" : {
            "name" : "UdpNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "3" : {
            "name" : "UdpNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_NetworkRelease(NetworkHandleType nmChannelHandle);"
         },
         "4" : {
            "name" : "UdpNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_SetUserData(NetworkHandleType nmChannelHandle,const uint8* nmUserDataPtr);"
         },
         "5" : {
            "name" : "UdpNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetUserData(NetworkHandleType nmChannelHandle,uint8* nmUserDataPtr);"
         },
         "6" : {
            "name" : "UdpNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "64" : {
            "name" : "UdpNm_SoAdIfTxConfirmation",
            "param" : 1,
            "proto" : "void UdpNm_SoAdIfTxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "UdpNm_SoAdIfRxIndication",
            "param" : 2,
            "proto" : "void UdpNm_SoAdIfRxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "UdpNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetLocalNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "8" : {
            "name" : "UdpNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_RepeatMessageRequest(NetworkHandleType nmChannelHandle);"
         },
         "9" : {
            "name" : "UdpNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void UdpNm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "34" : {
      "abbreviation" : "J1939Nm",
      "services" : {
         "13" : {
            "name" : "J1939Nm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType J1939Nm_GetState(NetworkHandleType NetworkHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "15" : {
            "name" : "J1939Nm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Nm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "16" : {
            "name" : "J1939Nm_GetBusOffDelay",
            "param" : 2,
            "proto" : "void J1939Nm_GetBusOffDelay(NetworkHandleType network,uint8* delayCyclesPtr);"
         },
         "2" : {
            "name" : "J1939Nm_DeInit",
            "param" : 0,
            "proto" : "void J1939Nm_DeInit();"
         },
         "3" : {
            "name" : "J1939Nm_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Nm_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "4" : {
            "name" : "J1939Nm_MainFunction",
            "param" : 0,
            "proto" : "void J1939Nm_MainFunction();"
         },
         "5" : {
            "name" : "J1939Nm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Nm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "6" : {
            "name" : "J1939Nm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Nm_NetworkRelease(NetworkHandleType nmChannelHandle);"
         },
         "64" : {
            "name" : "J1939Nm_TxConfirmation",
            "param" : 1,
            "proto" : "void J1939Nm_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "J1939Nm_RxIndication",
            "param" : 2,
            "proto" : "void J1939Nm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "J1939Nm_RequestIndication",
            "param" : 6,
            "proto" : "void J1939Nm_RequestIndication(uint8 node,NetworkHandleType channel,uint32 requestedPgn,uint8 sourceAddress,uint8 destAddress,uint8 priority);"
         }
      }
   },
   "35" : {
      "abbreviation" : "CanTp",
      "services" : {}
   },
   "36" : {
      "abbreviation" : "FrTp",
      "services" : {
         "0" : {
            "name" : "FrTp_Init",
            "param" : 1,
            "proto" : "void FrTp_Init(const FrTp_ConfigType* configPtr);"
         },
         "1" : {
            "name" : "FrTp_Shutdown",
            "param" : 0,
            "proto" : "void FrTp_Shutdown();"
         },
         "16" : {
            "name" : "FrTp_MainFunction",
            "param" : 0,
            "proto" : "void FrTp_MainFunction();"
         },
         "2" : {
            "name" : "FrTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrTp_Transmit(PduIdType FrTpTxSduId,const PduInfoType* FrTpTxSduInfoPtr);"
         },
         "3" : {
            "name" : "FrTp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType FrTp_CancelTransmit(PduIdType FrTpTxSduId);"
         },
         "39" : {
            "name" : "FrTp_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrTp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "FrTp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType FrTp_ChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "64" : {
            "name" : "FrTp_TxConfirmation",
            "param" : 1,
            "proto" : "void FrTp_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "FrTp_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrTp_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "FrTp_RxIndication",
            "param" : 2,
            "proto" : "void FrTp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "8" : {
            "name" : "FrTp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType FrTp_CancelReceive(PduIdType FrTpRxSduId);"
         }
      }
   },
   "37" : {
      "abbreviation" : "J1939Tp",
      "services" : {
         "10" : {
            "name" : "J1939Tp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Tp_CancelReceive(PduIdType RxSduId);"
         },
         "2" : {
            "name" : "J1939Tp_Shutdown",
            "param" : 0,
            "proto" : "void J1939Tp_Shutdown();"
         },
         "3" : {
            "name" : "J1939Tp_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Tp_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "4" : {
            "name" : "J1939Tp_MainFunction",
            "param" : 0,
            "proto" : "void J1939Tp_MainFunction();"
         },
         "5" : {
            "name" : "J1939Tp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType J1939Tp_Transmit(PduIdType TxSduId,const PduInfoType* TxInfoPtr);"
         },
         "64" : {
            "name" : "J1939Tp_TxConfirmation",
            "param" : 1,
            "proto" : "void J1939Tp_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "J1939Tp_RxIndication",
            "param" : 2,
            "proto" : "void J1939Tp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "8" : {
            "name" : "J1939Tp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType J1939Tp_ChangeParameter(PduIdType RxSduId,TPParameterType Parameter,uint16 Value);"
         },
         "9" : {
            "name" : "J1939Tp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Tp_CancelTransmit(PduIdType TxSduId);"
         }
      }
   },
   "38" : {
      "abbreviation" : "FrArTp",
      "services" : {
         "0" : {
            "name" : "FrArTp_Init",
            "param" : 1,
            "proto" : "void FrArTp_Init(const FrArTp_ConfigType* configPtr);"
         },
         "1" : {
            "name" : "FrArTp_Shutdown",
            "param" : 0,
            "proto" : "void FrArTp_Shutdown();"
         },
         "16" : {
            "name" : "FrArTp_MainFunction",
            "param" : 0,
            "proto" : "void FrArTp_MainFunction();"
         },
         "2" : {
            "name" : "FrArTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrArTp_Transmit(PduIdType FrArTpTxSduId,const PduInfoType* FrArTpTxSduInfoPtr);"
         },
         "3" : {
            "name" : "FrArTp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType FrArTp_CancelTransmit(PduIdType FrArTpTxSduId);"
         },
         "39" : {
            "name" : "FrArTp_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrArTp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "FrArTp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType FrArTp_ChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "64" : {
            "name" : "FrArTp_TxConfirmation",
            "param" : 1,
            "proto" : "void FrArTp_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "FrArTp_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrArTp_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "FrArTp_RxIndication",
            "param" : 2,
            "proto" : "void FrArTp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "8" : {
            "name" : "FrArTp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType FrArTp_CancelReceive(PduIdType FrArTpRxSduId);"
         }
      }
   },
   "40" : {
      "abbreviation" : "Ea",
      "services" : {
         "0" : {
            "name" : "Ea_Init",
            "param" : 1,
            "proto" : "void Ea_Init(const Ea_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Ea_SetMode",
            "param" : 1,
            "proto" : "void Ea_SetMode(MemIf_ModeType Mode);"
         },
         "16" : {
            "name" : "Ea_JobEndNotification",
            "param" : 0,
            "proto" : "void Ea_JobEndNotification();"
         },
         "17" : {
            "name" : "Ea_JobErrorNotification",
            "param" : 0,
            "proto" : "void Ea_JobErrorNotification();"
         },
         "18" : {
            "name" : "Ea_MainFunction",
            "param" : 0,
            "proto" : "void Ea_MainFunction();"
         },
         "2" : {
            "name" : "Ea_Read",
            "param" : 4,
            "proto" : "Std_ReturnType Ea_Read(uint16 BlockNumber,uint16 BlockOffset,uint8* DataBufferPtr,uint16 Length);"
         },
         "3" : {
            "name" : "Ea_Write",
            "param" : 2,
            "proto" : "Std_ReturnType Ea_Write(uint16 BlockNumber,const uint8* DataBufferPtr);"
         },
         "4" : {
            "name" : "Ea_Cancel",
            "param" : 0,
            "proto" : "void Ea_Cancel();"
         },
         "5" : {
            "name" : "Ea_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Ea_GetStatus();"
         },
         "6" : {
            "name" : "Ea_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Ea_GetJobResult();"
         },
         "7" : {
            "name" : "Ea_InvalidateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Ea_InvalidateBlock(uint16 BlockNumber);"
         },
         "8" : {
            "name" : "Ea_GetVersionInfo",
            "param" : 1,
            "proto" : "void Ea_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "9" : {
            "name" : "Ea_EraseImmediateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Ea_EraseImmediateBlock(uint16 BlockNumber);"
         }
      }
   },
   "42" : {
      "abbreviation" : "BswM",
      "services" : {
         "0" : {
            "name" : "BswM_Init",
            "param" : 1,
            "proto" : "void BswM_Init(const BswM_ConfigType * ConfigPtr);"
         },
         "1" : {
            "name" : "BswM_GetVersionInfo",
            "param" : 1,
            "proto" : "void BswM_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "10" : {
            "name" : "BswM_LinSM_CurrentSchedule",
            "param" : 2,
            "proto" : "void BswM_LinSM_CurrentSchedule(NetworkHandleType Network,LinIf_SchHandleType CurrentSchedule);"
         },
         "11" : {
            "name" : "BswM_LinTp_RequestMode",
            "param" : 2,
            "proto" : "void BswM_LinTp_RequestMode(NetworkHandleType Network,LinTp_Mode LinTpRequestedMode);"
         },
         "13" : {
            "name" : "BswM_EthSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_EthSM_CurrentState(NetworkHandleType Network,EthSM_NetworkModeStateType CurrentState);"
         },
         "14" : {
            "name" : "BswM_ComM_CurrentMode",
            "param" : 2,
            "proto" : "void BswM_ComM_CurrentMode(NetworkHandleType Network,ComM_ModeType RequestedMode);"
         },
         "15" : {
            "name" : "BswM_EcuM_CurrentState",
            "param" : 1,
            "proto" : "void BswM_EcuM_CurrentState(EcuM_StateType CurrentState);"
         },
         "16" : {
            "name" : "BswM_EcuM_CurrentWakeup",
            "param" : 2,
            "proto" : "void BswM_EcuM_CurrentWakeup(EcuM_WakeupSourceType source,EcuM_WakeupStatusType state);"
         },
         "17" : {
            "name" : "BswM_WdgM_RequestPartitionReset",
            "param" : 1,
            "proto" : "void BswM_WdgM_RequestPartitionReset(ApplicationType Application);"
         },
         "18" : {
            "name" : "BswM_TriggerStartUpPhase2",
            "param" : 1,
            "proto" : "Std_ReturnType BswM_TriggerStartUpPhase2(CoreIdType CoreID);"
         },
         "19" : {
            "name" : "BswM_TriggerSlaveRTEStop",
            "param" : 1,
            "proto" : "Std_ReturnType BswM_TriggerSlaveRTEStop(CoreIdType CoreID);"
         },
         "2" : {
            "name" : "BswM_RequestMode",
            "param" : 2,
            "proto" : "void BswM_RequestMode(BswM_UserType requesting_user,BswM_ModeType requested_mode);"
         },
         "20" : {
            "name" : "BswM_Dcm_ApplicationUpdated",
            "param" : 0,
            "proto" : "void BswM_Dcm_ApplicationUpdated();"
         },
         "21" : {
            "name" : "BswM_ComM_CurrentPNCMode",
            "param" : 2,
            "proto" : "void BswM_ComM_CurrentPNCMode(PNCHandleType PNC,ComM_PncModeType CurrentPncMode);"
         },
         "22" : {
            "name" : "BswM_NvM_CurrentBlockMode",
            "param" : 2,
            "proto" : "void BswM_NvM_CurrentBlockMode(NvM_BlockIdType Block,NvM_RequestResultType CurrentBlockMode);"
         },
         "23" : {
            "name" : "BswM_NvM_CurrentJobMode",
            "param" : 2,
            "proto" : "void BswM_NvM_CurrentJobMode(uint8 ServiceId,NvM_RequestResultType CurrentJobMode);"
         },
         "24" : {
            "name" : "BswM_J1939Nm_StateChangeNotification",
            "param" : 3,
            "proto" : "void BswM_J1939Nm_StateChangeNotification(NetworkHandleType Network,uint8 Node,Nm_StateType NmState);"
         },
         "26" : {
            "name" : "BswM_CanSM_CurrentIcomConfiguration",
            "param" : 3,
            "proto" : "void BswM_CanSM_CurrentIcomConfiguration(NetworkHandleType Network,IcomConfigIdType ActiveConfiguration,IcomSwitch_ErrorType Error);"
         },
         "27" : {
            "name" : "BswM_J1939DcmBroadcastStatus",
            "param" : 1,
            "proto" : "void BswM_J1939DcmBroadcastStatus(uint16 NetworkMask);"
         },
         "28" : {
            "name" : "BswM_BswMModeRequest",
            "param" : 2,
            "proto" : "void BswM_BswMModeRequest(BswM_ModeGroupType requested_modeGroup,BswM_ModeType requested_mode);"
         },
         "29" : {
            "name" : "BswM_BswMModeSwitchNotification",
            "param" : 2,
            "proto" : "void BswM_BswMModeSwitchNotification(BswM_ModeGroupType switched_modeGroup,BswM_ModeType switched_mode);"
         },
         "3" : {
            "name" : "BswM_MainFunction",
            "param" : 0,
            "proto" : "void BswM_MainFunction();"
         },
         "30" : {
            "name" : "BswM_BswMPartitionRestarted",
            "param" : 0,
            "proto" : "void BswM_BswMPartitionRestarted();"
         },
         "31" : {
            "name" : "BswM_Sd_ClientServiceCurrentState",
            "param" : 2,
            "proto" : "void BswM_Sd_ClientServiceCurrentState(uint16 SdClientServiceHandleId,Sd_ClientServiceCurrentStateType CurrentClientState);"
         },
         "32" : {
            "name" : "BswM_Sd_EventHandlerCurrentState",
            "param" : 2,
            "proto" : "void BswM_Sd_EventHandlerCurrentState(uint16 SdEventHandlerHandleId,Sd_EventHandlerCurrentStateType EventHandlerStatus);"
         },
         "33" : {
            "name" : "BswM_Sd_ConsumedEventGroupCurrentState",
            "param" : 2,
            "proto" : "void BswM_Sd_ConsumedEventGroupCurrentState(uint16 SdConsumedEventGroupHandleId,Sd_ConsumedEventGroupCurrentStateTypeConsumedEventGroupState);"
         },
         "34" : {
            "name" : "BswM_ComM_InitiateReset",
            "param" : 0,
            "proto" : "void BswM_ComM_InitiateReset();"
         },
         "35" : {
            "name" : "BswM_EcuM_RequestedState",
            "param" : 2,
            "proto" : "void BswM_EcuM_RequestedState(EcuM_StateType State,EcuM_RunStatusType CurrentStatus);"
         },
         "36" : {
            "name" : "BswM_NmIf_CarWakeUpIndication",
            "param" : 1,
            "proto" : "void BswM_NmIf_CarWakeUpIndication(NetworkHandleType Network);"
         },
         "4" : {
            "name" : "BswM_Deinit",
            "param" : 0,
            "proto" : "void BswM_Deinit();"
         },
         "5" : {
            "name" : "BswM_CanSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_CanSM_CurrentState(NetworkHandleType Network,CanSM_BswMRequestedModeType CurrentState);"
         },
         "6" : {
            "name" : "BswM_Dcm_CommunicationMode_CurrentState",
            "param" : 2,
            "proto" : "void BswM_Dcm_CommunicationMode_CurrentState(NetworkHandleType Network,Dcm_CommunicationModeType RequestedMode);"
         },
         "9" : {
            "name" : "BswM_LinSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_LinSM_CurrentState(NetworkHandleType Network,LinSM_ModeType CurrentState);"
         }
      }
   },
   "43" : {
      "abbreviation" : "WdgIf",
      "services" : {
         "1" : {
            "name" : "WdgIf_SetMode",
            "param" : 2,
            "proto" : "Std_ReturnType WdgIf_SetMode(uint8 DeviceIndex,WdgIf_ModeType WdgMode);"
         },
         "2" : {
            "name" : "WdgIf_SetTriggerCondition",
            "param" : 2,
            "proto" : "void WdgIf_SetTriggerCondition(uint8 DeviceIndex,uint16 Timeout);"
         },
         "3" : {
            "name" : "WdgIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void WdgIf_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         }
      }
   },
   "49" : {
      "abbreviation" : "LdCom",
      "services" : {
         "1" : {
            "name" : "LdCom_Init",
            "param" : 1,
            "proto" : "void LdCom_Init(const LdCom_ConfigType* config);"
         },
         "160" : {
            "name" : "Rte_LdComCbkRxIndication__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkRxIndication__sn_(const PduInfoType* Info);"
         },
         "161" : {
            "name" : "Rte_LdComCbkStartOfReception__sn_",
            "param" : 3,
            "proto" : "BufReq_ReturnType Rte_LdComCbkStartOfReception__sn_(const PduInfoType* SduInfoPtr,PduLengthType SduLength,PduLengthType* RxBufferSizePtr);"
         },
         "162" : {
            "name" : "Rte_LdComCbkCopyRxData__sn_",
            "param" : 2,
            "proto" : "BufReq_ReturnType Rte_LdComCbkCopyRxData__sn_(const PduInfoType* SduInfoPtr,PduLengthType* RxBufferSizePtr);"
         },
         "163" : {
            "name" : "Rte_LdComCbkTpRxIndication__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkTpRxIndication__sn_(Std_ReturnType Result);"
         },
         "164" : {
            "name" : "Rte_LdComCbkCopyTxData__sn_",
            "param" : 3,
            "proto" : "BufReq_ReturnType Rte_LdComCbkCopyTxData__sn_(const PduInfoType* SduInfoPtr,RetryInfoType* RetryInfoPtr,PduLengthType* TxDataCntPtr);"
         },
         "165" : {
            "name" : "Rte_LdComCbkTpTxConfirmation__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkTpTxConfirmation__sn_(Std_ReturnType result);"
         },
         "166" : {
            "name" : "Rte_LdComCbkTriggerTransmit__sn_",
            "param" : 1,
            "proto" : "Std_ReturnType Rte_LdComCbkTriggerTransmit__sn_(PduInfoType* PduInfoPtr);"
         },
         "167" : {
            "name" : "Rte_LdComCbkTxConfirmation__sn_",
            "param" : 0,
            "proto" : "void Rte_LdComCbkTxConfirmation__sn_();"
         },
         "2" : {
            "name" : "LdCom_DeInit",
            "param" : 0,
            "proto" : "void LdCom_DeInit();"
         },
         "3" : {
            "name" : "LdCom_GetVersionInfo",
            "param" : 1,
            "proto" : "void LdCom_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "LdCom_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LdCom_Transmit(PduIdType Id,const PduInfoType* PduInfoPtr);"
         },
         "64" : {
            "name" : "LdCom_TxConfirmation",
            "param" : 1,
            "proto" : "void LdCom_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "LdCom_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType LdCom_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "LdCom_RxIndication",
            "param" : 2,
            "proto" : "void LdCom_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "LdCom_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType LdCom_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "LdCom_CopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType LdCom_CopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "69" : {
            "name" : "LdCom_TpRxIndication",
            "param" : 2,
            "proto" : "void LdCom_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "70" : {
            "name" : "LdCom_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType LdCom_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "LdCom_TpTxConfirmation",
            "param" : 2,
            "proto" : "void LdCom_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         }
      }
   },
   "50" : {
      "abbreviation" : "Com",
      "services" : {
         "15" : {
            "name" : "Com_ReceiveShadowSignal",
            "param" : 2,
            "proto" : "void Com_ReceiveShadowSignal(Com_SignalIdType SignalId,void* SignalDataPtr);"
         },
         "23" : {
            "name" : "Com_TriggerIPDUSend",
            "param" : 1,
            "proto" : "Std_ReturnType Com_TriggerIPDUSend(PduIdType PduId);"
         },
         "24" : {
            "name" : "Com_MainFunctionRx",
            "param" : 0,
            "proto" : "void Com_MainFunctionRx();"
         },
         "25" : {
            "name" : "Com_MainFunctionTx",
            "param" : 0,
            "proto" : "void Com_MainFunctionTx();"
         },
         "26" : {
            "name" : "Com_MainFunctionRouteSignals",
            "param" : 0,
            "proto" : "void Com_MainFunctionRouteSignals();"
         },
         "27" : {
            "name" : "Com_InvalidateSignalGroup",
            "param" : 1,
            "proto" : "uint8 Com_InvalidateSignalGroup(Com_SignalGroupIdType SignalGroupId);"
         },
         "29" : {
            "name" : "Com_SetIpduGroup",
            "param" : 3,
            "proto" : "void Com_SetIpduGroup(Com_IpduGroupVector ipduGroupVector,Com_IpduGroupIdType ipduGroupId,boolean bitval);"
         },
         "35" : {
            "name" : "Com_SendSignalGroupArray",
            "param" : 2,
            "proto" : "uint8 Com_SendSignalGroupArray(Com_SignalGroupIdType SignalGroupId,const uint8* SignalGroupArrayPtr);"
         },
         "36" : {
            "name" : "Com_ReceiveSignalGroupArray",
            "param" : 2,
            "proto" : "uint8 Com_ReceiveSignalGroupArray(Com_SignalGroupIdType SignalGroupId,uint8* SignalGroupArrayPtr);"
         },
         "65" : {
            "name" : "Com_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType Com_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "Com_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType Com_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "70" : {
            "name" : "Com_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType Com_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         }
      }
   },
   "51" : {
      "abbreviation" : "PduR",
      "services" : {
         "240" : {
            "name" : "PduR_Init",
            "param" : 1,
            "proto" : "void PduR_Init(const PduR_PBConfigType* ConfigPtr);"
         },
         "242" : {
            "name" : "PduR_GetConfigurationId",
            "param" : 0,
            "proto" : "PduR_PBConfigIdType PduR_GetConfigurationId();"
         },
         "243" : {
            "name" : "PduR_EnableRouting",
            "param" : 1,
            "proto" : "void PduR_EnableRouting(PduR_RoutingPathGroupIdType id);"
         },
         "244" : {
            "name" : "PduR_DisableRouting",
            "param" : 2,
            "proto" : "void PduR_DisableRouting(PduR_RoutingPathGroupIdType id,boolean initialize);"
         }
      }
   },
   "52" : {
      "abbreviation" : "IpduM",
      "services" : {
         "0" : {
            "name" : "IpduM_Init",
            "param" : 1,
            "proto" : "void IpduM_Init(const IpduM_ConfigType* config);"
         },
         "1" : {
            "name" : "IpduM_GetVersionInfo",
            "param" : 1,
            "proto" : "void IpduM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "16" : {
            "name" : "IpduM_MainFunction",
            "param" : 0,
            "proto" : "void IpduM_MainFunction();"
         },
         "3" : {
            "name" : "IpduM_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType IpduM_Transmit(PduIdType PdumTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "64" : {
            "name" : "IpduM_TxConfirmation",
            "param" : 1,
            "proto" : "void IpduM_TxConfirmation(PduIdType TxPduId);"
         },
         "65" : {
            "name" : "IpduM_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType IpduM_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "IpduM_RxIndication",
            "param" : 2,
            "proto" : "void IpduM_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "53" : {
      "abbreviation" : "Dcm",
      "services" : {
         "1" : {
            "name" : "Dcm_Init",
            "param" : 1,
            "proto" : "void Dcm_Init(const Dcm_ConfigType* ConfigPtr);"
         },
         "13" : {
            "name" : "Dcm_GetSecurityLevel",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetSecurityLevel(Dcm_SecLevelType* SecLevel);"
         },
         "15" : {
            "name" : "Dcm_GetActiveProtocol",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetActiveProtocol(Dcm_ProtocolType* ActiveProtocol);"
         },
         "33" : {
            "name" : "Dcm_ComM_NoComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_NoComModeEntered(uint8 NetworkId);"
         },
         "34" : {
            "name" : "Dcm_ComM_SilentComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_SilentComModeEntered(uint8 NetworkId);"
         },
         "35" : {
            "name" : "Dcm_ComM_FullComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_FullComModeEntered(uint8 NetworkId);"
         },
         "36" : {
            "name" : "Dcm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dcm_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "37" : {
            "name" : "Dcm_MainFunction",
            "param" : 0,
            "proto" : "void Dcm_MainFunction();"
         },
         "38" : {
            "name" : "Dcm_ReadMemory",
            "param" : 6,
            "proto" : "Dcm_ReturnReadMemoryType Dcm_ReadMemory(Dcm_OpStatusType OpStatus,uint8 MemoryIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint8* MemoryData,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "39" : {
            "name" : "Dcm_WriteMemory",
            "param" : 6,
            "proto" : "Dcm_ReturnWriteMemoryType Dcm_WriteMemory(Dcm_OpStatusType OpStatus,uint8 MemoryIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint8* MemoryData,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "42" : {
            "name" : "Dcm_ResetToDefaultSession",
            "param" : 0,
            "proto" : "Std_ReturnType Dcm_ResetToDefaultSession();"
         },
         "43" : {
            "name" : "Dcm_DemTriggerOnDTCStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Dcm_DemTriggerOnDTCStatus(uint32 DTC,Dem_UdsStatusByteType DTCStatusOld,Dem_UdsStatusByteType DTCStatusNew);"
         },
         "45" : {
            "name" : "Dcm_TriggerOnEvent",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_TriggerOnEvent(uint8 RoeEventId);"
         },
         "48" : {
            "name" : "Dcm_ProcessRequestDownload",
            "param" : 6,
            "proto" : "Std_ReturnType Dcm_ProcessRequestDownload(Dcm_OpStatusType OpStatus,uint8 DataFormatIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint32* BlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "49" : {
            "name" : "Dcm_ProcessRequestUpload",
            "param" : 6,
            "proto" : "Std_ReturnType Dcm_ProcessRequestUpload(Dcm_OpStatusType OpStatus,uint8 DataFormatIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint32* BlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "50" : {
            "name" : "_Module___DiagnosticService_",
            "param" : 3,
            "proto" : "Std_ReturnType _Module___DiagnosticService_(Dcm_OpStatusType OpStatus,const Dcm_MsgContextType* pMsgContext,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "51" : {
            "name" : "_Module___DiagnosticService___SubService_",
            "param" : 3,
            "proto" : "Std_ReturnType _Module___DiagnosticService___SubService_(Dcm_OpStatusType OpStatus,const Dcm_MsgContextType* pMsgContext,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "52" : {
            "name" : "Xxx_ReadData",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ReadData(uint8* Data);"
         },
         "53" : {
            "name" : "Xxx_WriteData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_WriteData(uint8* Data,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "54" : {
            "name" : "Xxx_ReadDataLength",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ReadDataLength(uint16* DataLength);"
         },
         "55" : {
            "name" : "Xxx_ConditionCheckRead",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ConditionCheckRead(Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "56" : {
            "name" : "Xxx_GetScalingInformation",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_GetScalingInformation(Dcm_OpStatusType OpStatus,uint8* ScalingInfo,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "58" : {
            "name" : "Xxx_FreezeCurrentState",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_FreezeCurrentState(Dcm_OpStatusType OpStatus,[Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "59" : {
            "name" : "Xxx_ReadData",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ReadData(Dcm_OpStatusType OpStatus,uint8* Data);"
         },
         "6" : {
            "name" : "Dcm_GetSesCtrlType",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetSesCtrlType(Dcm_SesCtrlType* SesCtrlType);"
         },
         "60" : {
            "name" : "Xxx_ResetToDefault",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ResetToDefault(Dcm_OpStatusType OpStatus,[Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "62" : {
            "name" : "Xxx_WriteData",
            "param" : 4,
            "proto" : "Std_ReturnType Xxx_WriteData(uint8* Data,uint16 DataLength,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "64" : {
            "name" : "Xxx_ReadDidData",
            "param" : 5,
            "proto" : "Std_ReturnType Xxx_ReadDidData(uint16 DID,uint8* Data,Dcm_OpStatusType OpStatus,uint16 DataLength,Dcm_NegativeResponseCodeType ErrorCode);"
         },
         "65" : {
            "name" : "Xxx_WriteDidData",
            "param" : 5,
            "proto" : "Std_ReturnType Xxx_WriteDidData(uint16 DID,uint8* Data,Dcm_OpStatusType OpStatus,uint16 DataLength,Dcm_NegativeResponseCodeType ErrorCode);"
         },
         "67" : {
            "name" : "Dcm_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType Dcm_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "Xxx_GetSeed",
            "param" : 4,
            "proto" : "Std_ReturnType Xxx_GetSeed(const uint8* SecurityAccessDataRecord,Dcm_OpStatusType OpStatus,uint8* Seed,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "69" : {
            "name" : "Xxx_GetSeed",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_GetSeed(Dcm_OpStatusType OpStatus,uint8* Seed,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "7" : {
            "name" : "Dcm_GetVin",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetVin(uint8* Data);"
         },
         "70" : {
            "name" : "Dcm_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType Dcm_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "71" : {
            "name" : "Xxx_CompareKey",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_CompareKey(const uint8* Key,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "72" : {
            "name" : "Dcm_TpTxConfirmation",
            "param" : 2,
            "proto" : "void Dcm_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "Xxx_ConditionCheckRead",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ConditionCheckRead(Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "74" : {
            "name" : "Xxx_FreezeCurrentState",
            "param" : 0,
            "proto" : "Std_ReturnType Xxx_FreezeCurrentState([Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "75" : {
            "name" : "Xxx_GetScalingInformation",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_GetScalingInformation(uint8* ScalingInfo,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "76" : {
            "name" : "Xxx_ReadDataLength",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ReadDataLength(Dcm_OpStatusType OpStatus,uint16* DataLength);"
         },
         "77" : {
            "name" : "Xxx_ResetToDefault",
            "param" : 0,
            "proto" : "Std_ReturnType Xxx_ResetToDefault([Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "79" : {
            "name" : "Xxx_ReturnControlToECU",
            "param" : 0,
            "proto" : "Std_ReturnType Xxx_ReturnControlToECU([Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "81" : {
            "name" : "Xxx_WriteData",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_WriteData(uint8* Data,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "82" : {
            "name" : "Xxx_WriteData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_WriteData(uint8* Data,uint16 DataLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "83" : {
            "name" : "Xxx_IsDidAvailable",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_IsDidAvailable(uint16 DID,Dcm_OpStatusType OpStatus,Dcm_DidSupportedType* supported);"
         },
         "84" : {
            "name" : "Xxx_ShortTermAdjustment",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ShortTermAdjustment(uint8* ControlStateInfo,uint16 DataLength,[Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "85" : {
            "name" : "Xxx_ShortTermAdjustment",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_ShortTermAdjustment(uint8* ControlStateInfo,uint16 DataLength,Dcm_OpStatusType OpStatus,[Dcm_ControlMask_{Data} controlMask,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "86" : {
            "name" : "Dcm_SetActiveDiagnostic",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_SetActiveDiagnostic(boolean active);"
         },
         "87" : {
            "name" : "Dcm_ProcessRequestFileTransfer",
            "param" : 9,
            "proto" : "Std_ReturnType Dcm_ProcessRequestFileTransfer(Dcm_OpStatusType OpStatus,uint8 modeofOperation,uint16 fileSizeParameterLength,uint8* filePathAndName,uint8 dataFormatIdentifier,uint8* fileSizeUncompressedOrDirInfoLength,uint8* fileSizeCompressed,uint32* BlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "88" : {
            "name" : "Xxx_ReadData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_ReadData(Dcm_OpStatusType OpStatus,uint8* Data,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "89" : {
            "name" : "Xxx_GetSecurityAttemptCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_GetSecurityAttemptCounter(Dcm_OpStatusType OpStatus,uint8* AttemptCounter);"
         },
         "90" : {
            "name" : "Xxx_SetSecurityAttemptCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_SetSecurityAttemptCounter(Dcm_OpStatusType OpStatus,uint8 AttemptCounter);"
         },
         "91" : {
            "name" : "Xxx_Start",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_Start([DcmDspRoutineSignalType dataIn_1,] ...[DcmDspRoutineSignalType dataIn_n,][const uint8* dataInVar,]Dcm_OpStatusType OpStatus,[DcmDspRoutineSignalType dataOut_1,] ...[DcmDspRoutineSignalType dataOut_n,][uint8* dataOutVar,][uint16 currentLengthDataInVar,][uint16* currentLengthDataOutVar,]Dcm_NegativeResponseCodeType ErrorCode);"
         },
         "92" : {
            "name" : "Xxx_Stop",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_Stop([DcmDspRoutineSignalType dataIn_1,] ...[DcmDspRoutineSignalType dataIn_n,][const uint8* dataInVar,][DcmDspRoutineSignalType dataOut_1,] ...[DcmDspRoutineSignalType dataOut_n,][uint8* dataOutVar,][uint16 currentLengthDataInVar,][uint16* currentLengthDataOutVar,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "93" : {
            "name" : "Xxx_RequestResults",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_RequestResults(Dcm_OpStatusType OpStatus,[DcmDspRoutineSignalType* dataOut_1,] ...[DcmDspRoutineSignalType* dataOut_n,][uint8* dataOutVar,][uint16* currentLengthDataOutVar,]Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "94" : {
            "name" : "Xxx_ReadDidRangeDataLength",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_ReadDidRangeDataLength(uint16 DID,Dcm_OpStatusType OpStatus,uint16* DataLength);"
         },
         "95" : {
            "name" : "Xxx_ClearDTCCheckFnc",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ClearDTCCheckFnc(uint32 GoDTC,Dcm_NegativeResponseCodeType* ErrorCode);"
         }
      }
   },
   "54" : {
      "abbreviation" : "Dem",
      "services" : {
         "0" : {
            "name" : "Dem_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dem_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "1" : {
            "name" : "Dem_PreInit",
            "param" : 0,
            "proto" : "void Dem_PreInit();"
         },
         "10" : {
            "name" : "Dem_GetEventStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventStatus(Dem_EventIdType EventId,Dem_UdsStatusByteType* EventStatusByte);"
         },
         "100" : {
            "name" : "Dem_DcmReadDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID21(uint8* PID21value);"
         },
         "101" : {
            "name" : "Dem_DcmReadDataOfPID30",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID30(uint8* PID30value);"
         },
         "102" : {
            "name" : "Dem_DcmReadDataOfPID31",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID31(uint8* PID31value);"
         },
         "103" : {
            "name" : "Dem_DcmReadDataOfPID41",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID41(uint8* PID41value);"
         },
         "104" : {
            "name" : "Dem_DcmReadDataOfPID4D",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID4D(uint8* PID4Dvalue);"
         },
         "105" : {
            "name" : "Dem_DcmReadDataOfPID4E",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID4E(uint8* PID4Evalue);"
         },
         "106" : {
            "name" : "Dem_DcmReadDataOfPID91",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID91(uint8* PID91value);"
         },
         "107" : {
            "name" : "Dem_DcmGetInfoTypeValue08",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetInfoTypeValue08(Dcm_OpStatusType OpStatus,uint8* Iumprdata08,uint8* Iumprdata08BufferSize);"
         },
         "108" : {
            "name" : "Dem_DcmGetInfoTypeValue0B",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetInfoTypeValue0B(Dcm_OpStatusType OpStatus,uint8* Iumprdata0B,uint8* Iumprdata0BBufferSize);"
         },
         "109" : {
            "name" : "Dem_GetEventExtendedDataRecordEx",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_GetEventExtendedDataRecordEx(Dem_EventIdType EventId,uint8 RecordNumber,uint8* DestBuffer,uint16* BufSize);"
         },
         "11" : {
            "name" : "Dem_GetEventFailed",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventFailed(Dem_EventIdType EventId,boolean* EventFailed);"
         },
         "110" : {
            "name" : "Dem_GetEventFreezeFrameDataEx",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_GetEventFreezeFrameDataEx(Dem_EventIdType EventId,uint8 RecordNumber,uint16 DataId,uint8* DestBuffer,uint16* BufSize);"
         },
         "113" : {
            "name" : "Dem_RepIUMPRDenLock",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_RepIUMPRDenLock(Dem_RatioIdType RatioID);"
         },
         "114" : {
            "name" : "Dem_RepIUMPRDenRelease",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_RepIUMPRDenRelease(Dem_RatioIdType RatioID);"
         },
         "115" : {
            "name" : "Dem_RepIUMPRFaultDetect",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_RepIUMPRFaultDetect(Dem_RatioIdType RatioID);"
         },
         "12" : {
            "name" : "Dem_GetEventTested",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventTested(Dem_EventIdType EventId,boolean* EventTested);"
         },
         "121" : {
            "name" : "Dem_SetPtoStatus",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetPtoStatus(boolean PtoStatus);"
         },
         "122" : {
            "name" : "Dem_SetWIRStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetWIRStatus(Dem_EventIdType EventId,boolean WIRStatus);"
         },
         "123" : {
            "name" : "Dem_DcmCheckClearParameter",
            "param" : 3,
            "proto" : "Dem_ReturnClearDTCType Dem_DcmCheckClearParameter(uint32 DTC,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin);"
         },
         "13" : {
            "name" : "Dem_GetDTCOfEvent",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetDTCOfEvent(Dem_EventIdType EventId,Dem_DTCFormatType DTCFormat,uint32* DTCOfEvent);"
         },
         "14" : {
            "name" : "Dem_DcmGetSeverityOfDTC",
            "param" : 2,
            "proto" : "Dem_ReturnGetSeverityOfDTCType Dem_DcmGetSeverityOfDTC(uint32 DTC,Dem_DTCSeverityType* DTCSeverity);"
         },
         "144" : {
            "name" : "Dem_J1939DcmSetDTCFilter",
            "param" : 4,
            "proto" : "Dem_ReturnSetFilterType Dem_J1939DcmSetDTCFilter(Dem_J1939DcmDTCStatusFilterType DTCStatusFilter,Dem_DTCKindType DTCKind,uint8 node,Dem_J1939DcmLampStatusType* LampStatus);"
         },
         "145" : {
            "name" : "Dem_J1939DcmGetNumberOfFilteredDTC",
            "param" : 1,
            "proto" : "Dem_ReturnGetNumberOfFilteredDTCType Dem_J1939DcmGetNumberOfFilteredDTC(uint16* NumberOfFilteredDTC);"
         },
         "146" : {
            "name" : "Dem_J1939DcmGetNextFilteredDTC",
            "param" : 2,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_J1939DcmGetNextFilteredDTC(uint32* J1939DTC,uint8* OccurenceCounter);"
         },
         "147" : {
            "name" : "Dem_J1939DcmFirstDTCwithLampStatus",
            "param" : 1,
            "proto" : "void Dem_J1939DcmFirstDTCwithLampStatus(uint8 node);"
         },
         "148" : {
            "name" : "Dem_J1939DcmGetNextDTCwithLampStatus",
            "param" : 3,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_J1939DcmGetNextDTCwithLampStatus(Dem_J1939DcmLampStatusType* LampStatus,uint32* J1939DTC,uint8* OccurenceCounter);"
         },
         "149" : {
            "name" : "Dem_J1939DcmClearDTC",
            "param" : 2,
            "proto" : "Dem_ReturnClearDTCType Dem_J1939DcmClearDTC(Dem_J1939DcmSetClearFilterType DTCTypeFilter,uint8 node);"
         },
         "15" : {
            "name" : "Dem_ReportErrorStatus",
            "param" : 2,
            "proto" : "void Dem_ReportErrorStatus(Dem_EventIdType EventId,Dem_EventStatusType EventStatus);"
         },
         "151" : {
            "name" : "Dem_J1939DcmGetNextFreezeFrame",
            "param" : 4,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_J1939DcmGetNextFreezeFrame(uint32* J1939DTC,uint8* OccurenceCounter,uint8* DestBuffer,uint16* BufSize);"
         },
         "152" : {
            "name" : "Dem_J1939DcmGetNextSPNInFreezeFrame",
            "param" : 2,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_J1939DcmGetNextSPNInFreezeFrame(uint32* SPNSupported,uint8* SPNDataLength);"
         },
         "153" : {
            "name" : "Dem_J1939DcmSetRatioFilter",
            "param" : 3,
            "proto" : "Dem_ReturnSetFilterType Dem_J1939DcmSetRatioFilter(uint16* IgnitionCycleCounter,uint16* OBDMonitoringConditionsEncountered,uint8 node);"
         },
         "154" : {
            "name" : "Dem_J1939DcmGetNextFilteredRatio",
            "param" : 3,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_J1939DcmGetNextFilteredRatio(uint16* SPN,uint16* Numerator,uint16* Denominator);"
         },
         "155" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness1",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness1(Dem_J1939DcmDiagnosticReadiness1Type* DataValue,uint8 node);"
         },
         "156" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness2",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness2(Dem_J1939DcmDiagnosticReadiness2Type* DataValue,uint8 node);"
         },
         "157" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness3",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness3(Dem_J1939DcmDiagnosticReadiness3Type* DataValue,uint8 node);"
         },
         "158" : {
            "name" : "Dem_GetOperationCycleState",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetOperationCycleState(uint8 OperationCycleId,Dem_OperationCycleStateType* CycleState);"
         },
         "159" : {
            "name" : "Dem_GetDebouncingOfEvent",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetDebouncingOfEvent(Dem_EventIdType EventId,Dem_DebouncingStateType* DebouncingState);"
         },
         "162" : {
            "name" : "Dem_SetDTR",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_SetDTR(uint16 DTRId,sint32 TestResult,sint32 LowerLimit,sint32 UpperLimit,Dem_DTRControlType Ctrlval);"
         },
         "163" : {
            "name" : "Dem_DcmGetAvailableOBDMIDs",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_DcmGetAvailableOBDMIDs(uint8 Obdmid,uint32* Obdmidvalue);"
         },
         "164" : {
            "name" : "Dem_DcmGetNumTIDsOfOBDMID",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_DcmGetNumTIDsOfOBDMID(uint8 Obdmid,uint8* numberOfTIDs);"
         },
         "165" : {
            "name" : "Dem_DcmGetDTRData",
            "param" : 7,
            "proto" : "Std_ReturnType Dem_DcmGetDTRData(uint8 Obdmid,uint8 TIDindex,uint8* TIDvalue,uint8* UaSID,uint16* Testvalue,uint16* Lowlimvalue,uint16* Upplimvalue);"
         },
         "166" : {
            "name" : "Dem_SetDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID21(uint8* PID21value);"
         },
         "167" : {
            "name" : "Dem_SetDataOfPID31",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID31(uint8* PID31value);"
         },
         "168" : {
            "name" : "Dem_SetDataOfPID4D",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID4D(uint8* PID4Dvalue);"
         },
         "169" : {
            "name" : "Dem_SetDataOfPID4E",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID4E(uint8* PID4Evalue);"
         },
         "17" : {
            "name" : "Dem_SetAgingCycleState",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetAgingCycleState(uint8 OperationCycleId);"
         },
         "170" : {
            "name" : "Dem_SetPfcCycleQualified",
            "param" : 0,
            "proto" : "Std_ReturnType Dem_SetPfcCycleQualified();"
         },
         "171" : {
            "name" : "Dem_GetPfcCycleQualified",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetPfcCycleQualified(boolean* isqualified);"
         },
         "172" : {
            "name" : "Dem_SetClearDTC",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_SetClearDTC(uint32 DTC,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin);"
         },
         "174" : {
            "name" : "Dem_SetIUMPRDenCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetIUMPRDenCondition(Dem_IumprDenomCondIdType ConditionId,Dem_IumprDenomCondStatusType ConditionStatus);"
         },
         "175" : {
            "name" : "Dem_GetIUMPRDenCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetIUMPRDenCondition(Dem_IumprDenomCondIdType ConditionId,Dem_IumprDenomCondStatusType* ConditionStatus);"
         },
         "176" : {
            "name" : "Dem_DcmControlDTCStatusChangedNotification",
            "param" : 1,
            "proto" : "void Dem_DcmControlDTCStatusChangedNotification(boolean TriggerNotification);"
         },
         "177" : {
            "name" : "Dem_GetDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetDataOfPID21(uint8* PID21value);"
         },
         "178" : {
            "name" : "Dem_DcmGetDTCSeverityAvailabilityMask",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmGetDTCSeverityAvailabilityMask(Dem_DTCSeverityType* DTCSeverityMask);"
         },
         "179" : {
            "name" : "Dem_ReadDataOfPID01",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ReadDataOfPID01(uint8* PID01value);"
         },
         "180" : {
            "name" : "Dem_GetB1Counter",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetB1Counter(uint16* B1Counter);"
         },
         "19" : {
            "name" : "Dem_DcmSetDTCFilter",
            "param" : 7,
            "proto" : "Dem_ReturnSetFilterType Dem_DcmSetDTCFilter(Dem_UdsStatusByteType DTCStatusMask,Dem_DTCKindType DTCKind,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin,boolean FilterWithSeverity,Dem_DTCSeverityType DTCSeverityMask,boolean FilterForFaultDetectionCounter);"
         },
         "2" : {
            "name" : "Dem_Init",
            "param" : 1,
            "proto" : "void Dem_Init(const Dem_ConfigType* ConfigPtr);"
         },
         "21" : {
            "name" : "Dem_DcmGetStatusOfDTC",
            "param" : 3,
            "proto" : "Dem_ReturnGetStatusOfDTCType Dem_DcmGetStatusOfDTC(uint32 DTC,Dem_DTCOriginType DTCOrigin,uint8* DTCStatus);"
         },
         "22" : {
            "name" : "Dem_DcmGetDTCStatusAvailabilityMask",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmGetDTCStatusAvailabilityMask(Dem_UdsStatusByteType* DTCStatusMask);"
         },
         "23" : {
            "name" : "Dem_DcmGetNumberOfFilteredDTC",
            "param" : 1,
            "proto" : "Dem_ReturnGetNumberOfFilteredDTCType Dem_DcmGetNumberOfFilteredDTC(uint16* NumberOfFilteredDTC);"
         },
         "24" : {
            "name" : "Dem_DcmGetNextFilteredDTC",
            "param" : 2,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_DcmGetNextFilteredDTC(uint32* DTC,Dem_UdsStatusByteType* DTCStatus);"
         },
         "25" : {
            "name" : "Dem_DcmGetDTCByOccurrenceTime",
            "param" : 2,
            "proto" : "Dem_ReturnGetDTCByOccurrenceTimeType Dem_DcmGetDTCByOccurrenceTime(Dem_DTCRequestType DTCRequest,uint32* DTC);"
         },
         "26" : {
            "name" : "Dem_DcmDisableDTCRecordUpdate",
            "param" : 2,
            "proto" : "Dem_ReturnDisableDTCRecordUpdateType Dem_DcmDisableDTCRecordUpdate(uint32 DTC,Dem_DTCOriginType DTCOrigin);"
         },
         "27" : {
            "name" : "Dem_DcmEnableDTCRecordUpdate",
            "param" : 0,
            "proto" : "Std_ReturnType Dem_DcmEnableDTCRecordUpdate();"
         },
         "3" : {
            "name" : "Dem_Shutdown",
            "param" : 0,
            "proto" : "void Dem_Shutdown();"
         },
         "31" : {
            "name" : "Dem_DcmGetSizeOfFreezeFrameByDTC",
            "param" : 4,
            "proto" : "Dem_ReturnGetSizeOfDataByDTCType Dem_DcmGetSizeOfFreezeFrameByDTC(uint32 DTC,Dem_DTCOriginType DTCOrigin,uint8 RecordNumber,uint16* SizeOfFreezeFrame);"
         },
         "32" : {
            "name" : "Dem_DcmGetExtendedDataRecordByDTC",
            "param" : 5,
            "proto" : "Dem_ReturnGetExtendedDataRecordByDTCType Dem_DcmGetExtendedDataRecordByDTC(uint32 DTC,Dem_DTCOriginType DTCOrigin,uint8 ExtendedDataNumber,uint8* DestBuffer,uint16* BufSize);"
         },
         "34" : {
            "name" : "Dem_DcmClearDTC",
            "param" : 3,
            "proto" : "Dem_ReturnClearDTCType Dem_DcmClearDTC(uint32 DTC,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin);"
         },
         "35" : {
            "name" : "Dem_ClearDTC",
            "param" : 3,
            "proto" : "Dem_ReturnClearDTCType Dem_ClearDTC(uint32 DTC,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin);"
         },
         "4" : {
            "name" : "Dem_SetEventStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEventStatus(Dem_EventIdType EventId,Dem_EventStatusType EventStatus);"
         },
         "41" : {
            "name" : "Dem_GetIndicatorStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetIndicatorStatus(uint8 IndicatorId,Dem_IndicatorStatusType* IndicatorStatus);"
         },
         "42" : {
            "name" : "Dem_GetComponentFailed",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetComponentFailed(Dem_ComponentIdType ComponentId,boolean* ComponentFailed);"
         },
         "43" : {
            "name" : "Dem_SetComponentAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetComponentAvailable(Dem_ComponentIdType ComponentId,boolean AvailableStatus);"
         },
         "49" : {
            "name" : "Dem_GetEventFreezeFrameData",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_GetEventFreezeFrameData(Dem_EventIdType EventId,uint8 RecordNumber,boolean ReportTotalRecord,uint16 DataId,uint8* DestBuffer);"
         },
         "5" : {
            "name" : "Dem_ResetEventStatus",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ResetEventStatus(Dem_EventIdType EventId);"
         },
         "50" : {
            "name" : "Dem_GetEventMemoryOverflow",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventMemoryOverflow(Dem_DTCOriginType DTCOrigin,boolean* OverflowIndication);"
         },
         "51" : {
            "name" : "Dem_SetDTCSuppression",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_SetDTCSuppression(uint32 DTC,Dem_DTCFormatType DTCFormat,boolean SuppressionStatus);"
         },
         "53" : {
            "name" : "Dem_GetNumberOfEventMemoryEntries",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetNumberOfEventMemoryEntries(Dem_DTCOriginType DTCOrigin,uint8* NumberOfEventMemoryEntries);"
         },
         "55" : {
            "name" : "Dem_SetEventAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEventAvailable(Dem_EventIdType EventId,boolean AvailableStatus);"
         },
         "56" : {
            "name" : "Dem_SetStorageCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetStorageCondition(uint8 StorageConditionID,boolean ConditionFulfilled);"
         },
         "57" : {
            "name" : "Dem_SetEnableCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEnableCondition(uint8 EnableConditionID,boolean ConditionFulfilled);"
         },
         "59" : {
            "name" : "Dem_DcmGetNextFilteredDTCAndFDC",
            "param" : 2,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_DcmGetNextFilteredDTCAndFDC(uint32* DTC,sint8* DTCFaultDetectionCounter);"
         },
         "6" : {
            "name" : "Dem_PrestoreFreezeFrame",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_PrestoreFreezeFrame(Dem_EventIdType EventId);"
         },
         "60" : {
            "name" : "Dem_DcmGetTranslationType",
            "param" : 0,
            "proto" : "Dem_DTCTranslationFormatType Dem_DcmGetTranslationType();"
         },
         "61" : {
            "name" : "Dem_DcmGetNextFilteredDTCAndSeverity",
            "param" : 4,
            "proto" : "Dem_ReturnGetNextFilteredElementType Dem_DcmGetNextFilteredDTCAndSeverity(uint32* DTC,Dem_UdsStatusByteType* DTCStatus,Dem_DTCSeverityType* DTCSeverity,uint8* DTCFunctionalUnit);"
         },
         "62" : {
            "name" : "Dem_GetFaultDetectionCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetFaultDetectionCounter(Dem_EventIdType EventId,sint8* FaultDetectionCounter);"
         },
         "63" : {
            "name" : "Dem_DcmSetFreezeFrameRecordFilter",
            "param" : 2,
            "proto" : "Dem_ReturnSetFilterType Dem_DcmSetFreezeFrameRecordFilter(Dem_DTCFormatType DTCFormat,uint16* NumberOfFilteredRecords);"
         },
         "64" : {
            "name" : "Dem_DltGetAllExtendedDataRecords",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DltGetAllExtendedDataRecords(Dem_EventIdType EventId,uint8* DestBuffer,uint16* BufSize);"
         },
         "65" : {
            "name" : "Dem_DltGetMostRecentFreezeFrameRecordData",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DltGetMostRecentFreezeFrameRecordData(Dem_EventIdType EventId,uint8* DestBuffer,uint16* BufSize);"
         },
         "7" : {
            "name" : "Dem_ClearPrestoredFreezeFrame",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ClearPrestoredFreezeFrame(Dem_EventIdType EventId);"
         },
         "8" : {
            "name" : "Dem_SetOperationCycleState",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetOperationCycleState(uint8 OperationCycleId,Dem_OperationCycleStateType CycleState);"
         },
         "81" : {
            "name" : "Dem_SetEventDisabled",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetEventDisabled(Dem_EventIdType EventId);"
         },
         "82" : {
            "name" : "Dem_DcmReadDataOfOBDFreezeFrame",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfOBDFreezeFrame(uint8 PID,uint8 DataElementIndexOfPID,uint8* DestBuffer,uint16* BufSize);"
         },
         "83" : {
            "name" : "Dem_DcmGetDTCOfOBDFreezeFrame",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetDTCOfOBDFreezeFrame(uint8 FrameNumber,uint32* DTC,Dem_DTCFormatType DTCFormat);"
         },
         "85" : {
            "name" : "Dem_MainFunction",
            "param" : 0,
            "proto" : "void Dem_MainFunction();"
         },
         "9" : {
            "name" : "Dem_ResetEventDebounceStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_ResetEventDebounceStatus(Dem_EventIdType EventId,Dem_DebounceResetStatusType DebounceResetStatus);"
         },
         "97" : {
            "name" : "Dem_DcmReadDataOfPID01",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID01(uint8* PID01value);"
         },
         "99" : {
            "name" : "Dem_DcmReadDataOfPID1C",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID1C(uint8* PID1Cvalue);"
         }
      }
   },
   "55" : {
      "abbreviation" : "Dlt",
      "services" : {
         "1" : {
            "name" : "Dlt_Init",
            "param" : 1,
            "proto" : "void Dlt_Init(const Dlt_ConfigType* config);"
         },
         "10" : {
            "name" : "Dlt_WriteData",
            "param" : 4,
            "proto" : "Std_ReturnType Dlt_WriteData(uint8* data,uint16 dataLength,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "11" : {
            "name" : "Dlt_ConditionCheckRead",
            "param" : 2,
            "proto" : "Std_ReturnType Dlt_ConditionCheckRead(Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "15" : {
            "name" : "Dlt_ComRxIndication",
            "param" : 2,
            "proto" : "void Dlt_ComRxIndication(PduIdType DltRxPduId,Std_ReturnType Result);"
         },
         "16" : {
            "name" : "Dlt_ComTxConfirmation",
            "param" : 2,
            "proto" : "void Dlt_ComTxConfirmation(PduIdType DltTxPduId,Std_ReturnType Result);"
         },
         "17" : {
            "name" : "Dlt_SetLogLevel__SESSION_",
            "param" : 3,
            "proto" : "void Dlt_SetLogLevel__SESSION_(Dlt_ApplicationIDType app_id,Dlt_ContextIDType context_id,Dlt_MessageLogLevelType loglevel);"
         },
         "18" : {
            "name" : "DltCom_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType DltCom_Transmit(PduIdType DltTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "19" : {
            "name" : "DltCom_CancelTransmitRequest",
            "param" : 1,
            "proto" : "Std_ReturnType DltCom_CancelTransmitRequest(PduIdType PduId);"
         },
         "2" : {
            "name" : "Dlt_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dlt_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "20" : {
            "name" : "DltCom_SetInterfaceStatus",
            "param" : 1,
            "proto" : "Std_ReturnType DltCom_SetInterfaceStatus(uint8[4] com_interface,uint8 new_status);"
         },
         "21" : {
            "name" : "Dlt_DemTriggerOnEventStatus",
            "param" : 3,
            "proto" : "void Dlt_DemTriggerOnEventStatus(Dem_EventIdType EventId,Dem_UdsStatusByteType EventStatusByteOld,Dem_UdsStatusByteType EventStatusByteNew);"
         },
         "3" : {
            "name" : "Dlt_SendLogMessage",
            "param" : 4,
            "proto" : "Std_ReturnType Dlt_SendLogMessage(Dlt_SessionIDType session_id,const Dlt_MessageLogInfoType* log_info,const uint8* log_data,uint16 log_data_length);"
         },
         "4" : {
            "name" : "Dlt_SendTraceMessage",
            "param" : 4,
            "proto" : "Std_ReturnType Dlt_SendTraceMessage(Dlt_SessionIDType session_id,const Dlt_MessageTraceInfoType* trace_info,const uint8* trace_data,uint16 trace_data_length);"
         },
         "45" : {
            "name" : "Dcm_TriggerOnEvent",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_TriggerOnEvent(uint8 RoeEventId);"
         },
         "5" : {
            "name" : "Gpt_StartTimer",
            "param" : 2,
            "proto" : "void Gpt_StartTimer(Gpt_ChannelType Channel,Gpt_ValueType Value);"
         },
         "67" : {
            "name" : "DltCom_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType DltCom_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "DltCom_CopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType DltCom_CopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "7" : {
            "name" : "Gpt_EnableNotification",
            "param" : 1,
            "proto" : "void Gpt_EnableNotification(Gpt_ChannelType Channel);"
         },
         "70" : {
            "name" : "DltCom_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType DltCom_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "8" : {
            "name" : "Dlt_ReadData",
            "param" : 2,
            "proto" : "Std_ReturnType Dlt_ReadData(Dcm_OpStatusType OpStatus,uint8* data);"
         },
         "9" : {
            "name" : "Dlt_ReadDataLength",
            "param" : 1,
            "proto" : "Std_ReturnType Dlt_ReadDataLength(uint16* DataLength);"
         }
      }
   },
   "56" : {
      "abbreviation" : "SoAd",
      "services" : {
         "1" : {
            "name" : "SoAd_Init",
            "param" : 1,
            "proto" : "void SoAd_Init(const SoAd_ConfigType* SoAdConfigPtr);"
         },
         "10" : {
            "name" : "SoAd_RequestIpAddrAssignment",
            "param" : 5,
            "proto" : "Std_ReturnType SoAd_RequestIpAddrAssignment(SoAd_SoConIdType SoConId,TcpIp_IpAddrAssignmentType Type,const TcpIp_SockAddrType* LocalIpAddrPtr,uint8 Netmask,const TcpIp_SockAddrType* DefaultRouterPtr);"
         },
         "11" : {
            "name" : "SoAd_ReleaseIpAddrAssignment",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_ReleaseIpAddrAssignment(SoAd_SoConIdType SoConId);"
         },
         "12" : {
            "name" : "SoAd_GetLocalAddr",
            "param" : 4,
            "proto" : "Std_ReturnType SoAd_GetLocalAddr(SoAd_SoConIdType SoConId,TcpIp_SockAddrType* LocalAddrPtr,uint8* NetmaskPtr,TcpIp_SockAddrType* DefaultRouterPtr);"
         },
         "13" : {
            "name" : "SoAd_GetPhysAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetPhysAddr(SoAd_SoConIdType SoConId,uint8* PhysAddrPtr);"
         },
         "14" : {
            "name" : "SoAd_EnableRouting",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_EnableRouting(SoAd_RoutingGroupIdType id);"
         },
         "15" : {
            "name" : "SoAd_DisableRouting",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_DisableRouting(SoAd_RoutingGroupIdType id);"
         },
         "16" : {
            "name" : "SoAd_SetRemoteAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_SetRemoteAddr(SoAd_SoConIdType SoConId,const TcpIp_SockAddrType* RemoteAddrPtr);"
         },
         "17" : {
            "name" : "SoAd_TpChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_TpChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "18" : {
            "name" : "SoAd_RxIndication",
            "param" : 4,
            "proto" : "void SoAd_RxIndication(TcpIp_SocketIdType SocketId,const TcpIp_SockAddrType* RemoteAddrPtr,uint8* BufPtr,uint16 Length);"
         },
         "19" : {
            "name" : "SoAd_CopyTxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType SoAd_CopyTxData(TcpIp_SocketIdType SocketId,uint8* BufPtr,uint16 BufLength);"
         },
         "2" : {
            "name" : "SoAd_GetVersionInfo",
            "param" : 1,
            "proto" : "void SoAd_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "20" : {
            "name" : "SoAd_TxConfirmation",
            "param" : 2,
            "proto" : "void SoAd_TxConfirmation(TcpIp_SocketIdType SocketId,uint16 Length);"
         },
         "21" : {
            "name" : "SoAd_TcpAccepted",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_TcpAccepted(TcpIp_SocketIdType SocketId,TcpIp_SocketIdType SocketIdConnected,const TcpIp_SockAddrType* RemoteAddrPtr);"
         },
         "22" : {
            "name" : "SoAd_TcpConnected",
            "param" : 1,
            "proto" : "void SoAd_TcpConnected(TcpIp_SocketIdType SocketId);"
         },
         "23" : {
            "name" : "SoAd_TcpIpEvent",
            "param" : 2,
            "proto" : "void SoAd_TcpIpEvent(TcpIp_SocketIdType SocketId,TcpIp_EventType Event);"
         },
         "24" : {
            "name" : "SoAd_LocalIpAddrAssignmentChg",
            "param" : 2,
            "proto" : "void SoAd_LocalIpAddrAssignmentChg(TcpIp_LocalAddrIdType IpAddrId,TcpIp_IpAddrStateType State);"
         },
         "25" : {
            "name" : "SoAd_MainFunction",
            "param" : 0,
            "proto" : "void SoAd_MainFunction();"
         },
         "26" : {
            "name" : "SoAd_ReadDhcpHostNameOption",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_ReadDhcpHostNameOption(SoAd_SoConIdType SoConId,uint8* length,uint8* data);"
         },
         "27" : {
            "name" : "SoAd_WriteDhcpHostNameOption",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_WriteDhcpHostNameOption(SoAd_SoConIdType SoConId,uint8 length,const uint8* data);"
         },
         "28" : {
            "name" : "SoAd_GetRemoteAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetRemoteAddr(SoAd_SoConIdType SoConId,TcpIp_SockAddrType* IpAddrPtr);"
         },
         "29" : {
            "name" : "SoAd_IfRoutingGroupTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_IfRoutingGroupTransmit(SoAd_RoutingGroupIdType id);"
         },
         "3" : {
            "name" : "SoAd_IfTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_IfTransmit(PduIdType SoAdSrcPduId,const PduInfoType* SoAdSrcPduInfoPtr);"
         },
         "30" : {
            "name" : "SoAd_SetUniqueRemoteAddr",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_SetUniqueRemoteAddr(SoAd_SoConIdType SoConId,const TcpIp_SockAddrType* RemoteAddrPtr,SoAd_SoConIdType* AssignedSoConIdPtr);"
         },
         "31" : {
            "name" : "SoAd_IfSpecificRoutingGroupTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_IfSpecificRoutingGroupTransmit(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "32" : {
            "name" : "SoAd_EnableSpecificRouting",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_EnableSpecificRouting(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "33" : {
            "name" : "SoAd_DisableSpecificRouting",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_DisableSpecificRouting(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "4" : {
            "name" : "SoAd_TpTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_TpTransmit(PduIdType SoAdSrcPduId,const PduInfoType* SoAdSrcPduInfoPtr);"
         },
         "5" : {
            "name" : "SoAd_TpCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_TpCancelTransmit(PduIdType PduId);"
         },
         "6" : {
            "name" : "SoAd_TpCancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_TpCancelReceive(PduIdType PduId);"
         },
         "7" : {
            "name" : "SoAd_GetSoConId",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetSoConId(PduIdType TxPduId,SoAd_SoConIdType* SoConIdPtr);"
         },
         "8" : {
            "name" : "SoAd_OpenSoCon",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_OpenSoCon(SoAd_SoConIdType SoConId);"
         },
         "9" : {
            "name" : "SoAd_CloseSoCon",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_CloseSoCon(SoAd_SoConIdType SoConId,boolean abort);"
         }
      }
   },
   "57" : {
      "abbreviation" : "Dbg",
      "services" : {
         "14" : {
            "name" : "Dbg_TraceRTEVfbSignalSend",
            "param" : 4,
            "proto" : "void Dbg_TraceRTEVfbSignalSend(uint16 ComponentId,uint8 InstanceId,uint8 PortId,uint8 DataElementId);"
         },
         "2" : {
            "name" : "Dbg_ComInit",
            "param" : 0,
            "proto" : "void Dbg_ComInit();"
         },
         "20" : {
            "name" : "Dbg_EnableDidCollection",
            "param" : 1,
            "proto" : "void Dbg_EnableDidCollection(boolean DidCollectionStatus);"
         },
         "22" : {
            "name" : "Dbg_UseLocalTimestampActivation",
            "param" : 1,
            "proto" : "void Dbg_UseLocalTimestampActivation(boolean GlobalTimestampCollectionStatus);"
         },
         "25" : {
            "name" : "Dbg_ClearBuffer",
            "param" : 0,
            "proto" : "void Dbg_ClearBuffer();"
         },
         "28" : {
            "name" : "Dbg_StopSend",
            "param" : 0,
            "proto" : "void Dbg_StopSend();"
         },
         "30" : {
            "name" : "Dbg_PeriodicSamplingFunction",
            "param" : 0,
            "proto" : "void Dbg_PeriodicSamplingFunction();"
         },
         "37" : {
            "name" : "Dbg_ComDeInit",
            "param" : 0,
            "proto" : "void Dbg_ComDeInit();"
         },
         "9" : {
            "name" : "Dbg_TraceTimestamp",
            "param" : 0,
            "proto" : "void Dbg_TraceTimestamp();"
         }
      }
   },
   "58" : {
      "abbreviation" : "J1939Dcm",
      "services" : {
         "1" : {
            "name" : "J1939Dcm_Init",
            "param" : 1,
            "proto" : "void J1939Dcm_Init(const J1939Dcm_ConfigType* configPtr);"
         },
         "10" : {
            "name" : "J1939Dcm_DemTriggerOnDTCStatus",
            "param" : 2,
            "proto" : "void J1939Dcm_DemTriggerOnDTCStatus(uint32 DTC,uint8 node);"
         },
         "11" : {
            "name" : "J1939Dcm_SetState",
            "param" : 3,
            "proto" : "Std_ReturnType J1939Dcm_SetState(NetworkHandleType channel,uint8 node,J1939Dcm_StateType newState);"
         },
         "2" : {
            "name" : "J1939Dcm_DeInit",
            "param" : 0,
            "proto" : "void J1939Dcm_DeInit();"
         },
         "3" : {
            "name" : "J1939Dcm_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Dcm_GetVersionInfo(Std_VersionInfoType * versioninfo);"
         },
         "4" : {
            "name" : "J1939Dcm_MainFunction",
            "param" : 0,
            "proto" : "void J1939Dcm_MainFunction();"
         },
         "64" : {
            "name" : "J1939Dcm_TxConfirmation",
            "param" : 1,
            "proto" : "void J1939Dcm_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "J1939Dcm_RxIndication",
            "param" : 2,
            "proto" : "void J1939Dcm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "J1939Dcm_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType J1939Dcm_CopyTxData(PduIdType id,const PduInfoType* info,RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "J1939Dcm_CopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType J1939Dcm_CopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "69" : {
            "name" : "J1939Dcm_TpRxIndication",
            "param" : 2,
            "proto" : "void J1939Dcm_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "70" : {
            "name" : "J1939Dcm_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType J1939Dcm_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "J1939Dcm_TpTxConfirmation",
            "param" : 2,
            "proto" : "void J1939Dcm_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         }
      }
   },
   "59" : {
      "abbreviation" : "J1939Rm",
      "services" : {
         "1" : {
            "name" : "J1939Rm_Init",
            "param" : 1,
            "proto" : "void J1939Rm_Init(const J1939Rm_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "J1939Rm_DeInit",
            "param" : 0,
            "proto" : "void J1939Rm_DeInit();"
         },
         "3" : {
            "name" : "J1939Rm_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Rm_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "4" : {
            "name" : "J1939Rm_MainFunction",
            "param" : 0,
            "proto" : "void J1939Rm_MainFunction();"
         },
         "40" : {
            "name" : "J1939Rm_ComRxIpduCallout",
            "param" : 2,
            "proto" : "boolean J1939Rm_ComRxIpduCallout(PduIdType PduId,const PduInfoType* PduInfoPtr);"
         },
         "5" : {
            "name" : "J1939Rm_SetState",
            "param" : 3,
            "proto" : "Std_ReturnType J1939Rm_SetState(NetworkHandleType channel,uint8 node,J1939Rm_StateType newState);"
         },
         "64" : {
            "name" : "J1939Rm_TxConfirmation",
            "param" : 1,
            "proto" : "void J1939Rm_TxConfirmation(PduIdType TxPduId);"
         },
         "66" : {
            "name" : "J1939Rm_RxIndication",
            "param" : 2,
            "proto" : "void J1939Rm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "J1939Rm_SendRequest",
            "param" : 6,
            "proto" : "Std_ReturnType J1939Rm_SendRequest(uint8 userId,NetworkHandleType channel,uint32 requestedPgn,uint8 destAddress,uint8 priority,boolean checkTimeout);"
         },
         "8" : {
            "name" : "J1939Rm_CancelRequestTimeout",
            "param" : 4,
            "proto" : "Std_ReturnType J1939Rm_CancelRequestTimeout(uint8 userId,NetworkHandleType channel,uint32 requestedPgn,uint8 destAddress);"
         },
         "9" : {
            "name" : "J1939Rm_SendAck",
            "param" : 7,
            "proto" : "Std_ReturnType J1939Rm_SendAck(uint8 userId,NetworkHandleType channel,uint32 ackPgn,J1939Rm_AckCode ackCode,uint8 ackAddress,uint8 priority,boolean broadcast);"
         }
      }
   },
   "60" : {
      "abbreviation" : "CanIf",
      "services" : {
         "1" : {
            "name" : "CanIf_Init",
            "param" : 1,
            "proto" : "void CanIf_Init(const CanIf_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "CanIf_GetPduMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetPduMode(uint8 ControllerId,CanIf_PduModeType* PduModePtr);"
         },
         "11" : {
            "name" : "CanIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanIf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "12" : {
            "name" : "CanIf_SetDynamicTxId",
            "param" : 2,
            "proto" : "void CanIf_SetDynamicTxId(PduIdType CanIfTxSduId,Can_IdType CanId);"
         },
         "13" : {
            "name" : "CanIf_SetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetTrcvMode(uint8 TransceiverId,CanTrcv_TrcvModeType TransceiverMode);"
         },
         "14" : {
            "name" : "CanIf_GetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetTrcvMode(CanTrcv_TrcvModeType* TransceiverModePtr,uint8 TransceiverId);"
         },
         "16" : {
            "name" : "CanIf_SetTrcvWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetTrcvWakeupMode(uint8 TransceiverId,CanTrcv_TrcvWakeupModeType TrcvWakeupMode);"
         },
         "17" : {
            "name" : "CanIf_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "18" : {
            "name" : "CanIf_CheckValidation",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckValidation(EcuM_WakeupSourceType WakeupSource);"
         },
         "19" : {
            "name" : "CanIf_TxConfirmation",
            "param" : 1,
            "proto" : "void CanIf_TxConfirmation(PduIdType CanTxPduId);"
         },
         "20" : {
            "name" : "CanIf_RxIndication",
            "param" : 2,
            "proto" : "void CanIf_RxIndication(const Can_HwType* Mailbox,const PduInfoType* PduInfoPtr);"
         },
         "22" : {
            "name" : "CanIf_ControllerBusOff",
            "param" : 1,
            "proto" : "void CanIf_ControllerBusOff(uint8 ControllerId);"
         },
         "23" : {
            "name" : "CanIf_ControllerModeIndication",
            "param" : 2,
            "proto" : "void CanIf_ControllerModeIndication(uint8 ControllerId,CanIf_ControllerModeType ControllerMode);"
         },
         "24" : {
            "name" : "CanIf_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CancelTransmit(PduIdType CanIfTxSduId);"
         },
         "25" : {
            "name" : "CanIf_GetTxConfirmationState",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_GetTxConfirmationState(uint8 ControllerId);"
         },
         "26" : {
            "name" : "CanIf_ConfirmPnAvailability",
            "param" : 1,
            "proto" : "void CanIf_ConfirmPnAvailability(uint8 TransceiverId);"
         },
         "30" : {
            "name" : "CanIf_ClearTrcvWufFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_ClearTrcvWufFlag(uint8 TransceiverId);"
         },
         "31" : {
            "name" : "CanIf_CheckTrcvWakeFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckTrcvWakeFlag(uint8 TransceiverId);"
         },
         "32" : {
            "name" : "CanIf_ClearTrcvWufFlagIndication",
            "param" : 1,
            "proto" : "void CanIf_ClearTrcvWufFlagIndication(uint8 TransceiverId);"
         },
         "34" : {
            "name" : "CanIf_TrcvModeIndication",
            "param" : 2,
            "proto" : "void CanIf_TrcvModeIndication(uint8 TransceiverId,CanTrcv_TrcvModeType TransceiverMode);"
         },
         "37" : {
            "name" : "CanIf_SetIcomConfiguration",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetIcomConfiguration(uint8 ControllerId,IcomConfigIdType ConfigurationId);"
         },
         "38" : {
            "name" : "CanIf_CurrentIcomConfiguration",
            "param" : 3,
            "proto" : "void CanIf_CurrentIcomConfiguration(uint8 ControllerId,IcomConfigIdType ConfigurationId,IcomSwitch_ErrorType Error);"
         },
         "39" : {
            "name" : "CanIf_SetBaudrate",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetBaudrate(uint8 ControllerId,uint16 BaudRateConfigID);"
         },
         "5" : {
            "name" : "CanIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_Transmit(PduIdType CanIfTxSduId,const PduInfoType* CanIfTxInfoPtr);"
         },
         "65" : {
            "name" : "CanIf_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "CanIf_ReadTxNotifStatus",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_ReadTxNotifStatus(PduIdType CanIfTxSduId);"
         },
         "8" : {
            "name" : "CanIf_ReadRxNotifStatus",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_ReadRxNotifStatus(PduIdType CanIfRxSduId);"
         },
         "9" : {
            "name" : "CanIf_SetPduMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetPduMode(uint8 ControllerId,CanIf_PduModeType PduModeRequest);"
         }
      }
   },
   "61" : {
      "abbreviation" : "FrIf",
      "services" : {
         "0" : {
            "name" : "FrIf_ReconfigLPdu",
            "param" : 8,
            "proto" : "Std_ReturnType FrIf_ReconfigLPdu(uint8 FrIf_CtrlIdx,uint16 FrIf_LPduIdx,uint16 FrIf_FrameId,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_CycleRepetition,uint8 FrIf_CycleOffset,uint8 FrIf_PayloadLength,uint16 FrIf_HeaderCRC);"
         },
         "1" : {
            "name" : "FrIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrIf_GetVersionInfo(Std_VersionInfoType* FrIf_VersionInfoPtr);"
         },
         "10" : {
            "name" : "FrIf_SendWUP",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_SendWUP(uint8 FrIf_CtrlIdx);"
         },
         "13" : {
            "name" : "FrIf_GetPOCStatus",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetPOCStatus(uint8 FrIf_CtrlIdx,Fr_POCStatusType* FrIf_POCStatusPtr);"
         },
         "14" : {
            "name" : "FrIf_GetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetGlobalTime(uint8 FrIf_CtrlIdx,uint8* FrIf_CyclePtr,uint16* FrIf_MacroTickPtr);"
         },
         "15" : {
            "name" : "FrIf_GetNmVector",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetNmVector(uint8 FrIf_CtrlIdx,uint8* FrIf_NmVectorPtr);"
         },
         "16" : {
            "name" : "FrIf_AllowColdstart",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AllowColdstart(uint8 FrIf_CtrlIdx);"
         },
         "17" : {
            "name" : "FrIf_GetMacroticksPerCycle",
            "param" : 1,
            "proto" : "uint16 FrIf_GetMacroticksPerCycle(uint8 FrIf_CtrlIdx);"
         },
         "18" : {
            "name" : "FrIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_Transmit(PduIdType FrIf_TxPduId,const PduInfoType * FrIf_PduInfoPtr);"
         },
         "19" : {
            "name" : "FrIf_SetTransceiverMode",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_SetTransceiverMode(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvModeType FrIf_TrcvMode);"
         },
         "2" : {
            "name" : "FrIf_Init",
            "param" : 1,
            "proto" : "void FrIf_Init(const FrIf_ConfigType* FrIf_ConfigPtr);"
         },
         "20" : {
            "name" : "FrIf_GetTransceiverMode",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetTransceiverMode(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvModeType* FrIf_TrcvModePtr);"
         },
         "21" : {
            "name" : "FrIf_GetTransceiverWUReason",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetTransceiverWUReason(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvWUReasonType* FrIf_TrcvWUReasonPtr);"
         },
         "24" : {
            "name" : "FrIf_ClearTransceiverWakeup",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_ClearTransceiverWakeup(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         },
         "25" : {
            "name" : "FrIf_SetAbsoluteTimer",
            "param" : 4,
            "proto" : "Std_ReturnType FrIf_SetAbsoluteTimer(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx,uint8 FrIf_Cycle,uint16 FrIf_Offset);"
         },
         "27" : {
            "name" : "FrIf_CancelAbsoluteTimer",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_CancelAbsoluteTimer(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "29" : {
            "name" : "FrIf_EnableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_EnableAbsoluteTimerIRQ(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "3" : {
            "name" : "FrIf_ControllerInit",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_ControllerInit(uint8 FrIf_CtrlIdx);"
         },
         "31" : {
            "name" : "FrIf_GetAbsoluteTimerIRQStatus",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetAbsoluteTimerIRQStatus(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx,boolean* FrIf_IRQStatusPtr);"
         },
         "33" : {
            "name" : "FrIf_AckAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_AckAbsoluteTimerIRQ(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "35" : {
            "name" : "FrIf_DisableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_DisableAbsoluteTimerIRQ(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "38" : {
            "name" : "FrIf_GetChannelStatus",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetChannelStatus(uint8 FrIf_CtrlIdx,uint16* FrIf_ChannelAStatusPtr,uint16* FrIf_ChannelBStatusPtr);"
         },
         "39" : {
            "name" : "FrIf_MainFunction__ClstIdx_",
            "param" : 0,
            "proto" : "void FrIf_MainFunction__ClstIdx_();"
         },
         "4" : {
            "name" : "FrIf_StartCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_StartCommunication(uint8 FrIf_CtrlIdx);"
         },
         "40" : {
            "name" : "FrIf_DisableLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_DisableLPdu(uint8 FrIf_CtrlIdx,uint16 FrIf_LPduIdx);"
         },
         "41" : {
            "name" : "FrIf_GetClockCorrection",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetClockCorrection(uint8 FrIf_CtrlIdx,sint16* FrIf_RateCorrectionPtr,sint32* FrIf_OffsetCorrectionPtr);"
         },
         "42" : {
            "name" : "FrIf_GetSyncFrameList",
            "param" : 6,
            "proto" : "Std_ReturnType FrIf_GetSyncFrameList(uint8 FrIf_CtrlIdx,uint8 FrIf_ListSize,uint16* FrIf_ChannelAEvenListPtr,uint16* FrIf_ChannelBEvenListPtr,uint16* FrIf_ChannelAOddListPtr,uint16* FrIf_ChannelBOddListPtr);"
         },
         "43" : {
            "name" : "FrIf_GetWakeupRxStatus",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetWakeupRxStatus(uint8 FrIf_CtrlIdx,uint8* FrIf_WakeupRxStatusPtr);"
         },
         "48" : {
            "name" : "FrIf_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_CancelTransmit(PduIdType FrIf_TxPduId);"
         },
         "49" : {
            "name" : "FrIf_GetMacrotickDuration",
            "param" : 1,
            "proto" : "uint16 FrIf_GetMacrotickDuration(uint8 FrIf_CtrlIdx);"
         },
         "5" : {
            "name" : "FrIf_HaltCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_HaltCommunication(uint8 FrIf_CtrlIdx);"
         },
         "50" : {
            "name" : "FrIf_JobListExec__ClstIdx_",
            "param" : 0,
            "proto" : "void FrIf_JobListExec__ClstIdx_();"
         },
         "51" : {
            "name" : "FrIf_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AllSlots(uint8 FrIf_CtrlIdx);"
         },
         "52" : {
            "name" : "FrIf_GetNumOfStartupFrames",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetNumOfStartupFrames(uint8 FrIf_CtrlIdx,uint8* FrIf_NumOfStartupFramesPtr);"
         },
         "53" : {
            "name" : "FrIf_GetTransceiverError",
            "param" : 4,
            "proto" : "Std_ReturnType FrIf_GetTransceiverError(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_BranchIdx,uint32* FrIf_BusErrorState);"
         },
         "54" : {
            "name" : "FrIf_EnableTransceiverBranch",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_EnableTransceiverBranch(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_BranchIdx);"
         },
         "55" : {
            "name" : "FrIf_DisableTransceiverBranch",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_DisableTransceiverBranch(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_BranchIdx);"
         },
         "57" : {
            "name" : "FrIf_CheckWakeupByTransceiver",
            "param" : 2,
            "proto" : "void FrIf_CheckWakeupByTransceiver(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         },
         "58" : {
            "name" : "FrIf_GetCycleLength",
            "param" : 1,
            "proto" : "uint32 FrIf_GetCycleLength(uint8 FrIf_CtrlIdx);"
         },
         "59" : {
            "name" : "FrIf_ReadCCConfig",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_ReadCCConfig(uint8 FrIf_CtrlIdx,uint8 FrIf_ConfigParamIdx,uint32* FrIf_ConfigParamValuePtr);"
         },
         "6" : {
            "name" : "FrIf_AbortCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AbortCommunication(uint8 FrIf_CtrlIdx);"
         },
         "7" : {
            "name" : "FrIf_GetState",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetState(uint8 FrIf_ClstIdx,FrIf_StateType* FrIf_StatePtr);"
         },
         "8" : {
            "name" : "FrIf_SetState",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_SetState(uint8 FrIf_ClstIdx,FrIf_StateTransitionType FrIf_StateTransition);"
         },
         "9" : {
            "name" : "FrIf_SetWakeupChannel",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_SetWakeupChannel(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         }
      }
   },
   "62" : {
      "abbreviation" : "LinIf",
      "services" : {
         "1" : {
            "name" : "LinIf_Init",
            "param" : 1,
            "proto" : "void LinIf_Init(const LinIf_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "LinIf_GetTrcvWakeupReason",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_GetTrcvWakeupReason(NetworkHandleType Channel,LinTrcv_TrcvWakeupReasonType* TrcvWuReasonPtr);"
         },
         "11" : {
            "name" : "LinIf_SetTrcvWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_SetTrcvWakeupMode(NetworkHandleType Channel,LinTrcv_TrcvWakeupModeType LinTrcvWakeupMode);"
         },
         "12" : {
            "name" : "LinIf_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_CancelTransmit(PduIdType LinTxPduId);"
         },
         "128" : {
            "name" : "LinIf_MainFunction",
            "param" : 0,
            "proto" : "void LinIf_MainFunction();"
         },
         "3" : {
            "name" : "LinIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinIf_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "LinIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_Transmit(PduIdType LinTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "5" : {
            "name" : "LinIf_ScheduleRequest",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_ScheduleRequest(NetworkHandleType Channel,LinIf_SchHandleType Schedule);"
         },
         "6" : {
            "name" : "LinIf_GotoSleep",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_GotoSleep(NetworkHandleType Channel);"
         },
         "64" : {
            "name" : "LinTp_Init",
            "param" : 1,
            "proto" : "void LinTp_Init(const LinTp_ConfigType* ConfigPtr);"
         },
         "65" : {
            "name" : "LinTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LinTp_Transmit(PduIdType LinTpTxSduId,const PduInfoType* LinTpTxInfoPtr);"
         },
         "66" : {
            "name" : "LinTp_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinTp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "67" : {
            "name" : "LinTp_Shutdown",
            "param" : 0,
            "proto" : "void LinTp_Shutdown();"
         },
         "68" : {
            "name" : "LinTp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType LinTp_ChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "7" : {
            "name" : "LinIf_Wakeup",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_Wakeup(NetworkHandleType Channel);"
         },
         "70" : {
            "name" : "LinTp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType LinTp_CancelTransmit(PduIdType LinTpTxSduId);"
         },
         "71" : {
            "name" : "LinTp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType LinTp_CancelReceive(PduIdType LinTpRxSduId);"
         },
         "8" : {
            "name" : "LinIf_SetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_SetTrcvMode(NetworkHandleType Channel,LinTrcv_TrcvModeType TransceiverMode);"
         },
         "9" : {
            "name" : "LinIf_GetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_GetTrcvMode(NetworkHandleType Channel,LinTrcv_TrcvModeType* TransceiverModePtr);"
         },
         "96" : {
            "name" : "LinIf_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "97" : {
            "name" : "LinIf_WakeupConfirmation",
            "param" : 1,
            "proto" : "void LinIf_WakeupConfirmation(EcuM_WakeupSourceType WakeupSource);"
         }
      }
   },
   "63" : {
      "abbreviation" : "LinNm",
      "services" : {
         "0" : {
            "name" : "LinNm_Init",
            "param" : 1,
            "proto" : "void LinNm_Init(const LinNm_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "LinNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "10" : {
            "name" : "LinNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_GetNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "11" : {
            "name" : "LinNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_GetLocalNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "14" : {
            "name" : "LinNm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType LinNm_GetState(NetworkHandleType nmNetworkHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "15" : {
            "name" : "LinNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_Transmit(PduIdType LinTxPduId,const PduInfoType* PduInfoPtr);"
         },
         "17" : {
            "name" : "LinNm_MainFunction",
            "param" : 0,
            "proto" : "void LinNm_MainFunction();"
         },
         "192" : {
            "name" : "LinNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_RequestBusSynchronization(NetworkHandleType nmChannelHandle);"
         },
         "2" : {
            "name" : "LinNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "208" : {
            "name" : "LinNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_CheckRemoteSleepIndication(NetworkHandleType nmChannelHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "241" : {
            "name" : "LinNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinNm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "LinNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_NetworkRelease(NetworkHandleType nmChannelHandle);"
         },
         "4" : {
            "name" : "LinNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_DisableCommunication(NetworkHandleType NetworkHandle);"
         },
         "5" : {
            "name" : "LinNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_EnableCommunication(NetworkHandleType NetworkHandle);"
         },
         "6" : {
            "name" : "LinNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_SetUserData(NetworkHandleType NetworkHandle,const uint8* nmUserDataPtr);"
         },
         "64" : {
            "name" : "LinNm_TxConfirmation",
            "param" : 1,
            "proto" : "void LinNm_TxConfirmation(PduIdType TxPduId);"
         },
         "7" : {
            "name" : "LinNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_GetUserData(NetworkHandleType NetworkHandle,uint8* nmUserDataPtr);"
         },
         "8" : {
            "name" : "LinNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType LinNm_GetPduData(NetworkHandleType NetworkHandle,uint8* nmPduData);"
         },
         "9" : {
            "name" : "LinNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType LinNm_RepeatMessageRequest(NetworkHandleType NetworkHandle);"
         }
      }
   },
   "64" : {
      "abbreviation" : "LinTrcv",
      "services" : {
         "0" : {
            "name" : "LinTrcv_Init",
            "param" : 1,
            "proto" : "void LinTrcv_Init(const LinTrcv_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "LinTrcv_SetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_SetOpMode(uint8 LinNetwork,LinTrcv_TrcvModeType OpMode);"
         },
         "2" : {
            "name" : "LinTrcv_GetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_GetOpMode(uint8 LinNetwork,LinTrcv_TrcvModeType* OpMode);"
         },
         "3" : {
            "name" : "LinTrcv_GetBusWuReason",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_GetBusWuReason(uint8 LinNetwork,LinTrcv_TrcvWakeupReasonType* Reason);"
         },
         "4" : {
            "name" : "LinTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "LinTrcv_SetWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_SetWakeupMode(uint8 LINNetwork,LinTrcv_TrcvWakeupModeType TrcvWakupMode);"
         },
         "7" : {
            "name" : "LinTrcv_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType LinTrcv_CheckWakeup(uint8 LinNetwork);"
         }
      }
   },
   "65" : {
      "abbreviation" : "EthIf",
      "services" : {
         "11" : {
            "name" : "EthIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthIf_GetVersionInfo(Std_VersionInfoType*VersionInfoPtr);"
         },
         "33" : {
            "name" : "EthIf_MainFunctionTx",
            "param" : 0,
            "proto" : "void EthIf_MainFunctionTx();"
         },
         "46" : {
            "name" : "EthIf_SetTransceiverWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetTransceiverWakeupMode(uint8 TrcvIdx,EthTrcv_WakeupModeType TrcvWakeupMode);"
         }
      }
   },
   "66" : {
      "abbreviation" : "TtcanIf",
      "services" : {
         "51" : {
            "name" : "CanIf_TTGetControllerTime",
            "param" : 5,
            "proto" : "Std_ReturnType CanIf_TTGetControllerTime(uint8 ControllerId,CanIf_TTTimeType* CanIf_TTGlobalTime,CanIf_TTTimeType* CanIf_TTLocalTime,CanIf_TTTimeType* CanIf_TTCycleTime,uint8* CanIf_TTCycleCount);"
         },
         "52" : {
            "name" : "CanIf_TTGetMasterState",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetMasterState(uint8 ControllerId,CanIf_TTMasterStateType* CanIf_TTMasterState);"
         },
         "53" : {
            "name" : "CanIf_TTGetNTUActual",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetNTUActual(uint8 ControllerId,float32 CanIf_TTNTUAct);"
         },
         "54" : {
            "name" : "CanIf_TTGetErrorLevel",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetErrorLevel(uint8 ControllerId,CanIf_TTErrorLevelType* CanIf_TTErrorLevel);"
         },
         "56" : {
            "name" : "CanIf_TTSetEndOfGap",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetEndOfGap(uint8 ControllerId);"
         },
         "57" : {
            "name" : "CanIf_TTSetTimeCommand",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetTimeCommand(uint8 ControllerId);"
         },
         "58" : {
            "name" : "CanIf_TTGlobalTimePreset",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGlobalTimePreset(uint8 ControllerId,CanIf_TTTimeType CanIf_TTGlobalTimePreset);"
         },
         "60" : {
            "name" : "CanIf_TTSetNTUAdjust",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTSetNTUAdjust(uint8 ControllerId,float32 CanIf_TTNTUAdjust);"
         },
         "71" : {
            "name" : "CanIf_TTGetSyncQuality",
            "param" : 3,
            "proto" : "Std_ReturnType CanIf_TTGetSyncQuality(uint8 ControllerId,boolean* CanIf_TTClockSpeed,boolean* CanIf_TTGlobalTimePhase);"
         },
         "72" : {
            "name" : "CanIf_TTSetTimeMark",
            "param" : 3,
            "proto" : "Std_ReturnType CanIf_TTSetTimeMark(uint8 ControllerId,CanIf_TTTimeType CanIf_TTTimeMark,CanIf_TTTimeSourceType CanIf_TTTimeSource);"
         },
         "73" : {
            "name" : "CanIf_TTCancelTimeMark",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTCancelTimeMark(uint8 ControllerId);"
         },
         "74" : {
            "name" : "CanIf_TTAckTimeMark",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTAckTimeMark(uint8 ControllerId);"
         },
         "75" : {
            "name" : "CanIf_TTEnableTimeMarkIRQ",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTEnableTimeMarkIRQ(uint8 ControllerId);"
         },
         "76" : {
            "name" : "CanIf_TTDisableTimeMarkIRQ",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTDisableTimeMarkIRQ(uint8 ControllerId);"
         },
         "77" : {
            "name" : "CanIf_TTGetTimeMarkIRQStatus",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetTimeMarkIRQStatus(uint8 ControllerId,boolean* CanIf_TTIRQStatus);"
         },
         "80" : {
            "name" : "CanIf_TTJobListExec__Controller_",
            "param" : 0,
            "proto" : "void CanIf_TTJobListExec__Controller_();"
         },
         "91" : {
            "name" : "CanIf_TTApplWatchdogError",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTApplWatchdogError(uint8 ControllerId);"
         },
         "92" : {
            "name" : "CanIf_TTSevereError",
            "param" : 2,
            "proto" : "void CanIf_TTSevereError(uint8 ControllerId,CanIf_TTSevereErrorEnumType CanIf_TTSevereError);"
         },
         "93" : {
            "name" : "CanIf_TTGap",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTGap(uint8 ControllerId);"
         },
         "94" : {
            "name" : "CanIf_TTStartOfCycle",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTStartOfCycle(uint8 ControllerId,uint8 CanIf_TTCycleCount);"
         },
         "95" : {
            "name" : "CanIf_TTTimeDisc",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTTimeDisc(uint8 ControllerId);"
         },
         "96" : {
            "name" : "CanIf_TTMasterStateChange",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTMasterStateChange(uint8 ControllerId,CanIf_TTMasterStateType CanIf_TTMasterState);"
         }
      }
   },
   "70" : {
      "abbreviation" : "CanTrcv",
      "services" : {
         "0" : {
            "name" : "CanTrcv_Init",
            "param" : 1,
            "proto" : "void CanTrcv_Init(const CanTrcv_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "CanTrcv_SetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_SetOpMode(uint8 Transceiver,CanTrcv_TrcvModeType OpMode);"
         },
         "10" : {
            "name" : "CanTrcv_ClearTrcvWufFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_ClearTrcvWufFlag(uint8 Transceiver);"
         },
         "11" : {
            "name" : "CanTrcv_ReadTrcvTimeoutFlag",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_ReadTrcvTimeoutFlag(uint8 Transceiver,CanTrcv_TrcvFlagStateType* FlagState);"
         },
         "12" : {
            "name" : "CanTrcv_ClearTrcvTimeoutFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_ClearTrcvTimeoutFlag(uint8 Transceiver);"
         },
         "13" : {
            "name" : "CanTrcv_ReadTrcvSilenceFlag",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_ReadTrcvSilenceFlag(uint8 Transceiver,CanTrcv_TrcvFlagStateType* FlagState);"
         },
         "14" : {
            "name" : "CanTrcv_CheckWakeFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_CheckWakeFlag(uint8 Transceiver);"
         },
         "15" : {
            "name" : "CanTrcv_SetPNActivationState",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_SetPNActivationState(CanTrcv_PNActivationType ActivationState);"
         },
         "2" : {
            "name" : "CanTrcv_GetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetOpMode(uint8 Transceiver,CanTrcv_TrcvModeType* OpMode);"
         },
         "3" : {
            "name" : "CanTrcv_GetBusWuReason",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetBusWuReason(uint8 Transceiver,CanTrcv_TrcvWakeupReasonType* reason);"
         },
         "4" : {
            "name" : "CanTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "CanTrcv_SetWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_SetWakeupMode(uint8 Transceiver,CanTrcv_TrcvWakeupModeType TrcvWakeupMode);"
         },
         "6" : {
            "name" : "CanTrcv_MainFunction",
            "param" : 0,
            "proto" : "void CanTrcv_MainFunction();"
         },
         "7" : {
            "name" : "CanTrcv_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_CheckWakeup(uint8 Transceiver);"
         },
         "8" : {
            "name" : "CanTrcv_MainFunctionDiagnostics",
            "param" : 0,
            "proto" : "void CanTrcv_MainFunctionDiagnostics();"
         },
         "9" : {
            "name" : "CanTrcv_GetTrcvSystemData",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetTrcvSystemData(uint8 Transceiver,const uint32* TrcvSysData);"
         }
      }
   },
   "71" : {
      "abbreviation" : "FrTrcv",
      "services" : {
         "0" : {
            "name" : "FrTrcv_Init",
            "param" : 1,
            "proto" : "void FrTrcv_Init(const FrTrcv_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "FrTrcv_SetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_SetTransceiverMode(uint8 FrTrcv_TrcvIdx,FrTrcv_TrcvModeType FrTrcv_TrcvMode);"
         },
         "12" : {
            "name" : "FrTrcv_ClearTransceiverWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType FrTrcv_ClearTransceiverWakeup(uint8 FrTrcv_TrcvIdx);"
         },
         "13" : {
            "name" : "FrTrcv_MainFunction",
            "param" : 0,
            "proto" : "void FrTrcv_MainFunction();"
         },
         "14" : {
            "name" : "FrTrcv_CheckWakeupByTransceiver",
            "param" : 1,
            "proto" : "void FrTrcv_CheckWakeupByTransceiver(uint8 FrTrcv_TrcvIdx);"
         },
         "15" : {
            "name" : "FrTrcv_DisableTransceiverBranch",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_DisableTransceiverBranch(uint8 FrTrcv_TrcvIdx,uint8 FrTrcv_BranchIdx);"
         },
         "16" : {
            "name" : "FrTrcv_EnableTransceiverBranch",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_EnableTransceiverBranch(uint8 FrTrcv_TrcvIdx,uint8 FrTrcv_BranchIdx);"
         },
         "5" : {
            "name" : "FrTrcv_GetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_GetTransceiverMode(uint8 FrTrcv_TrcvIdx,FrTrcv_TrcvModeType* FrTrcv_TrcvModePtr);"
         },
         "6" : {
            "name" : "FrTrcv_GetTransceiverWUReason",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_GetTransceiverWUReason(uint8 FrTrcv_TrcvIdx,FrTrcv_TrcvWUReasonType* FrTrcv_TrcvWUReasonPtr);"
         },
         "7" : {
            "name" : "FrTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "8" : {
            "name" : "FrTrcv_GetTransceiverError",
            "param" : 3,
            "proto" : "Std_ReturnType FrTrcv_GetTransceiverError(uint8 FrTrcv_TrcvIdx,uint8 FrTrcv_BranchIdx,uint32* FrTrcv_BusErrorState);"
         }
      }
   },
   "73" : {
      "abbreviation" : "EthTrcv",
      "services" : {
         "14" : {
            "name" : "EthTrcv_GetTransceiverWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetTransceiverWakeupMode(uint8 TrcvIdx,EthTrcv_WakeupModeType* TrcvWakeupModePtr);"
         }
      }
   },
   "80" : {
      "abbreviation" : "Can",
      "services" : {
         "0" : {
            "name" : "Can_Init",
            "param" : 1,
            "proto" : "void Can_Init(const Can_ConfigType* Config);"
         },
         "10" : {
            "name" : "Can_MainFunction_Wakeup",
            "param" : 0,
            "proto" : "void Can_MainFunction_Wakeup();"
         },
         "12" : {
            "name" : "Can_MainFunction_Mode",
            "param" : 0,
            "proto" : "void Can_MainFunction_Mode();"
         },
         "13" : {
            "name" : "Can_ChangeBaudrate",
            "param" : 2,
            "proto" : "Std_ReturnType Can_ChangeBaudrate(uint8 Controller,uint16 Baudrate);"
         },
         "14" : {
            "name" : "Can_CheckBaudrate",
            "param" : 2,
            "proto" : "Std_ReturnType Can_CheckBaudrate(uint8 Controller,uint16 Baudrate);"
         },
         "15" : {
            "name" : "Can_SetIcomConfiguration",
            "param" : 2,
            "proto" : "Std_ReturnType Can_SetIcomConfiguration(uint8 Controller,IcomConfigIdType ConfigurationId);"
         },
         "3" : {
            "name" : "Can_SetControllerMode",
            "param" : 2,
            "proto" : "Can_ReturnType Can_SetControllerMode(uint8 Controller,Can_StateTransitionType Transition);"
         },
         "4" : {
            "name" : "Can_DisableControllerInterrupts",
            "param" : 1,
            "proto" : "void Can_DisableControllerInterrupts(uint8 Controller);"
         },
         "6" : {
            "name" : "Can_Write",
            "param" : 2,
            "proto" : "Can_ReturnType Can_Write(Can_HwHandleType Hth,const Can_PduType* PduInfo);"
         },
         "7" : {
            "name" : "Can_GetVersionInfo",
            "param" : 1,
            "proto" : "void Can_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "8" : {
            "name" : "Can_MainFunction_Read",
            "param" : 0,
            "proto" : "void Can_MainFunction_Read();"
         }
      }
   },
   "81" : {
      "abbreviation" : "Fr",
      "services" : {
         "0" : {
            "name" : "Fr_ControllerInit",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_ControllerInit(uint8 Fr_CtrlIdx);"
         },
         "10" : {
            "name" : "Fr_GetPOCStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_GetPOCStatus(uint8 Fr_CtrlIdx,Fr_POCStatusType* Fr_POCStatusPtr);"
         },
         "11" : {
            "name" : "Fr_TransmitTxLPdu",
            "param" : 4,
            "proto" : "Std_ReturnType Fr_TransmitTxLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx,const uint8* Fr_LSduPtr,uint8 Fr_LSduLength);"
         },
         "12" : {
            "name" : "Fr_ReceiveRxLPdu",
            "param" : 5,
            "proto" : "Std_ReturnType Fr_ReceiveRxLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx,uint8* Fr_LSduPtr,Fr_RxLPduStatusType* Fr_LPduStatusPtr,uint8* Fr_LSduLengthPtr);"
         },
         "13" : {
            "name" : "Fr_CheckTxLPduStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_CheckTxLPduStatus(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx,Fr_TxLPduStatusType* Fr_TxLPduStatusPtr);"
         },
         "16" : {
            "name" : "Fr_GetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetGlobalTime(uint8 Fr_CtrlIdx,uint8* Fr_CyclePtr,uint16* Fr_MacroTickPtr);"
         },
         "17" : {
            "name" : "Fr_SetAbsoluteTimer",
            "param" : 4,
            "proto" : "Std_ReturnType Fr_SetAbsoluteTimer(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx,uint8 Fr_Cycle,uint16 Fr_Offset);"
         },
         "19" : {
            "name" : "Fr_CancelAbsoluteTimer",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_CancelAbsoluteTimer(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "21" : {
            "name" : "Fr_EnableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_EnableAbsoluteTimerIRQ(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "23" : {
            "name" : "Fr_AckAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_AckAbsoluteTimerIRQ(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "25" : {
            "name" : "Fr_DisableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_DisableAbsoluteTimerIRQ(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "27" : {
            "name" : "Fr_GetVersionInfo",
            "param" : 1,
            "proto" : "void Fr_GetVersionInfo(Std_VersionInfoType* VersioninfoPtr);"
         },
         "28" : {
            "name" : "Fr_Init",
            "param" : 1,
            "proto" : "void Fr_Init(const Fr_ConfigType* Fr_ConfigPtr);"
         },
         "3" : {
            "name" : "Fr_StartCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_StartCommunication(uint8 Fr_CtrlIdx);"
         },
         "31" : {
            "name" : "Fr_PrepareLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_PrepareLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "32" : {
            "name" : "Fr_GetAbsoluteTimerIRQStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetAbsoluteTimerIRQStatus(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx,boolean* Fr_IRQStatusPtr);"
         },
         "34" : {
            "name" : "Fr_GetNmVector",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_GetNmVector(uint8 Fr_CtrlIdx,uint8* Fr_NmVectorPtr);"
         },
         "35" : {
            "name" : "Fr_AllowColdstart",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_AllowColdstart(uint8 Fr_CtrlIdx);"
         },
         "36" : {
            "name" : "Fr_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_AllSlots(uint8 Fr_CtrlIdx);"
         },
         "37" : {
            "name" : "Fr_ReconfigLPdu",
            "param" : 8,
            "proto" : "Std_ReturnType Fr_ReconfigLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx,uint16 Fr_FrameId,Fr_ChannelType Fr_ChnlIdx,uint8 Fr_CycleRepetition,uint8 Fr_CycleOffset,uint8 Fr_PayloadLength,uint16 Fr_HeaderCRC);"
         },
         "38" : {
            "name" : "Fr_DisableLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_DisableLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "39" : {
            "name" : "Fr_GetNumOfStartupFrames",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_GetNumOfStartupFrames(uint8 Fr_CtrlIdx,uint8* Fr_NumOfStartupFramesPtr);"
         },
         "4" : {
            "name" : "Fr_HaltCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_HaltCommunication(uint8 Fr_CtrlIdx);"
         },
         "40" : {
            "name" : "Fr_GetChannelStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetChannelStatus(uint8 Fr_CtrlIdx,uint16* Fr_ChannelAStatusPtr,uint16* Fr_ChannelBStatusPtr);"
         },
         "41" : {
            "name" : "Fr_GetClockCorrection",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetClockCorrection(uint8 Fr_CtrlIdx,sint16* Fr_RateCorrectionPtr,sint32* Fr_OffsetCorrectionPtr);"
         },
         "42" : {
            "name" : "Fr_GetSyncFrameList",
            "param" : 6,
            "proto" : "Std_ReturnType Fr_GetSyncFrameList(uint8 Fr_CtrlIdx,uint8 Fr_ListSize,uint16* Fr_ChannelAEvenListPtr,uint16* Fr_ChannelBEvenListPtr,uint16* Fr_ChannelAOddListPtr,uint16* Fr_ChannelBOddListPtr);"
         },
         "43" : {
            "name" : "Fr_GetWakeupRxStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_GetWakeupRxStatus(uint8 Fr_CtrlIdx,uint8* Fr_WakeupRxStatusPtr);"
         },
         "45" : {
            "name" : "Fr_CancelTxLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_CancelTxLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "46" : {
            "name" : "Fr_ReadCCConfig",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_ReadCCConfig(uint8 Fr_CtrlIdx,uint8 Fr_ConfigParamIdx,uint32* Fr_ConfigParamValuePtr);"
         },
         "5" : {
            "name" : "Fr_AbortCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_AbortCommunication(uint8 Fr_CtrlIdx);"
         },
         "6" : {
            "name" : "Fr_SendWUP",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_SendWUP(uint8 Fr_CtrlIdx);"
         },
         "7" : {
            "name" : "Fr_SetWakeupChannel",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_SetWakeupChannel(uint8 Fr_CtrlIdx,Fr_ChannelType Fr_ChnlIdx);"
         }
      }
   },
   "82" : {
      "abbreviation" : "Lin",
      "services" : {
         "0" : {
            "name" : "Lin_Init",
            "param" : 1,
            "proto" : "void Lin_Init(const Lin_ConfigType* Config);"
         },
         "1" : {
            "name" : "Lin_GetVersionInfo",
            "param" : 1,
            "proto" : "void Lin_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "10" : {
            "name" : "Lin_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_CheckWakeup(uint8 Channel);"
         },
         "11" : {
            "name" : "Lin_WakeupInternal",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_WakeupInternal(uint8 Channel);"
         },
         "4" : {
            "name" : "Lin_SendFrame",
            "param" : 2,
            "proto" : "Std_ReturnType Lin_SendFrame(uint8 Channel,Lin_PduType* PduInfoPtr);"
         },
         "6" : {
            "name" : "Lin_GoToSleep",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_GoToSleep(uint8 Channel);"
         },
         "7" : {
            "name" : "Lin_Wakeup",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_Wakeup(uint8 Channel);"
         },
         "8" : {
            "name" : "Lin_GetStatus",
            "param" : 2,
            "proto" : "Lin_StatusType Lin_GetStatus(uint8 Channel,uint8** Lin_SduPtr);"
         },
         "9" : {
            "name" : "Lin_GoToSleepInternal",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_GoToSleepInternal(uint8 Channel);"
         }
      }
   },
   "83" : {
      "abbreviation" : "Spi",
      "services" : {
         "0" : {
            "name" : "Spi_Init",
            "param" : 1,
            "proto" : "void Spi_Init(const Spi_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Spi_DeInit",
            "param" : 0,
            "proto" : "Std_ReturnType Spi_DeInit();"
         },
         "10" : {
            "name" : "Spi_SyncTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_SyncTransmit(Spi_SequenceType Sequence);"
         },
         "11" : {
            "name" : "Spi_GetHWUnitStatus",
            "param" : 1,
            "proto" : "Spi_StatusType Spi_GetHWUnitStatus(Spi_HWUnitType HWUnit);"
         },
         "12" : {
            "name" : "Spi_Cancel",
            "param" : 1,
            "proto" : "void Spi_Cancel(Spi_SequenceType Sequence);"
         },
         "13" : {
            "name" : "Spi_SetAsyncMode",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_SetAsyncMode(Spi_AsyncModeType Mode);"
         },
         "16" : {
            "name" : "Spi_MainFunction_Handling",
            "param" : 0,
            "proto" : "void Spi_MainFunction_Handling();"
         },
         "2" : {
            "name" : "Spi_WriteIB",
            "param" : 2,
            "proto" : "Std_ReturnType Spi_WriteIB(Spi_ChannelType Channel,const Spi_DataBufferType* DataBufferPtr);"
         },
         "3" : {
            "name" : "Spi_AsyncTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_AsyncTransmit(Spi_SequenceType Sequence);"
         },
         "4" : {
            "name" : "Spi_ReadIB",
            "param" : 2,
            "proto" : "Std_ReturnType Spi_ReadIB(Spi_ChannelType Channel,Spi_DataBufferType* DataBufferPointer);"
         },
         "5" : {
            "name" : "Spi_SetupEB",
            "param" : 4,
            "proto" : "Std_ReturnType Spi_SetupEB(Spi_ChannelType Channel,const Spi_DataBufferType* SrcDataBufferPtr,Spi_DataBufferType* DesDataBufferPtr,Spi_NumberOfDataType Length);"
         },
         "6" : {
            "name" : "Spi_GetStatus",
            "param" : 0,
            "proto" : "Spi_StatusType Spi_GetStatus();"
         },
         "7" : {
            "name" : "Spi_GetJobResult",
            "param" : 1,
            "proto" : "Spi_JobResultType Spi_GetJobResult(Spi_JobType Job);"
         },
         "8" : {
            "name" : "Spi_GetSequenceResult",
            "param" : 1,
            "proto" : "Spi_SeqResultType Spi_GetSequenceResult(Spi_SequenceType Sequence);"
         },
         "9" : {
            "name" : "Spi_GetVersionInfo",
            "param" : 1,
            "proto" : "void Spi_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "84" : {
      "abbreviation" : "Ttcan",
      "services" : {
         "0" : {
            "name" : "Can_TTReceive",
            "param" : 5,
            "proto" : "void Can_TTReceive(uint8 Controller,uint8 Hrh,Can_IdType* CanId,uint8* CanDlc,uint8* CanSduPtr);"
         },
         "51" : {
            "name" : "Can_TTGetControllerTime",
            "param" : 5,
            "proto" : "void Can_TTGetControllerTime(uint8 Controller,Can_TTTimeType* Can_TTGlobalTime,Can_TTTimeType* Can_TTLocalTime,Can_TTTimeType* Can_TTCycleTime,uint8* Can_TTCycleCount);"
         },
         "52" : {
            "name" : "Can_TTGetMasterState",
            "param" : 2,
            "proto" : "void Can_TTGetMasterState(uint8 Controller,Can_TTMasterStateType* Can_TTMasterState);"
         },
         "53" : {
            "name" : "Can_TTGetNTUActual",
            "param" : 2,
            "proto" : "void Can_TTGetNTUActual(uint8 Controller,Can_TTTURType* Can_TTTURAct);"
         },
         "54" : {
            "name" : "Can_TTGetErrorLevel",
            "param" : 2,
            "proto" : "void Can_TTGetErrorLevel(uint8 Controller,Can_TTErrorLevelType* Can_TTErrorLevel);"
         },
         "55" : {
            "name" : "Can_TTSetNextIsGap",
            "param" : 1,
            "proto" : "void Can_TTSetNextIsGap(uint8 Controller);"
         },
         "57" : {
            "name" : "Can_TTSetTimeCommand",
            "param" : 1,
            "proto" : "void Can_TTSetTimeCommand(uint8 Controller);"
         },
         "58" : {
            "name" : "Can_TTGlobalTimePreset",
            "param" : 2,
            "proto" : "void Can_TTGlobalTimePreset(uint8 Controller,Can_TTTimeType Can_TTGlobalTimePreset);"
         },
         "59" : {
            "name" : "Can_TTSetExtClockSyncCommand",
            "param" : 1,
            "proto" : "void Can_TTSetExtClockSyncCommand(uint8 Controller);"
         },
         "60" : {
            "name" : "Can_TTSetNTUAdjust",
            "param" : 2,
            "proto" : "void Can_TTSetNTUAdjust(uint8 Controller,Can_TTTURType Can_TTTURAdjust);"
         },
         "71" : {
            "name" : "Can_TTGetSyncQuality",
            "param" : 3,
            "proto" : "void Can_TTGetSyncQuality(uint8 Controller,boolean* Can_TTClockSpeed,boolean* Can_TTGlobalTimePhase);"
         },
         "72" : {
            "name" : "Can_TTSetTimeMark",
            "param" : 3,
            "proto" : "void Can_TTSetTimeMark(uint8 Controller,Can_TTTimeType Can_TTTimeMark,Can_TTTimeSourceType Can_TTTimeSource);"
         },
         "73" : {
            "name" : "Can_TTCancelTimeMark",
            "param" : 1,
            "proto" : "void Can_TTCancelTimeMark(uint8 Controller);"
         },
         "75" : {
            "name" : "Can_TTEnableTimeMarkIRQ",
            "param" : 1,
            "proto" : "void Can_TTEnableTimeMarkIRQ(uint8 Controller);"
         },
         "76" : {
            "name" : "Can_TTDisableTimeMarkIRQ",
            "param" : 1,
            "proto" : "void Can_TTDisableTimeMarkIRQ(uint8 Controller);"
         },
         "77" : {
            "name" : "Can_TTGetTimeMarkIRQStatus",
            "param" : 2,
            "proto" : "void Can_TTGetTimeMarkIRQStatus(uint8 Controller,boolean* Can_TTIRQStatus);"
         },
         "80" : {
            "name" : "Can_TTMainFunction_IRQ",
            "param" : 0,
            "proto" : "void Can_TTMainFunction_IRQ();"
         }
      }
   },
   "88" : {
      "abbreviation" : "Eth",
      "services" : {
         "1" : {
            "name" : "Eth_Init",
            "param" : 1,
            "proto" : "void Eth_Init(const Eth_ConfigType* CfgPtr);"
         },
         "10" : {
            "name" : "Eth_MainFunction",
            "param" : 0,
            "proto" : "void Eth_MainFunction();"
         },
         "11" : {
            "name" : "Eth_Receive",
            "param" : 2,
            "proto" : "void Eth_Receive(uint8 CtrlIdx,Eth_RxStatusType* RxStatusPtr);"
         },
         "12" : {
            "name" : "Eth_TxConfirmation",
            "param" : 1,
            "proto" : "void Eth_TxConfirmation(uint8 CtrlIdx);"
         },
         "13" : {
            "name" : "Eth_GetVersionInfo",
            "param" : 1,
            "proto" : "void Eth_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "18" : {
            "name" : "Eth_UpdatePhysAddrFilter",
            "param" : 3,
            "proto" : "Std_ReturnType Eth_UpdatePhysAddrFilter(uint8 CtrlIdx,const uint8* PhysAddrPtr,Eth_FilterActionType Action);"
         },
         "19" : {
            "name" : "Eth_SetPhysAddr",
            "param" : 2,
            "proto" : "void Eth_SetPhysAddr(uint8 CtrlIdx,const uint8* PhysAddrPtr);"
         },
         "20" : {
            "name" : "Eth_GetDropCount",
            "param" : 3,
            "proto" : "Std_ReturnType Eth_GetDropCount(uint8 CtrlIdx,uint8 CountValues,uint32* DropCount);"
         },
         "21" : {
            "name" : "Eth_GetEtherStats",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_GetEtherStats(uint8 CtrlIdx,uint32* etherStats);"
         },
         "22" : {
            "name" : "Eth_GetCurrentTime",
            "param" : 3,
            "proto" : "Std_ReturnType Eth_GetCurrentTime(uint8 CtrlIdx,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "23" : {
            "name" : "Eth_EnableEgressTimeStamp",
            "param" : 2,
            "proto" : "void Eth_EnableEgressTimeStamp(uint8 CtrlIdx,uint8 BufIdx);"
         },
         "24" : {
            "name" : "Eth_GetEgressTimeStamp",
            "param" : 4,
            "proto" : "void Eth_GetEgressTimeStamp(uint8 CtrlIdx,uint8 BufIdx,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "25" : {
            "name" : "Eth_GetIngressTimeStamp",
            "param" : 4,
            "proto" : "void Eth_GetIngressTimeStamp(uint8 CtrlIdx,Eth_DataType* DataPtr,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "26" : {
            "name" : "Eth_SetCorrectionTime",
            "param" : 3,
            "proto" : "void Eth_SetCorrectionTime(uint8 CtrlIdx,const Eth_TimeIntDiffType* timeOffsetPtr,const Eth_RateRatioType* rateRatioPtr);"
         },
         "27" : {
            "name" : "Eth_SetGlobalTime",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_SetGlobalTime(uint8 CtrlIdx,const Eth_TimeStampType* timeStampPtr);"
         },
         "3" : {
            "name" : "Eth_SetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_SetControllerMode(uint8 CtrlIdx,Eth_ModeType CtrlMode);"
         },
         "4" : {
            "name" : "Eth_GetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_GetControllerMode(uint8 CtrlIdx,Eth_ModeType* CtrlModePtr);"
         },
         "5" : {
            "name" : "Eth_WriteMii",
            "param" : 4,
            "proto" : "Std_ReturnType Eth_WriteMii(uint8 CtrlIdx,uint8 TrcvIdx,uint8 RegIdx,uint16 RegVal);"
         },
         "6" : {
            "name" : "Eth_ReadMii",
            "param" : 4,
            "proto" : "Std_ReturnType Eth_ReadMii(uint8 CtrlIdx,uint8 TrcvIdx,uint8 RegIdx,uint16* RegValPtr);"
         },
         "8" : {
            "name" : "Eth_GetPhysAddr",
            "param" : 2,
            "proto" : "void Eth_GetPhysAddr(uint8 CtrlIdx,uint8* PhysAddrPtr);"
         },
         "9" : {
            "name" : "Eth_ProvideTxBuffer",
            "param" : 4,
            "proto" : "BufReq_ReturnType Eth_ProvideTxBuffer(uint8 CtrlIdx,Eth_BufIdxType* BufIdxPtr,uint8** BufPtr,uint16* LenBytePtr);"
         }
      }
   },
   "89" : {
      "abbreviation" : "EthSwt",
      "services" : {
         "1" : {
            "name" : "EthSwt_Init",
            "param" : 1,
            "proto" : "void EthSwt_Init(const EthSwt_ConfigType* CfgPtr);"
         },
         "10" : {
            "name" : "EthSwt_GetArlTable",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_GetArlTable(uint8 SwitchIdx,uint32 startEntry,uint32 numberOfElements,EthSwt_MacVlanType[] ArlTable);"
         },
         "11" : {
            "name" : "EthSwt_GetBufferLevel",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_GetBufferLevel(uint8 SwitchIdx,uint32* SwitchBufferLevelPtr);"
         },
         "12" : {
            "name" : "EthSwt_GetDropCount",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetDropCount(uint8 SwitchIdx,uint8 CountValues,uint32[]* DropCount);"
         },
         "13" : {
            "name" : "EthSwt_GetEtherStats",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetEtherStats(uint8 SwitchIdx,uint8 SwitchPortIdx,uint32[]* etherStats);"
         },
         "14" : {
            "name" : "EthSwt_GetSwitchReg",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_GetSwitchReg(uint8 SwitchIdx,uint32 page,uint32 register,uint32* registerContent);"
         },
         "15" : {
            "name" : "EthSwt_SetSwitchReg",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_SetSwitchReg(uint8 SwitchIdx,uint32 page,uint32 register,uint32 registerContent);"
         },
         "16" : {
            "name" : "EthSwt_ReadTrcvRegister",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_ReadTrcvRegister(uint8 SwitchIdx,uint8 SwitchPortIdx,uint8 RegIdx,uint16* RegValPtr);"
         },
         "17" : {
            "name" : "EthSwt_WriteTrcvRegister",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_WriteTrcvRegister(uint8 SwitchIdx,uint8 SwitchPortIdx,uint8 RegIdx,uint16 RegVal);"
         },
         "18" : {
            "name" : "EthSwt_EnableVlan",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_EnableVlan(uint8 SwitchIdx,uint8 SwitchPortIdx,uint16 VlanId,boolean Enable);"
         },
         "19" : {
            "name" : "EthSwt_StoreConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_StoreConfiguration(uint8 SwitchIdx);"
         },
         "2" : {
            "name" : "EthSwt_SwitchInit",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_SwitchInit(uint8 SwitchIdx);"
         },
         "20" : {
            "name" : "EthSwt_ResetConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_ResetConfiguration(uint8 SwitchIdx);"
         },
         "21" : {
            "name" : "EthSwt_SetMacLearningMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetMacLearningMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthSwt_MacLearningType MacLearningMode);"
         },
         "22" : {
            "name" : "EthSwt_GetMacLearningMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetMacLearningMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthSwt_MacLearningType* MacLearningMode);"
         },
         "23" : {
            "name" : "EthSwt_NvmSingleBlockCallback",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_NvmSingleBlockCallback(uint8 ServiceId,NvM_RequestResultType JobResult);"
         },
         "24" : {
            "name" : "EthSwt_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthSwt_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "25" : {
            "name" : "_User__LinkDown",
            "param" : 2,
            "proto" : "void _User__LinkDown(uint8* SwitchIdxPtr,uint8* PortIdxPtr);"
         },
         "26" : {
            "name" : "_User__LinkUp",
            "param" : 2,
            "proto" : "void _User__LinkUp(uint8* SwitchIdxPtr,uint8* PortIdxPtr);"
         },
         "27" : {
            "name" : "_User__PersistentConfigurationResult",
            "param" : 1,
            "proto" : "void _User__PersistentConfigurationResult(NvM_RequestResultType JobResult);"
         },
         "28" : {
            "name" : "EthSwt_MainFunction",
            "param" : 0,
            "proto" : "void EthSwt_MainFunction();"
         },
         "3" : {
            "name" : "EthSwt_SetSwitchPortMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetSwitchPortMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_ModeType PortMode);"
         },
         "4" : {
            "name" : "EthSwt_GetSwitchPortMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetSwitchPortMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_ModeType* SwitchModePtr);"
         },
         "5" : {
            "name" : "EthSwt_StartSwitchPortAutoNegotiation",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_StartSwitchPortAutoNegotiation(uint8 SwitchIdx,uint8 SwitchPortIdx);"
         },
         "6" : {
            "name" : "EthSwt_GetLinkState",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetLinkState(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_LinkStateType* LinkStatePtr);"
         },
         "7" : {
            "name" : "EthSwt_GetBaudRate",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetBaudRate(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_BaudRateType* BaudRatePtr);"
         },
         "8" : {
            "name" : "EthSwt_GetDuplexMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetDuplexMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_DuplexModeType* DuplexModePtr);"
         },
         "9" : {
            "name" : "EthSwt_GetPortMacAddr",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetPortMacAddr(const uint8* MacAddrPtr,const uint8* SwitchIdxPtr,uint8* PortIdxPtr);"
         }
      }
   },
   "90" : {
      "abbreviation" : "Eep",
      "services" : {
         "0" : {
            "name" : "Eep_Init",
            "param" : 1,
            "proto" : "void Eep_Init(const Eep_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Eep_SetMode",
            "param" : 1,
            "proto" : "void Eep_SetMode(MemIf_ModeType Mode);"
         },
         "10" : {
            "name" : "Eep_GetVersionInfo",
            "param" : 1,
            "proto" : "void Eep_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "2" : {
            "name" : "Eep_Read",
            "param" : 3,
            "proto" : "Std_ReturnType Eep_Read(Eep_AddressType EepromAddress,uint8* DataBufferPtr,Eep_LengthType Length);"
         },
         "3" : {
            "name" : "Eep_Write",
            "param" : 3,
            "proto" : "Std_ReturnType Eep_Write(Eep_AddressType EepromAddress,const uint8* DataBufferPtr,Eep_LengthType Length);"
         },
         "4" : {
            "name" : "Eep_Erase",
            "param" : 2,
            "proto" : "Std_ReturnType Eep_Erase(Eep_AddressType EepromAddress,Eep_LengthType Length);"
         },
         "5" : {
            "name" : "Eep_Compare",
            "param" : 3,
            "proto" : "Std_ReturnType Eep_Compare(Eep_AddressType EepromAddress,const uint8* DataBufferPtr,Eep_LengthType Length);"
         },
         "6" : {
            "name" : "Eep_Cancel",
            "param" : 0,
            "proto" : "void Eep_Cancel();"
         },
         "7" : {
            "name" : "Eep_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Eep_GetStatus();"
         },
         "8" : {
            "name" : "Eep_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Eep_GetJobResult();"
         },
         "9" : {
            "name" : "Eep_MainFunction",
            "param" : 0,
            "proto" : "void Eep_MainFunction();"
         }
      }
   },
   "92" : {
      "abbreviation" : "Fls",
      "services" : {
         "0" : {
            "name" : "Fls_Init",
            "param" : 1,
            "proto" : "void Fls_Init(const Fls_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Fls_Erase",
            "param" : 2,
            "proto" : "Std_ReturnType Fls_Erase(Fls_AddressType TargetAddress,Fls_LengthType Length);"
         },
         "10" : {
            "name" : "Fls_BlankCheck",
            "param" : 2,
            "proto" : "Std_ReturnType Fls_BlankCheck(Fls_AddressType TargetAddress,Fls_LengthType Length);"
         },
         "16" : {
            "name" : "Fls_GetVersionInfo",
            "param" : 1,
            "proto" : "void Fls_GetVersionInfo(Std_VersionInfoType* VersioninfoPtr);"
         },
         "2" : {
            "name" : "Fls_Write",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Write(Fls_AddressType TargetAddress,const uint8* SourceAddressPtr,Fls_LengthType Length);"
         },
         "3" : {
            "name" : "Fls_Cancel",
            "param" : 0,
            "proto" : "void Fls_Cancel();"
         },
         "4" : {
            "name" : "Fls_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Fls_GetStatus();"
         },
         "5" : {
            "name" : "Fls_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Fls_GetJobResult();"
         },
         "6" : {
            "name" : "Fls_MainFunction",
            "param" : 0,
            "proto" : "void Fls_MainFunction();"
         },
         "7" : {
            "name" : "Fls_Read",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Read(Fls_AddressType SourceAddress,uint8* TargetAddressPtr,Fls_LengthType Length);"
         },
         "8" : {
            "name" : "Fls_Compare",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Compare(Fls_AddressType SourceAddress,const uint8* TargetAddressPtr,Fls_LengthType Length);"
         },
         "9" : {
            "name" : "Fls_SetMode",
            "param" : 1,
            "proto" : "void Fls_SetMode(MemIf_ModeType Mode);"
         }
      }
   },
   "93" : {
      "abbreviation" : "RamTst",
      "services" : {
         "0" : {
            "name" : "RamTst_Init",
            "param" : 1,
            "proto" : "void RamTst_Init(const RamTst_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "RamTst_MainFunction",
            "param" : 0,
            "proto" : "void RamTst_MainFunction();"
         },
         "10" : {
            "name" : "RamTst_GetVersionInfo",
            "param" : 1,
            "proto" : "void RamTst_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "11" : {
            "name" : "RamTst_SelectAlgParams",
            "param" : 1,
            "proto" : "void RamTst_SelectAlgParams(RamTst_AlgParamsIdType NewAlgParamsId);"
         },
         "12" : {
            "name" : "RamTst_DeInit",
            "param" : 0,
            "proto" : "void RamTst_DeInit();"
         },
         "13" : {
            "name" : "RamTst_Suspend",
            "param" : 0,
            "proto" : "void RamTst_Suspend();"
         },
         "14" : {
            "name" : "RamTst_Resume",
            "param" : 0,
            "proto" : "void RamTst_Resume();"
         },
         "16" : {
            "name" : "RamTst_RunFullTest",
            "param" : 0,
            "proto" : "void RamTst_RunFullTest();"
         },
         "17" : {
            "name" : "RamTst_RunPartialTest",
            "param" : 1,
            "proto" : "void RamTst_RunPartialTest(RamTst_NumberOfBlocksType BlockId);"
         },
         "18" : {
            "name" : "RamTst_GetAlgParams",
            "param" : 0,
            "proto" : "RamTst_AlgParamsIdType RamTst_GetAlgParams();"
         },
         "2" : {
            "name" : "RamTst_Stop",
            "param" : 0,
            "proto" : "void RamTst_Stop();"
         },
         "3" : {
            "name" : "RamTst_Allow",
            "param" : 0,
            "proto" : "void RamTst_Allow();"
         },
         "4" : {
            "name" : "RamTst_GetExecutionStatus",
            "param" : 0,
            "proto" : "RamTst_ExecutionStatusType RamTst_GetExecutionStatus();"
         },
         "5" : {
            "name" : "RamTst_GetTestResult",
            "param" : 0,
            "proto" : "RamTst_TestResultType RamTst_GetTestResult();"
         },
         "6" : {
            "name" : "RamTst_GetTestResultPerBlock",
            "param" : 1,
            "proto" : "RamTst_TestResultType RamTst_GetTestResultPerBlock(RamTst_NumberOfBlocksType BlockID);"
         },
         "7" : {
            "name" : "RamTst_GetTestAlgorithm",
            "param" : 0,
            "proto" : "RamTst_AlgorithmType RamTst_GetTestAlgorithm();"
         },
         "8" : {
            "name" : "RamTst_ChangeNumberOfTestedCells",
            "param" : 1,
            "proto" : "void RamTst_ChangeNumberOfTestedCells(RamTst_NumberOfTestedCellsType NewNumberOfTestedCells);"
         }
      }
   }
}
