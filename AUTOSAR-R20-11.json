{
   "062" : {
      "abbreviation" : "LinIf",
      "services" : {
         "1" : {
            "name" : "LinIf_Init",
            "param" : 1,
            "proto" : "void LinIf_Init(const LinIf_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "LinIf_GetTrcvWakeupReason",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_GetTrcvWakeupReason(NetworkHandleType Channel,LinTrcv_TrcvWakeupReasonType* TrcvWuReasonPtr);"
         },
         "11" : {
            "name" : "LinIf_SetTrcvWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_SetTrcvWakeupMode(NetworkHandleType Channel,LinTrcv_TrcvWakeupModeType LinTrcvWakeupMode);"
         },
         "112" : {
            "name" : "LinIf_GetConfiguredNAD",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_GetConfiguredNAD(NetworkHandleType Channel,uint8* Nad);"
         },
         "113" : {
            "name" : "LinIf_SetConfiguredNAD",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_SetConfiguredNAD(NetworkHandleType Channel,uint8 Nad);"
         },
         "115" : {
            "name" : "LinIf_SetPIDTable",
            "param" : 3,
            "proto" : "Std_ReturnType LinIf_SetPIDTable(NetworkHandleType Channel,Lin_FramePidType* PidBuffer,uint8 PidBufferLength);"
         },
         "116" : {
            "name" : "_User_ResponseErrorSignalChanged_",
            "param" : 2,
            "proto" : "void _User_ResponseErrorSignalChanged_(NetworkHandleType Channel,boolean RespErrSigValue);"
         },
         "117" : {
            "name" : "_User_SaveConfigurationRequest_",
            "param" : 1,
            "proto" : "boolean _User_SaveConfigurationRequest_(NetworkHandleType Channel);"
         },
         "122" : {
            "name" : "LinIf_TxConfirmation",
            "param" : 1,
            "proto" : "void LinIf_TxConfirmation(NetworkHandleType Channel);"
         },
         "127" : {
            "name" : "LinIf_EnableBusMirroring",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_EnableBusMirroring(NetworkHandleType Channel,boolean MirroringActive);"
         },
         "3" : {
            "name" : "LinIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinIf_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "6" : {
            "name" : "LinIf_GotoSleep",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_GotoSleep(NetworkHandleType Channel);"
         },
         "64" : {
            "name" : "LinTp_Init",
            "param" : 1,
            "proto" : "void LinTp_Init(const LinTp_ConfigType* ConfigPtr);"
         },
         "66" : {
            "name" : "LinTp_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinTp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "67" : {
            "name" : "LinTp_Shutdown",
            "param" : 0,
            "proto" : "void LinTp_Shutdown();"
         },
         "73" : {
            "name" : "LinIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "8" : {
            "name" : "LinIf_SetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_SetTrcvMode(NetworkHandleType Channel,LinTrcv_TrcvModeType TransceiverMode);"
         },
         "83" : {
            "name" : "LinTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LinTp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "9" : {
            "name" : "LinIf_GetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinIf_GetTrcvMode(NetworkHandleType Channel,LinTrcv_TrcvModeType* TransceiverModePtr);"
         },
         "96" : {
            "name" : "LinIf_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType LinIf_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         }
      }
   },
   "064" : {
      "abbreviation" : "LinTrcv",
      "services" : {
         "1" : {
            "name" : "LinTrcv_SetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_SetOpMode(uint8 LinNetwork,LinTrcv_TrcvModeType OpMode);"
         },
         "4" : {
            "name" : "LinTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "LinTrcv_SetWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinTrcv_SetWakeupMode(uint8 LINNetwork,LinTrcv_TrcvWakeupModeType TrcvWakupMode);"
         },
         "7" : {
            "name" : "LinTrcv_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType LinTrcv_CheckWakeup(uint8 LinNetwork);"
         }
      }
   },
   "065" : {
      "abbreviation" : "EthIf",
      "services" : {
         "1" : {
            "name" : "EthIf_Init",
            "param" : 1,
            "proto" : "void EthIf_Init(const EthIf_ConfigType* CfgPtr);"
         },
         "10" : {
            "name" : "EthIf_Transmit",
            "param" : 6,
            "proto" : "Std_ReturnType EthIf_Transmit(uint8 CtrlIdx,Eth_BufIdxType BufIdx,Eth_FrameType FrameType,boolean TxConfirmation,uint16 LenByte,const uint8* PhysAddrPtr);"
         },
         "100" : {
            "name" : "EthIf_SwitchGetCfgDataInfo",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SwitchGetCfgDataInfo(uint8 SwitchIdx,uint32* DataSizePtr,uint32* DataAdressPtr);"
         },
         "102" : {
            "name" : "EthIf_TransceiverGetMacMethod",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_TransceiverGetMacMethod(uint8* TrcvIdx,EthTrcv_MacMethodType* MacModePtr);"
         },
         "103" : {
            "name" : "EthIf_GetSwitchPortWakeupReason",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetSwitchPortWakeupReason(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_WakeupReasonType* WakeupReasonPtr);"
         },
         "105" : {
            "name" : "EthIf_GetPhyWakeupReason",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetPhyWakeupReason(uint8 TrcvIdx,EthTrcv_WakeupReasonType* WakeupReasonPtr);"
         },
         "11" : {
            "name" : "EthIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthIf_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "12" : {
            "name" : "EthIf_UpdatePhysAddrFilter",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_UpdatePhysAddrFilter(uint8 CtrlIdx,const uint8* PhysAddrPtr,Eth_FilterActionType Action);"
         },
         "13" : {
            "name" : "EthIf_SetPhysAddr",
            "param" : 2,
            "proto" : "void EthIf_SetPhysAddr(uint8 CtrlIdx,const uint8* PhysAddrPtr);"
         },
         "15" : {
            "name" : "EthIf_TrcvModeIndication",
            "param" : 2,
            "proto" : "void EthIf_TrcvModeIndication(uint8 TrcvIdx,Eth_ModeType TrcvMode);"
         },
         "16" : {
            "name" : "EthIf_RxIndication",
            "param" : 6,
            "proto" : "void EthIf_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,const Eth_DataType* DataPtr,uint16 LenByte);"
         },
         "18" : {
            "name" : "EthIf_SetPhyLoopbackMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetPhyLoopbackMode(uint8 TrcvIdx,EthTrcv_PhyLoopbackModeType Mode);"
         },
         "19" : {
            "name" : "EthIf_SetPhyTxMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetPhyTxMode(uint8 TrcvIdx,EthTrcv_PhyTxModeType Mode);"
         },
         "21" : {
            "name" : "EthIf_GetPhyIdentifier",
            "param" : 4,
            "proto" : "Std_ReturnType EthIf_GetPhyIdentifier(uint8 TrcvIdx,uint32* OrgUniqueIdPtr,uint8* ModelNrPtr,uint8* RevisionNrPtr);"
         },
         "23" : {
            "name" : "EthIf_SetPhyTestMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetPhyTestMode(uint8 TrcvIdx,EthTrcv_PhyTestModeType Mode);"
         },
         "24" : {
            "name" : "EthIf_GetTrcvSignalQuality",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetTrcvSignalQuality(uint8 TrcvIdx,EthIf_SignalQualityResultType* ResultPtr);"
         },
         "25" : {
            "name" : "EthIf_ClearTrcvSignalQuality",
            "param" : 1,
            "proto" : "Std_ReturnType EthIf_ClearTrcvSignalQuality(uint8 TrcvIdx);"
         },
         "26" : {
            "name" : "EthIf_GetSwitchPortSignalQuality",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetSwitchPortSignalQuality(uint8 SwitchIdx,uint8 SwitchPortIdx,EthIf_SignalQualityResultType* ResultPtr);"
         },
         "27" : {
            "name" : "EthIf_ClearSwitchPortSignalQuality",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_ClearSwitchPortSignalQuality(uint8 SwitchIdx,uint8 SwitchPortIdx);"
         },
         "3" : {
            "name" : "EthIf_SetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetControllerMode(uint8 CtrlIdx,Eth_ModeType CtrlMode);"
         },
         "33" : {
            "name" : "EthIf_MainFunctionTx",
            "param" : 0,
            "proto" : "void EthIf_MainFunctionTx();"
         },
         "37" : {
            "name" : "EthIf_GetIngressTimeStamp",
            "param" : 4,
            "proto" : "Std_ReturnType EthIf_GetIngressTimeStamp(uint8 CtrlIdx,const Eth_DataType* DataPtr,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "4" : {
            "name" : "EthIf_GetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetControllerMode(uint8 CtrlIdx,Eth_ModeType* CtrlModePtr);"
         },
         "44" : {
            "name" : "EthIf_StoreConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthIf_StoreConfiguration(uint8 SwitchIdx);"
         },
         "45" : {
            "name" : "EthIf_ResetConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthIf_ResetConfiguration(uint8 SwitchIdx);"
         },
         "46" : {
            "name" : "EthIf_SetTransceiverWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetTransceiverWakeupMode(uint8 TrcvIdx,EthTrcv_WakeupModeType TrcvWakeupMode);"
         },
         "49" : {
            "name" : "EthIf_GetBufWTxParams",
            "param" : 4,
            "proto" : "Std_ReturnType EthIf_GetBufWTxParams(uint8 CtrlIdx,const WEth_BufWTxParamIdType* TxParamIds,uint32* ParamValues,uint8 NumParams);"
         },
         "5" : {
            "name" : "EthIf_MainFunctionState",
            "param" : 0,
            "proto" : "void EthIf_MainFunctionState();"
         },
         "51" : {
            "name" : "EthIf_SetBufWTxParams",
            "param" : 5,
            "proto" : "Std_ReturnType EthIf_SetBufWTxParams(uint8 CtrlIdx,Eth_BufIdxType BufIdx,const WEth_BufWTxParamIdType* TxParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "52" : {
            "name" : "EthIf_SetRadioParams",
            "param" : 4,
            "proto" : "Std_ReturnType EthIf_SetRadioParams(uint8 TrcvId,const WEthTrcv_SetRadioParamIdType* ParamIds,const uint32* ParamValue,uint8 NumParams);"
         },
         "53" : {
            "name" : "EthIf_SetChanRxParams",
            "param" : 5,
            "proto" : "Std_ReturnType EthIf_SetChanRxParams(uint8 TrcvId,uint8 RadioId,const WEthTrcv_SetChanRxParamIdType* ParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "54" : {
            "name" : "EthIf_SetChanTxParams",
            "param" : 5,
            "proto" : "Std_ReturnType EthIf_SetChanTxParams(uint8 TrcvId,uint8 RadioId,const WEthTrcv_SetChanTxParamIdType* TxParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "56" : {
            "name" : "EthIf_SetSwitchMgmtInfo",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SetSwitchMgmtInfo(uint8 CtrlIdx,Eth_BufIdxType BufIdx,EthSwt_MgmtInfoType* MgmtInfoPtr);"
         },
         "57" : {
            "name" : "EthIf_SwitchEnableTimeStamping",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SwitchEnableTimeStamping(uint8 CtrlIdx,Eth_BufIdxType BufIdx,EthSwt_MgmtInfoType* MgmtInfo);"
         },
         "6" : {
            "name" : "EthIf_SwitchPortGroupRequestMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SwitchPortGroupRequestMode(EthIf_SwitchPortGroupIdxType PortGroupIdx,Eth_ModeType PortMode);"
         },
         "64" : {
            "name" : "EthIf_VerifyConfig",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_VerifyConfig(uint8 SwitchIdx,boolean* Result);"
         },
         "65" : {
            "name" : "EthIf_SetForwardingMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_SetForwardingMode(uint8 SwitchIdx,boolean mode);"
         },
         "67" : {
            "name" : "EthIf_GetVlanId",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetVlanId(uint8 CtrlIdx,uint16* VlanIdPtr);"
         },
         "68" : {
            "name" : "EthIf_GetCtrlIdxList",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetCtrlIdxList(uint8* NumberOfCtrlIdx,uint8* CtrlIdxListPtr);"
         },
         "7" : {
            "name" : "EthIf_StartAllPorts",
            "param" : 0,
            "proto" : "Std_ReturnType EthIf_StartAllPorts();"
         },
         "71" : {
            "name" : "EthIf_GetRxMgmtObject",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetRxMgmtObject(uint8 CtrlIdx,Eth_DataType* DataPtr,EthSwt_MgmtObjectType **MgmtObjectPtr);"
         },
         "73" : {
            "name" : "EthIf_GetSwitchPortMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetSwitchPortMode(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_ModeType* PortModePtr);"
         },
         "74" : {
            "name" : "EthIf_GetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_GetTransceiverMode(uint8 TrcvIdx,Eth_ModeType* TrcvModePtr);"
         },
         "75" : {
            "name" : "EthIf_SwitchPortGetLinkState",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SwitchPortGetLinkState(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_LinkStateType* LinkStatePtr);"
         },
         "76" : {
            "name" : "EthIf_TransceiverGetLinkState",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_TransceiverGetLinkState(uint8 TrcvIdx,EthTrcv_LinkStateType* LinkStatePtr);"
         },
         "79" : {
            "name" : "EthIf_SwitchPortGetDuplexMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SwitchPortGetDuplexMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_DuplexModeType* DuplexModePtr);"
         },
         "8" : {
            "name" : "EthIf_GetPhysAddr",
            "param" : 2,
            "proto" : "void EthIf_GetPhysAddr(uint8 CtrlIdx,uint8* PhysAddrPtr);"
         },
         "80" : {
            "name" : "EthIf_TransceiverGetDuplexMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_TransceiverGetDuplexMode(uint8 TrcvIdx,EthTrcv_DuplexModeType* DuplexModePtr);"
         },
         "83" : {
            "name" : "EthIf_SwitchPortGetTxStats",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SwitchPortGetTxStats(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_TxStatsType* TxStatsPtr);"
         },
         "86" : {
            "name" : "EthIf_GetSwitchPortIdentifier",
            "param" : 5,
            "proto" : "Std_ReturnType EthIf_GetSwitchPortIdentifier(uint8 SwitchIdx,uint8 SwitchPortIdx,uint32* OrgUniqueIdPtr,uint8* ModelNrPtr,uint8* RevisionNrPtr);"
         },
         "9" : {
            "name" : "EthIf_ProvideTxBuffer",
            "param" : 6,
            "proto" : "BufReq_ReturnType EthIf_ProvideTxBuffer(uint8 CtrlIdx,Eth_FrameType FrameType,uint8 Priority,Eth_BufIdxType* BufIdxPtr,uint8** BufPtr,uint16* LenBytePtr);"
         },
         "90" : {
            "name" : "EthIf_DeletePortMirrorConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthIf_DeletePortMirrorConfiguration(uint8 MirroredSwitchIdx);"
         },
         "91" : {
            "name" : "EthIf_GetPortMirrorState",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetPortMirrorState(uint8 SwitchIdx,uint8 PortIdx,EthSwt_PortMirrorStateType* PortMirrorStatePtr);"
         },
         "92" : {
            "name" : "EthIf_SetPortMirrorState",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SetPortMirrorState(uint8 MirroredSwitchIdx,uint8 PortIdx,EthSwt_PortMirrorStateType PortMirrorState);"
         },
         "93" : {
            "name" : "EthIf_SetPortTestMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SetPortTestMode(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_PhyTestModeType Mode);"
         },
         "94" : {
            "name" : "EthIf_SetPortLoopbackMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_SetPortLoopbackMode(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_PhyLoopbackModeType Mode);"
         },
         "96" : {
            "name" : "EthIf_GetPortCableDiagnosticsResult",
            "param" : 3,
            "proto" : "Std_ReturnType EthIf_GetPortCableDiagnosticsResult(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_CableDiagResultType* ResultPtr);"
         },
         "97" : {
            "name" : "EthIf_RunPortCableDiagnostic",
            "param" : 2,
            "proto" : "Std_ReturnType EthIf_RunPortCableDiagnostic(uint8 SwitchIdx,uint8 PortIdx);"
         },
         "98" : {
            "name" : "EthIf_RunCableDiagnostic",
            "param" : 1,
            "proto" : "Std_ReturnType EthIf_RunCableDiagnostic(uint8 TrcvIdx);"
         },
         "99" : {
            "name" : "EthIf_SwitchGetCfgDataRaw",
            "param" : 4,
            "proto" : "Std_ReturnType EthIf_SwitchGetCfgDataRaw(uint8 SwitchIdx,uint32 Offset,uint16 Length,uint8* BufferPtr);"
         }
      }
   },
   "066" : {
      "abbreviation" : "TtcanIf",
      "services" : {
         "51" : {
            "name" : "CanIf_TTGetControllerTime",
            "param" : 5,
            "proto" : "Std_ReturnType CanIf_TTGetControllerTime(uint8 ControllerId,CanIf_TTTimeType* CanIf_TTGlobalTime,CanIf_TTTimeType* CanIf_TTLocalTime,CanIf_TTTimeType* CanIf_TTCycleTime,uint8* CanIf_TTCycleCount);"
         },
         "52" : {
            "name" : "CanIf_TTGetMasterState",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetMasterState(uint8 ControllerId,CanIf_TTMasterStateType* CanIf_TTMasterState);"
         },
         "53" : {
            "name" : "CanIf_TTGetNTUActual",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetNTUActual(uint8 ControllerId,float32 CanIf_TTNTUAct);"
         },
         "54" : {
            "name" : "CanIf_TTGetErrorLevel",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetErrorLevel(uint8 ControllerId,CanIf_TTErrorLevelType* CanIf_TTErrorLevel);"
         },
         "55" : {
            "name" : "CanIf_TTSetNextIsGap",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetNextIsGap(uint8 ControllerId);"
         },
         "56" : {
            "name" : "CanIf_TTSetEndOfGap",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetEndOfGap(uint8 ControllerId);"
         },
         "57" : {
            "name" : "CanIf_TTSetTimeCommand",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetTimeCommand(uint8 ControllerId);"
         },
         "58" : {
            "name" : "CanIf_TTGlobalTimePreset",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGlobalTimePreset(uint8 ControllerId,CanIf_TTTimeType CanIf_TTGlobalTimePreset);"
         },
         "59" : {
            "name" : "CanIf_TTSetExtClockSyncCommand",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTSetExtClockSyncCommand(uint8 ControllerId);"
         },
         "60" : {
            "name" : "CanIf_TTSetNTUAdjust",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTSetNTUAdjust(uint8 ControllerId,float32 CanIf_TTNTUAdjust);"
         },
         "71" : {
            "name" : "CanIf_TTGetSyncQuality",
            "param" : 3,
            "proto" : "Std_ReturnType CanIf_TTGetSyncQuality(uint8 ControllerId,boolean* CanIf_TTClockSpeed,boolean* CanIf_TTGlobalTimePhase);"
         },
         "72" : {
            "name" : "CanIf_TTSetTimeMark",
            "param" : 3,
            "proto" : "Std_ReturnType CanIf_TTSetTimeMark(uint8 ControllerId,CanIf_TTTimeType CanIf_TTTimeMark,CanIf_TTTimeSourceType CanIf_TTTimeSource);"
         },
         "73" : {
            "name" : "CanIf_TTCancelTimeMark",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTCancelTimeMark(uint8 ControllerId);"
         },
         "74" : {
            "name" : "CanIf_TTAckTimeMark",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTAckTimeMark(uint8 ControllerId);"
         },
         "75" : {
            "name" : "CanIf_TTEnableTimeMarkIRQ",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTEnableTimeMarkIRQ(uint8 ControllerId);"
         },
         "76" : {
            "name" : "CanIf_TTDisableTimeMarkIRQ",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTDisableTimeMarkIRQ(uint8 ControllerId);"
         },
         "77" : {
            "name" : "CanIf_TTGetTimeMarkIRQStatus",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTGetTimeMarkIRQStatus(uint8 ControllerId,boolean* CanIf_TTIRQStatus);"
         },
         "80" : {
            "name" : "CanIf_TTJobListExec__Controller_",
            "param" : 0,
            "proto" : "void CanIf_TTJobListExec__Controller_();"
         },
         "91" : {
            "name" : "CanIf_TTApplWatchdogError",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTApplWatchdogError(uint8 ControllerId);"
         },
         "92" : {
            "name" : "CanIf_TTTimingError",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTTimingError(uint8 ControllerId,CanIf_TTTimingErrorIRQType CanIf_TTTimingErrorIRQ);"
         },
         "93" : {
            "name" : "CanIf_TTGap",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTGap(uint8 ControllerId);"
         },
         "94" : {
            "name" : "CanIf_TTStartOfCycle",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTStartOfCycle(uint8 ControllerId,uint8 CanIf_TTCycleCount);"
         },
         "95" : {
            "name" : "CanIf_TTTimeDisc",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_TTTimeDisc(uint8 ControllerId);"
         },
         "96" : {
            "name" : "CanIf_TTMasterStateChange",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TTMasterStateChange(uint8 ControllerId,CanIf_TTMasterStateType CanIf_TTMasterState);"
         },
         "97" : {
            "name" : "CanIf_TTSevereError",
            "param" : 2,
            "proto" : "void CanIf_TTSevereError(uint8 ControllerId,CanIf_TTSevereErrorEnumType CanIf_TTSevereError);"
         }
      }
   },
   "070" : {
      "abbreviation" : "CanTrcv",
      "services" : {
         "0" : {
            "name" : "CanTrcv_Init",
            "param" : 1,
            "proto" : "void CanTrcv_Init(const CanTrcv_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "CanTrcv_ClearTrcvWufFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_ClearTrcvWufFlag(uint8 Transceiver);"
         },
         "11" : {
            "name" : "CanTrcv_ReadTrcvTimeoutFlag",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_ReadTrcvTimeoutFlag(uint8 Transceiver,CanTrcv_TrcvFlagStateType* FlagState);"
         },
         "12" : {
            "name" : "CanTrcv_ClearTrcvTimeoutFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_ClearTrcvTimeoutFlag(uint8 Transceiver);"
         },
         "13" : {
            "name" : "CanTrcv_ReadTrcvSilenceFlag",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_ReadTrcvSilenceFlag(uint8 Transceiver,CanTrcv_TrcvFlagStateType* FlagState);"
         },
         "14" : {
            "name" : "CanTrcv_CheckWakeFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_CheckWakeFlag(uint8 Transceiver);"
         },
         "16" : {
            "name" : "CanTrcv_DeInit",
            "param" : 0,
            "proto" : "void CanTrcv_DeInit();"
         },
         "2" : {
            "name" : "CanTrcv_GetOpMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetOpMode(uint8 Transceiver,CanTrcv_TrcvModeType* OpMode);"
         },
         "3" : {
            "name" : "CanTrcv_GetBusWuReason",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetBusWuReason(uint8 Transceiver,CanTrcv_TrcvWakeupReasonType* reason);"
         },
         "4" : {
            "name" : "CanTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "7" : {
            "name" : "CanTrcv_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType CanTrcv_CheckWakeup(uint8 Transceiver);"
         },
         "8" : {
            "name" : "CanTrcv_MainFunctionDiagnostics",
            "param" : 0,
            "proto" : "void CanTrcv_MainFunctionDiagnostics();"
         },
         "9" : {
            "name" : "CanTrcv_GetTrcvSystemData",
            "param" : 2,
            "proto" : "Std_ReturnType CanTrcv_GetTrcvSystemData(uint8 Transceiver,uint32* TrcvSysData);"
         }
      }
   },
   "071" : {
      "abbreviation" : "FrTrcv",
      "services" : {
         "1" : {
            "name" : "FrTrcv_SetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_SetTransceiverMode(uint8 FrTrcv_TrcvIdx,FrTrcv_TrcvModeType FrTrcv_TrcvMode);"
         },
         "12" : {
            "name" : "FrTrcv_ClearTransceiverWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType FrTrcv_ClearTransceiverWakeup(uint8 FrTrcv_TrcvIdx);"
         },
         "13" : {
            "name" : "FrTrcv_MainFunction",
            "param" : 0,
            "proto" : "void FrTrcv_MainFunction();"
         },
         "14" : {
            "name" : "FrTrcv_CheckWakeupByTransceiver",
            "param" : 1,
            "proto" : "void FrTrcv_CheckWakeupByTransceiver(uint8 FrTrcv_TrcvIdx);"
         },
         "15" : {
            "name" : "FrTrcv_DisableTransceiverBranch",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_DisableTransceiverBranch(uint8 FrTrcv_TrcvIdx,uint8 FrTrcv_BranchIdx);"
         },
         "16" : {
            "name" : "FrTrcv_EnableTransceiverBranch",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_EnableTransceiverBranch(uint8 FrTrcv_TrcvIdx,uint8 FrTrcv_BranchIdx);"
         },
         "5" : {
            "name" : "FrTrcv_GetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrTrcv_GetTransceiverMode(uint8 FrTrcv_TrcvIdx,FrTrcv_TrcvModeType* FrTrcv_TrcvModePtr);"
         },
         "7" : {
            "name" : "FrTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrTrcv_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "073" : {
      "abbreviation" : "EthTrcv",
      "services" : {
         "1" : {
            "name" : "EthTrcv_Init",
            "param" : 1,
            "proto" : "void EthTrcv_Init(const EthTrcv_ConfigType* CfgPtr);"
         },
         "10" : {
            "name" : "EthTrcv_WriteMiiIndication",
            "param" : 3,
            "proto" : "void EthTrcv_WriteMiiIndication(uint8 CtrlIdx,uint8 TrcvIdx,uint8 RegIdx);"
         },
         "13" : {
            "name" : "EthTrcv_SetTransceiverWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_SetTransceiverWakeupMode(uint8 TrcvIdx,EthTrcv_WakeupModeType TrcvWakeupMode);"
         },
         "14" : {
            "name" : "EthTrcv_GetTransceiverWakeupMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetTransceiverWakeupMode(uint8 TrcvIdx,EthTrcv_WakeupModeType* TrcvWakeupModePtr);"
         },
         "15" : {
            "name" : "EthTrcv_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType EthTrcv_CheckWakeup(uint8 TrcvIdx);"
         },
         "16" : {
            "name" : "EthTrcv_GetPhySignalQuality",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetPhySignalQuality(uint8 TrcvIdx,uint32* SignalQualityPtr);"
         },
         "17" : {
            "name" : "EthTrcv_SetPhyTestMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_SetPhyTestMode(uint8 TrcvIdx,EthTrcv_PhyTestModeType Mode);"
         },
         "18" : {
            "name" : "EthTrcv_SetPhyLoopbackMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_SetPhyLoopbackMode(uint8 TrcvIdx,EthTrcv_PhyLoopbackModeType Mode);"
         },
         "19" : {
            "name" : "EthTrcv_SetPhyTxMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_SetPhyTxMode(uint8 TrcvIdx,EthTrcv_PhyTxModeType Mode);"
         },
         "2" : {
            "name" : "EthTrcv_TransceiverLinkStateRequest",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_TransceiverLinkStateRequest(uint8 TrcvIdx,EthTrcv_LinkStateType LinkState);"
         },
         "20" : {
            "name" : "EthTrcv_GetCableDiagnosticsResult",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetCableDiagnosticsResult(uint8 TrcvIdx,EthTrcv_CableDiagResultType* ResultPtr);"
         },
         "22" : {
            "name" : "EthTrcv_RunCableDiagnostic",
            "param" : 1,
            "proto" : "Std_ReturnType EthTrcv_RunCableDiagnostic(uint8 TrcvIdx);"
         },
         "23" : {
            "name" : "EthTrcv_EthTrcv_GetBusWuReason",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_EthTrcv_GetBusWuReason(uint8 TrcvIdx,EthTrcv_WakeupReasonType* WakeupReasonPtr);"
         },
         "24" : {
            "name" : "EthTrcv_GetMacMethod",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetMacMethod(uint8* TrcvIdx,EthTrcv_MacMethodType* MacModePtr);"
         },
         "4" : {
            "name" : "EthTrcv_GetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetTransceiverMode(uint8 TrcvIdx,Eth_ModeType* TrcvModePtr);"
         },
         "5" : {
            "name" : "EthTrcv_StartAutoNegotiation",
            "param" : 1,
            "proto" : "Std_ReturnType EthTrcv_StartAutoNegotiation(uint8 TrcvIdx);"
         },
         "6" : {
            "name" : "EthTrcv_GetLinkState",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetLinkState(uint8 TrcvIdx,EthTrcv_LinkStateType* LinkStatePtr);"
         },
         "8" : {
            "name" : "EthTrcv_GetDuplexMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthTrcv_GetDuplexMode(uint8 TrcvIdx,EthTrcv_DuplexModeType* DuplexModePtr);"
         }
      }
   },
   "074" : {
      "abbreviation" : "WEthTrcv",
      "services" : {
         "1" : {
            "name" : "WEthTrcv_Init",
            "param" : 1,
            "proto" : "void WEthTrcv_Init(const WEthTrcv_ConfigType* CfgPtr);"
         },
         "11" : {
            "name" : "WEthTrcv_GetVersionInfo",
            "param" : 1,
            "proto" : "void WEthTrcv_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "12" : {
            "name" : "WEthTrcv_MainFunction",
            "param" : 0,
            "proto" : "void WEthTrcv_MainFunction();"
         },
         "3" : {
            "name" : "WEthTrcv_SetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType WEthTrcv_SetTransceiverMode(uint8 TrcvId,Eth_ModeType TrcvMode);"
         },
         "4" : {
            "name" : "WEthTrcv_GetTransceiverMode",
            "param" : 2,
            "proto" : "Std_ReturnType WEthTrcv_GetTransceiverMode(uint8 TrcvId,Eth_ModeType* TrcvModePtr);"
         },
         "48" : {
            "name" : "WEthTrcv_SetRadioParams",
            "param" : 4,
            "proto" : "Std_ReturnType WEthTrcv_SetRadioParams(uint8 TrcvId,const WEthTrcv_SetRadioParamIdType* ParamIds,const uint32* ParamValue,uint8 NumParams);"
         },
         "49" : {
            "name" : "WEthTrcv_SetChanRxParams",
            "param" : 5,
            "proto" : "Std_ReturnType WEthTrcv_SetChanRxParams(uint8 TrcvId,uint8 RadioId,const WEthTrcv_SetChanRxParamIdType* ParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "50" : {
            "name" : "WEthTrcv_SetChanTxParams",
            "param" : 5,
            "proto" : "Std_ReturnType WEthTrcv_SetChanTxParams(uint8 TrcvId,uint8 RadioId,const WEthTrcv_SetChanTxParamIdType* TxParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "51" : {
            "name" : "WEthTrcv_GetChanRxParams",
            "param" : 5,
            "proto" : "Std_ReturnType WEthTrcv_GetChanRxParams(uint8* TrcvId,uint8 RadioId,const WEthTrcv_GetChanRxParamIdType* ParamIds,uint32* ParamValues,uint8 NumParams);"
         },
         "6" : {
            "name" : "WEthTrcv_GetLinkState",
            "param" : 2,
            "proto" : "Std_ReturnType WEthTrcv_GetLinkState(uint8 TrcvId,EthTrcv_LinkStateType* LinkStatePtr);"
         }
      }
   },
   "080" : {
      "abbreviation" : "Can",
      "services" : {
         "0" : {
            "name" : "Can_Init",
            "param" : 1,
            "proto" : "void Can_Init(const Can_ConfigType* Config);"
         },
         "1" : {
            "name" : "Can_MainFunction_Write",
            "param" : 0,
            "proto" : "void Can_MainFunction_Write();"
         },
         "10" : {
            "name" : "Can_MainFunction_Wakeup",
            "param" : 0,
            "proto" : "void Can_MainFunction_Wakeup();"
         },
         "15" : {
            "name" : "Can_SetBaudrate",
            "param" : 2,
            "proto" : "Std_ReturnType Can_SetBaudrate(uint8 Controller,uint16 BaudRateConfigID);"
         },
         "16" : {
            "name" : "Can_DeInit",
            "param" : 0,
            "proto" : "void Can_DeInit();"
         },
         "3" : {
            "name" : "Can_SetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType Can_SetControllerMode(uint8 Controller,Can_ControllerStateType Transition);"
         },
         "32" : {
            "name" : "_LPDU_CalloutName_",
            "param" : 4,
            "proto" : "boolean _LPDU_CalloutName_(uint8 Hrh,Can_IdType CanId,uint8 CanDataLegth,const uint8* CanSduPtr);"
         },
         "4" : {
            "name" : "Can_DisableControllerInterrupts",
            "param" : 1,
            "proto" : "void Can_DisableControllerInterrupts(uint8 Controller);"
         },
         "6" : {
            "name" : "Can_Write",
            "param" : 2,
            "proto" : "Std_ReturnType Can_Write(Can_HwHandleType Hth,const Can_PduType* PduInfo);"
         },
         "7" : {
            "name" : "Can_GetVersionInfo",
            "param" : 1,
            "proto" : "void Can_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "8" : {
            "name" : "Can_MainFunction_Read",
            "param" : 0,
            "proto" : "void Can_MainFunction_Read();"
         },
         "9" : {
            "name" : "Can_MainFunction_BusOff",
            "param" : 0,
            "proto" : "void Can_MainFunction_BusOff();"
         }
      }
   },
   "081" : {
      "abbreviation" : "Fr",
      "services" : {
         "0" : {
            "name" : "Fr_ControllerInit",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_ControllerInit(uint8 Fr_CtrlIdx);"
         },
         "10" : {
            "name" : "Fr_GetPOCStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_GetPOCStatus(uint8 Fr_CtrlIdx,Fr_POCStatusType* Fr_POCStatusPtr);"
         },
         "16" : {
            "name" : "Fr_GetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetGlobalTime(uint8 Fr_CtrlIdx,uint8* Fr_CyclePtr,uint16* Fr_MacroTickPtr);"
         },
         "17" : {
            "name" : "Fr_SetAbsoluteTimer",
            "param" : 4,
            "proto" : "Std_ReturnType Fr_SetAbsoluteTimer(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx,uint8 Fr_Cycle,uint16 Fr_Offset);"
         },
         "19" : {
            "name" : "Fr_CancelAbsoluteTimer",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_CancelAbsoluteTimer(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "21" : {
            "name" : "Fr_EnableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_EnableAbsoluteTimerIRQ(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "25" : {
            "name" : "Fr_DisableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_DisableAbsoluteTimerIRQ(uint8 Fr_CtrlIdx,uint8 Fr_AbsTimerIdx);"
         },
         "27" : {
            "name" : "Fr_GetVersionInfo",
            "param" : 1,
            "proto" : "void Fr_GetVersionInfo(Std_VersionInfoType* VersioninfoPtr);"
         },
         "3" : {
            "name" : "Fr_StartCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_StartCommunication(uint8 Fr_CtrlIdx);"
         },
         "31" : {
            "name" : "Fr_PrepareLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_PrepareLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "36" : {
            "name" : "Fr_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_AllSlots(uint8 Fr_CtrlIdx);"
         },
         "37" : {
            "name" : "Fr_ReconfigLPdu",
            "param" : 8,
            "proto" : "Std_ReturnType Fr_ReconfigLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx,uint16 Fr_FrameId,Fr_ChannelType Fr_ChnlIdx,uint8 Fr_CycleRepetition,uint8 Fr_CycleOffset,uint8 Fr_PayloadLength,uint16 Fr_HeaderCRC);"
         },
         "38" : {
            "name" : "Fr_DisableLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_DisableLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "4" : {
            "name" : "Fr_HaltCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_HaltCommunication(uint8 Fr_CtrlIdx);"
         },
         "40" : {
            "name" : "Fr_GetChannelStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetChannelStatus(uint8 Fr_CtrlIdx,uint16* Fr_ChannelAStatusPtr,uint16* Fr_ChannelBStatusPtr);"
         },
         "41" : {
            "name" : "Fr_GetClockCorrection",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_GetClockCorrection(uint8 Fr_CtrlIdx,sint16* Fr_RateCorrectionPtr,sint32* Fr_OffsetCorrectionPtr);"
         },
         "45" : {
            "name" : "Fr_CancelTxLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_CancelTxLPdu(uint8 Fr_CtrlIdx,uint16 Fr_LPduIdx);"
         },
         "46" : {
            "name" : "Fr_ReadCCConfig",
            "param" : 3,
            "proto" : "Std_ReturnType Fr_ReadCCConfig(uint8 Fr_CtrlIdx,uint8 Fr_ConfigParamIdx,uint32* Fr_ConfigParamValuePtr);"
         },
         "5" : {
            "name" : "Fr_AbortCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_AbortCommunication(uint8 Fr_CtrlIdx);"
         },
         "6" : {
            "name" : "Fr_SendWUP",
            "param" : 1,
            "proto" : "Std_ReturnType Fr_SendWUP(uint8 Fr_CtrlIdx);"
         },
         "7" : {
            "name" : "Fr_SetWakeupChannel",
            "param" : 2,
            "proto" : "Std_ReturnType Fr_SetWakeupChannel(uint8 Fr_CtrlIdx,Fr_ChannelType Fr_ChnlIdx);"
         }
      }
   },
   "082" : {
      "abbreviation" : "Lin",
      "services" : {
         "0" : {
            "name" : "Lin_Init",
            "param" : 1,
            "proto" : "void Lin_Init(const Lin_ConfigType* Config);"
         },
         "1" : {
            "name" : "Lin_GetVersionInfo",
            "param" : 1,
            "proto" : "void Lin_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "11" : {
            "name" : "Lin_WakeupInternal",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_WakeupInternal(uint8 Channel);"
         },
         "4" : {
            "name" : "Lin_SendFrame",
            "param" : 2,
            "proto" : "Std_ReturnType Lin_SendFrame(uint8 Channel,const Lin_PduType* PduInfoPtr);"
         },
         "6" : {
            "name" : "Lin_GoToSleep",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_GoToSleep(uint8 Channel);"
         },
         "7" : {
            "name" : "Lin_Wakeup",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_Wakeup(uint8 Channel);"
         },
         "8" : {
            "name" : "Lin_GetStatus",
            "param" : 2,
            "proto" : "Lin_StatusType Lin_GetStatus(uint8 Channel,const uint8** Lin_SduPtr);"
         },
         "9" : {
            "name" : "Lin_GoToSleepInternal",
            "param" : 1,
            "proto" : "Std_ReturnType Lin_GoToSleepInternal(uint8 Channel);"
         }
      }
   },
   "083" : {
      "abbreviation" : "Spi",
      "services" : {
         "0" : {
            "name" : "Spi_Init",
            "param" : 1,
            "proto" : "void Spi_Init(const Spi_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Spi_DeInit",
            "param" : 0,
            "proto" : "Std_ReturnType Spi_DeInit();"
         },
         "10" : {
            "name" : "Spi_SyncTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_SyncTransmit(Spi_SequenceType Sequence);"
         },
         "11" : {
            "name" : "Spi_GetHWUnitStatus",
            "param" : 1,
            "proto" : "Spi_StatusType Spi_GetHWUnitStatus(Spi_HWUnitType HWUnit);"
         },
         "12" : {
            "name" : "Spi_Cancel",
            "param" : 1,
            "proto" : "void Spi_Cancel(Spi_SequenceType Sequence);"
         },
         "13" : {
            "name" : "Spi_SetAsyncMode",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_SetAsyncMode(Spi_AsyncModeType Mode);"
         },
         "16" : {
            "name" : "Spi_MainFunction_Handling",
            "param" : 0,
            "proto" : "void Spi_MainFunction_Handling();"
         },
         "2" : {
            "name" : "Spi_WriteIB",
            "param" : 2,
            "proto" : "Std_ReturnType Spi_WriteIB(Spi_ChannelType Channel,const Spi_DataBufferType* DataBufferPtr);"
         },
         "3" : {
            "name" : "Spi_AsyncTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType Spi_AsyncTransmit(Spi_SequenceType Sequence);"
         },
         "4" : {
            "name" : "Spi_ReadIB",
            "param" : 2,
            "proto" : "Std_ReturnType Spi_ReadIB(Spi_ChannelType Channel,Spi_DataBufferType* DataBufferPointer);"
         },
         "5" : {
            "name" : "Spi_SetupEB",
            "param" : 4,
            "proto" : "Std_ReturnType Spi_SetupEB(Spi_ChannelType Channel,const Spi_DataBufferType* SrcDataBufferPtr,Spi_DataBufferType* DesDataBufferPtr,Spi_NumberOfDataType Length);"
         },
         "6" : {
            "name" : "Spi_GetStatus",
            "param" : 0,
            "proto" : "Spi_StatusType Spi_GetStatus();"
         },
         "9" : {
            "name" : "Spi_GetVersionInfo",
            "param" : 1,
            "proto" : "void Spi_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "084" : {
      "abbreviation" : "Ttcan",
      "services" : {
         "0" : {
            "name" : "Can_TTReceive",
            "param" : 5,
            "proto" : "void Can_TTReceive(uint8 Controller,uint8 Hrh,Can_IdType* CanId,uint8* CanDlc,uint8* CanSduPtr);"
         },
         "52" : {
            "name" : "Can_TTGetMasterState",
            "param" : 2,
            "proto" : "void Can_TTGetMasterState(uint8 Controller,Can_TTMasterStateType* Can_TTMasterState);"
         },
         "53" : {
            "name" : "Can_TTGetNTUActual",
            "param" : 2,
            "proto" : "void Can_TTGetNTUActual(uint8 Controller,Can_TTTURType* Can_TTTURAct);"
         },
         "54" : {
            "name" : "Can_TTGetErrorLevel",
            "param" : 2,
            "proto" : "void Can_TTGetErrorLevel(uint8 Controller,Can_TTErrorLevelType* Can_TTErrorLevel);"
         },
         "55" : {
            "name" : "Can_TTSetNextIsGap",
            "param" : 1,
            "proto" : "void Can_TTSetNextIsGap(uint8 Controller);"
         },
         "56" : {
            "name" : "Can_TTSetEndOfGap",
            "param" : 1,
            "proto" : "void Can_TTSetEndOfGap(uint8 Controller);"
         },
         "57" : {
            "name" : "Can_TTSetTimeCommand",
            "param" : 1,
            "proto" : "void Can_TTSetTimeCommand(uint8 Controller);"
         },
         "58" : {
            "name" : "Can_TTGlobalTimePreset",
            "param" : 2,
            "proto" : "void Can_TTGlobalTimePreset(uint8 Controller,Can_TTTimeType Can_TTGlobalTimePreset);"
         },
         "59" : {
            "name" : "Can_TTSetExtClockSyncCommand",
            "param" : 1,
            "proto" : "void Can_TTSetExtClockSyncCommand(uint8 Controller);"
         },
         "60" : {
            "name" : "Can_TTSetNTUAdjust",
            "param" : 2,
            "proto" : "void Can_TTSetNTUAdjust(uint8 Controller,Can_TTTURType Can_TTTURAdjust);"
         },
         "71" : {
            "name" : "Can_TTGetSyncQuality",
            "param" : 3,
            "proto" : "void Can_TTGetSyncQuality(uint8 Controller,boolean* Can_TTClockSpeed,boolean* Can_TTGlobalTimePhase);"
         },
         "72" : {
            "name" : "Can_TTSetTimeMark",
            "param" : 3,
            "proto" : "void Can_TTSetTimeMark(uint8 Controller,Can_TTTimeType Can_TTTimeMark,Can_TTTimeSourceType Can_TTTimeSource);"
         },
         "73" : {
            "name" : "Can_TTCancelTimeMark",
            "param" : 1,
            "proto" : "void Can_TTCancelTimeMark(uint8 Controller);"
         },
         "74" : {
            "name" : "Can_TTAckTimeMark",
            "param" : 1,
            "proto" : "void Can_TTAckTimeMark(uint8 Controller);"
         },
         "75" : {
            "name" : "Can_TTEnableTimeMarkIRQ",
            "param" : 1,
            "proto" : "void Can_TTEnableTimeMarkIRQ(uint8 Controller);"
         },
         "76" : {
            "name" : "Can_TTDisableTimeMarkIRQ",
            "param" : 1,
            "proto" : "void Can_TTDisableTimeMarkIRQ(uint8 Controller);"
         },
         "77" : {
            "name" : "Can_TTGetTimeMarkIRQStatus",
            "param" : 2,
            "proto" : "void Can_TTGetTimeMarkIRQStatus(uint8 Controller,boolean* Can_TTIRQStatus);"
         },
         "80" : {
            "name" : "Can_TTMainFunction_IRQ",
            "param" : 0,
            "proto" : "void Can_TTMainFunction_IRQ();"
         }
      }
   },
   "087" : {
      "abbreviation" : "WEth",
      "services" : {
         "1" : {
            "name" : "WEth_Init",
            "param" : 1,
            "proto" : "void WEth_Init(const WEth_ConfigType* CfgPtr);"
         },
         "13" : {
            "name" : "WEth_GetVersionInfo",
            "param" : 1,
            "proto" : "void WEth_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "18" : {
            "name" : "WEth_UpdatePhysAddrFilter",
            "param" : 4,
            "proto" : "Std_ReturnType WEth_UpdatePhysAddrFilter(uint8 CtrlId,const uint8* PhysAddrPtr,const uint8* PhysMaskPtr,Eth_FilterActionType Action);"
         },
         "19" : {
            "name" : "WEth_SetPhysAddr",
            "param" : 2,
            "proto" : "void WEth_SetPhysAddr(uint8 CtrlId,const uint8* PhysAddrPtr);"
         },
         "2" : {
            "name" : "WEth_TxConfirmation",
            "param" : 1,
            "proto" : "void WEth_TxConfirmation(uint8 CtrlId);"
         },
         "20" : {
            "name" : "WEth_Transmit",
            "param" : 6,
            "proto" : "Std_ReturnType WEth_Transmit(uint8 CtrlId,Eth_BufIdxType BufId,Eth_FrameType FrameType,boolean TxConfirmation,uint16 LenByte,const uint8* PhysAddrPtr);"
         },
         "49" : {
            "name" : "WEth_ReadTrcvRegs",
            "param" : 6,
            "proto" : "Std_ReturnType WEth_ReadTrcvRegs(uint8 CtrlId,uint8 TrcvId,uint8 RadioId,const uint32* RegIds,uint32* RegValsPtr,uint8 NumRegs);"
         },
         "52" : {
            "name" : "WEth_GetBufWRxParams",
            "param" : 4,
            "proto" : "Std_ReturnType WEth_GetBufWRxParams(uint8 CtrlId,const WEth_BufWRxParamIdType* RxParamIds,uint32* ParamValues,uint8 NumParams);"
         },
         "53" : {
            "name" : "WEth_GetBufWTxParams",
            "param" : 4,
            "proto" : "Std_ReturnType WEth_GetBufWTxParams(uint8 CtrlId,const WEth_BufWTxParamIdType* TxParamIds,uint32* ParamValues,uint8 NumParams);"
         },
         "54" : {
            "name" : "WEth_SetBufWTxParams",
            "param" : 5,
            "proto" : "Std_ReturnType WEth_SetBufWTxParams(uint8 CtrlId,Eth_BufIdxType BufId,const WEth_BufWTxParamIdType* TxParamIds,const uint32* ParamValues,uint8 NumParams);"
         },
         "55" : {
            "name" : "WEth_TriggerPriorityQueueTransmit",
            "param" : 3,
            "proto" : "Std_ReturnType WEth_TriggerPriorityQueueTransmit(uint8 CtrlId,uint8 PriorityQueue,uint8 MaxTxPower);"
         },
         "8" : {
            "name" : "WEth_GetPhysAddr",
            "param" : 2,
            "proto" : "void WEth_GetPhysAddr(uint8 CtrlId,uint8* PhysAddrPtr);"
         }
      }
   },
   "088" : {
      "abbreviation" : "Eth",
      "services" : {
         "10" : {
            "name" : "Eth_Transmit",
            "param" : 6,
            "proto" : "Std_ReturnType Eth_Transmit(uint8 CtrlIdx,Eth_BufIdxType BufIdx,Eth_FrameType  FrameType ,boolean TxConfirmation,uint16 LenByte,const uint8* PhysAddrPtr);"
         },
         "11" : {
            "name" : "Eth_Receive",
            "param" : 3,
            "proto" : "void Eth_Receive(uint8 CtrlIdx,uint8 FifoIdx,Eth_RxStatusType* RxStatusPtr);"
         },
         "13" : {
            "name" : "Eth_GetVersionInfo",
            "param" : 1,
            "proto" : "void Eth_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "18" : {
            "name" : "Eth_UpdatePhysAddrFilter",
            "param" : 3,
            "proto" : "Std_ReturnType Eth_UpdatePhysAddrFilter(uint8 CtrlIdx,const uint8* PhysAddrPtr,Eth_FilterActionType Action);"
         },
         "19" : {
            "name" : "Eth_SetPhysAddr",
            "param" : 2,
            "proto" : "void Eth_SetPhysAddr(uint8 CtrlIdx,const uint8* PhysAddrPtr);"
         },
         "20" : {
            "name" : "Eth_GetCounterValues",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_GetCounterValues(uint8 CtrlIdx,Eth_CounterType* CounterPtr);"
         },
         "22" : {
            "name" : "Eth_GetCurrentTime",
            "param" : 3,
            "proto" : "Std_ReturnType Eth_GetCurrentTime(uint8 CtrlIdx,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "24" : {
            "name" : "Eth_GetEgressTimeStamp",
            "param" : 4,
            "proto" : "Std_ReturnType Eth_GetEgressTimeStamp(uint8 CtrlIdx,Eth_BufIdxType BufIdx,Eth_TimeStampQualType* timeQualPtr,Eth_TimeStampType* timeStampPtr);"
         },
         "28" : {
            "name" : "Eth_GetTxStats",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_GetTxStats(uint8 CtrlIdx,Eth_TxStatsType* TxStats);"
         },
         "3" : {
            "name" : "Eth_SetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_SetControllerMode(uint8 CtrlIdx,Eth_ModeType CtrlMode);"
         },
         "4" : {
            "name" : "Eth_GetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType Eth_GetControllerMode(uint8 CtrlIdx,Eth_ModeType* CtrlModePtr);"
         },
         "5" : {
            "name" : "Eth_WriteMii",
            "param" : 4,
            "proto" : "Std_ReturnType Eth_WriteMii(uint8 CtrlIdx,uint8 TrcvIdx,uint8 RegIdx,uint16 RegVal);"
         },
         "6" : {
            "name" : "Eth_ReadMii",
            "param" : 4,
            "proto" : "Std_ReturnType Eth_ReadMii(uint8 CtrlIdx,uint8 TrcvIdx,uint8 RegIdx,uint16* RegValPtr);"
         },
         "8" : {
            "name" : "Eth_GetPhysAddr",
            "param" : 2,
            "proto" : "void Eth_GetPhysAddr(uint8 CtrlIdx,uint8* PhysAddrPtr);"
         },
         "9" : {
            "name" : "Eth_ProvideTxBuffer",
            "param" : 5,
            "proto" : "BufReq_ReturnType Eth_ProvideTxBuffer(uint8 CtrlIdx,uint8 Priority,Eth_BufIdxType* BufIdxPtr,uint8** BufPtr,uint16* LenBytePtr);"
         }
      }
   },
   "089" : {
      "abbreviation" : "EthSwt",
      "services" : {
         "1" : {
            "name" : "EthSwt_Init",
            "param" : 1,
            "proto" : "void EthSwt_Init(const EthSwt_ConfigType* CfgPtr);"
         },
         "10" : {
            "name" : "EthSwt_GetArlTable",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetArlTable(uint8 switchIdx,uint16* numberOfElements,Eth_MacVlanType* arlTableListPointer);"
         },
         "12" : {
            "name" : "EthSwt_GetCounterValues",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetCounterValues(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_CounterType* CounterPtr);"
         },
         "13" : {
            "name" : "EthSwt_GetRxStats",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetRxStats(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_RxStatsType* RxStats);"
         },
         "14" : {
            "name" : "EthSwt_GetSwitchReg",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_GetSwitchReg(uint8 SwitchIdx,uint32 page,uint32 register,uint32* registerContent);"
         },
         "15" : {
            "name" : "EthSwt_SetSwitchReg",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_SetSwitchReg(uint8 SwitchIdx,uint32 page,uint32 register,uint32 registerContent);"
         },
         "16" : {
            "name" : "EthSwt_ReadTrcvRegister",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_ReadTrcvRegister(uint8 SwitchIdx,uint8 SwitchPortIdx,uint8 RegIdx,uint16* RegValPtr);"
         },
         "17" : {
            "name" : "EthSwt_WriteTrcvRegister",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_WriteTrcvRegister(uint8 SwitchIdx,uint8 SwitchPortIdx,uint8 RegIdx,uint16 RegVal);"
         },
         "18" : {
            "name" : "EthSwt_EnableVlan",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_EnableVlan(uint8 SwitchIdx,uint8 SwitchPortIdx,uint16 VlanId,boolean Enable);"
         },
         "19" : {
            "name" : "EthSwt_StoreConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_StoreConfiguration(uint8 SwitchIdx);"
         },
         "20" : {
            "name" : "EthSwt_ResetConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_ResetConfiguration(uint8 SwitchIdx);"
         },
         "21" : {
            "name" : "EthSwt_SetMacLearningMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetMacLearningMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthSwt_MacLearningType MacLearningMode);"
         },
         "22" : {
            "name" : "EthSwt_GetMacLearningMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetMacLearningMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthSwt_MacLearningType* MacLearningMode);"
         },
         "23" : {
            "name" : "EthSwt_NvmSingleBlockCallback",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_NvmSingleBlockCallback(NvM_BlockRequestType BlockRequest,NvM_RequestResultType JobResult);"
         },
         "24" : {
            "name" : "EthSwt_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthSwt_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "25" : {
            "name" : "_EthSwtLinkDownCallout_",
            "param" : 2,
            "proto" : "void _EthSwtLinkDownCallout_(uint8 SwitchIdx,uint8 PortIdx);"
         },
         "26" : {
            "name" : "_EthSwtLinkUpCallout_",
            "param" : 2,
            "proto" : "void _EthSwtLinkUpCallout_(uint8 SwitchIdx,uint8 PortIdx);"
         },
         "27" : {
            "name" : "_EthSwtPersistentConfigurationResultCallback_",
            "param" : 1,
            "proto" : "void _EthSwtPersistentConfigurationResultCallback_(NvM_RequestResultType JobResult);"
         },
         "28" : {
            "name" : "EthSwt_MainFunction",
            "param" : 0,
            "proto" : "void EthSwt_MainFunction();"
         },
         "3" : {
            "name" : "EthSwt_SetSwitchPortMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetSwitchPortMode(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_ModeType PortMode);"
         },
         "32" : {
            "name" : "EthSwt_GetTxStats",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetTxStats(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_TxStatsType* TxStats);"
         },
         "33" : {
            "name" : "EthSwt_GetTxErrorCounterValues",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetTxErrorCounterValues(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_TxErrorCounterValuesType* TxStats);"
         },
         "35" : {
            "name" : "EthSwt_EthRxProcessFrame",
            "param" : 5,
            "proto" : "Std_ReturnType EthSwt_EthRxProcessFrame(uint8 CtrlIdx,Eth_BufIdxType BufIdx,uint8** DataPtr,uint16* LengthPtr,boolean* IsMgmtFrameOnlyPtr);"
         },
         "36" : {
            "name" : "EthSwt_EthRxFinishedIndication",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_EthRxFinishedIndication(uint8 CtrlIdx,Eth_BufIdxType BufIdx);"
         },
         "37" : {
            "name" : "EthSwt_EthTxPrepareFrame",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_EthTxPrepareFrame(uint8 CtrlIdx,Eth_BufIdxType BufIdx,uint8** DataPtr,uint16* LengthPtr);"
         },
         "38" : {
            "name" : "EthSwt_EthTxAdaptBufferLength",
            "param" : 1,
            "proto" : "void EthSwt_EthTxAdaptBufferLength(uint16* LengthPtr);"
         },
         "39" : {
            "name" : "EthSwt_SetMgmtInfo",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetMgmtInfo(uint8 CtrlIdx,Eth_BufIdxType BufIdx,const EthSwt_MgmtInfoType* MgmtInfoPtr);"
         },
         "4" : {
            "name" : "EthSwt_GetSwitchPortMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetSwitchPortMode(uint8 SwitchIdx,uint8 SwitchPortIdx,Eth_ModeType* SwitchModePtr);"
         },
         "40" : {
            "name" : "EthSwt_EthTxProcessFrame",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_EthTxProcessFrame(uint8 CtrlIdx,Eth_BufIdxType BufIdx,uint8** DataPtr,uint16* LengthPtr);"
         },
         "41" : {
            "name" : "EthSwt_EthTxFinishedIndication",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_EthTxFinishedIndication(uint8 CtrlIdx,Eth_BufIdxType BufIdx);"
         },
         "49" : {
            "name" : "EthSwt_VerifyConfig",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_VerifyConfig(uint8 SwitchIdx,boolean* Result);"
         },
         "5" : {
            "name" : "EthSwt_StartSwitchPortAutoNegotiation",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_StartSwitchPortAutoNegotiation(uint8 SwitchIdx,uint8 SwitchPortIdx);"
         },
         "50" : {
            "name" : "EthSwt_SetForwardingMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_SetForwardingMode(uint8 SwitchIdx,boolean mode);"
         },
         "51" : {
            "name" : "EthSwt_GetPortSignalQuality",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetPortSignalQuality(uint8 SwitchIdx,uint8 PortIdx,uint32* SignalQualityPtr);"
         },
         "52" : {
            "name" : "EthSwt_GetPortIdentifier",
            "param" : 5,
            "proto" : "Std_ReturnType EthSwt_GetPortIdentifier(uint8 SwitchIdx,uint8 PortIdx,uint32* OrgUniqueIdPtr,uint8* ModelNrPtr,uint8* RevisionNrPtr);"
         },
         "53" : {
            "name" : "EthSwt_GetSwitchIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_GetSwitchIdentifier(uint8 SwitchIdx,uint32* OrgUniqueIdPtr);"
         },
         "54" : {
            "name" : "EthSwt_WritePortMirrorConfiguration",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_WritePortMirrorConfiguration(uint8 MirroredSwitchIdx,const EthSwt_PortMirrorCfgType* PortMirrorConfigurationPtr);"
         },
         "55" : {
            "name" : "EthSwt_ReadPortMirrorConfiguration",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_ReadPortMirrorConfiguration(uint8 MirroredSwitchIdx,EthSwt_PortMirrorCfgType* PortMirrorConfigurationPtr);"
         },
         "56" : {
            "name" : "EthSwt_GetPortMirrorState",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetPortMirrorState(uint8 SwitchIdx,uint8 PortIdx,EthSwt_PortMirrorStateType* PortMirrorStatePtr);"
         },
         "57" : {
            "name" : "EthSwt_SetPortMirrorState",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_SetPortMirrorState(uint8 MirroredSwitchIdx,EthSwt_PortMirrorStateType PortMirrorState);"
         },
         "58" : {
            "name" : "EthSwt_SetPortTestMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetPortTestMode(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_PhyTestModeType Mode);"
         },
         "59" : {
            "name" : "EthSwt_SetPortLoopbackMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetPortLoopbackMode(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_PhyLoopbackModeType Mode);"
         },
         "6" : {
            "name" : "EthSwt_GetLinkState",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetLinkState(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_LinkStateType* LinkStatePtr);"
         },
         "60" : {
            "name" : "EthSwt_SetPortTxMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_SetPortTxMode(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_PhyTxModeType Mode);"
         },
         "63" : {
            "name" : "EthSwt_GetPortCableDiagnosticsResult",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetPortCableDiagnosticsResult(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_CableDiagResultType* ResultPtr);"
         },
         "64" : {
            "name" : "EthSwt_PortEnableTimeStamp",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_PortEnableTimeStamp(uint8 CtrlIdx,Eth_BufIdxType BufIdx,EthSwt_MgmtInfoType* MgmtInfoPtr);"
         },
         "65" : {
            "name" : "EthSwt_GetCfgDataRaw",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_GetCfgDataRaw(uint8 SwitchIdx,uint32 Offset,uint16 Length,uint8* BufferPtr);"
         },
         "67" : {
            "name" : "_GetCfgDataRawDone_",
            "param" : 1,
            "proto" : "void _GetCfgDataRawDone_(uint8 SwitchIdx);"
         },
         "68" : {
            "name" : "EthSwt_GetTxMgmtObject",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetTxMgmtObject(uint8 CtrlIdx,Eth_BufIdxType BufIdx,EthSwt_MgmtObjectType** MgmtObjectPtr);"
         },
         "69" : {
            "name" : "EthSwt_RunPortCableDiagnostic",
            "param" : 2,
            "proto" : "Std_ReturnType EthSwt_RunPortCableDiagnostic(uint8 SwitchIdxIdx,uint8 PortIdx);"
         },
         "7" : {
            "name" : "EthSwt_GetBaudRate",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetBaudRate(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_BaudRateType* BaudRatePtr);"
         },
         "70" : {
            "name" : "EthSwt_BackgroundTask",
            "param" : 0,
            "proto" : "void EthSwt_BackgroundTask();"
         },
         "71" : {
            "name" : "EthSwt_GetRxMgmtObject",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetRxMgmtObject(uint8 CtrlIdx,Eth_DataType* DataPtr,EthSwt_MgmtObjectType** MgmtObjectPtr);"
         },
         "72" : {
            "name" : "EthSwt_GetMaxFIFOBufferFillLevel",
            "param" : 4,
            "proto" : "Std_ReturnType EthSwt_GetMaxFIFOBufferFillLevel(uint8 SwitchIdx,uint8 SwitchPortIdx,uint8 SwitchPortEgressFifoIdx,uint32* SwitchPortEgressFifoBufferLevelPtr);"
         },
         "73" : {
            "name" : "EthSwt_PortLinkStateRequest",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_PortLinkStateRequest(uint8 SwitchIdx,uint8 PortIdx,EthTrcv_LinkStateType PortLinkState);"
         },
         "74" : {
            "name" : "EthSwt_DeletePortMirrorConfiguration",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_DeletePortMirrorConfiguration(uint8 MirroredSwitchIdx);"
         },
         "75" : {
            "name" : "EthSwt_GetSwitchPortWakeupReason",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetSwitchPortWakeupReason(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_WakeupReasonType Reason);"
         },
         "76" : {
            "name" : "EthSwt_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType EthSwt_CheckWakeup(uint8 SwitchIdx);"
         },
         "8" : {
            "name" : "EthSwt_GetDuplexMode",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetDuplexMode(uint8 SwitchIdx,uint8 SwitchPortIdx,EthTrcv_DuplexModeType* DuplexModePtr);"
         },
         "9" : {
            "name" : "EthSwt_GetPortMacAddr",
            "param" : 3,
            "proto" : "Std_ReturnType EthSwt_GetPortMacAddr(uint8 SwitchIdx,const uint8* MacAddrPtr,uint8* PortIdxPtr);"
         }
      }
   },
   "090" : {
      "abbreviation" : "Eep",
      "services" : {
         "1" : {
            "name" : "Eep_SetMode",
            "param" : 1,
            "proto" : "void Eep_SetMode(MemIf_ModeType Mode);"
         },
         "10" : {
            "name" : "Eep_GetVersionInfo",
            "param" : 1,
            "proto" : "void Eep_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "Eep_Write",
            "param" : 3,
            "proto" : "Std_ReturnType Eep_Write(Eep_AddressType EepromAddress,const uint8* DataBufferPtr,Eep_LengthType Length);"
         },
         "6" : {
            "name" : "Eep_Cancel",
            "param" : 0,
            "proto" : "void Eep_Cancel();"
         },
         "7" : {
            "name" : "Eep_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Eep_GetStatus();"
         },
         "8" : {
            "name" : "Eep_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Eep_GetJobResult();"
         }
      }
   },
   "092" : {
      "abbreviation" : "Fls",
      "services" : {
         "0" : {
            "name" : "Fls_Init",
            "param" : 1,
            "proto" : "void Fls_Init(const Fls_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Fls_Erase",
            "param" : 2,
            "proto" : "Std_ReturnType Fls_Erase(Fls_AddressType TargetAddress,Fls_LengthType Length);"
         },
         "16" : {
            "name" : "Fls_GetVersionInfo",
            "param" : 1,
            "proto" : "void Fls_GetVersionInfo(Std_VersionInfoType* VersioninfoPtr);"
         },
         "2" : {
            "name" : "Fls_Write",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Write(Fls_AddressType TargetAddress,const uint8* SourceAddressPtr,Fls_LengthType Length);"
         },
         "3" : {
            "name" : "Fls_Cancel",
            "param" : 0,
            "proto" : "void Fls_Cancel();"
         },
         "4" : {
            "name" : "Fls_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Fls_GetStatus();"
         },
         "5" : {
            "name" : "Fls_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Fls_GetJobResult();"
         },
         "6" : {
            "name" : "Fls_MainFunction",
            "param" : 0,
            "proto" : "void Fls_MainFunction();"
         },
         "7" : {
            "name" : "Fls_Read",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Read(Fls_AddressType SourceAddress,uint8* TargetAddressPtr,Fls_LengthType Length);"
         },
         "8" : {
            "name" : "Fls_Compare",
            "param" : 3,
            "proto" : "Std_ReturnType Fls_Compare(Fls_AddressType SourceAddress,const uint8* TargetAddressPtr,Fls_LengthType Length);"
         },
         "9" : {
            "name" : "Fls_SetMode",
            "param" : 1,
            "proto" : "void Fls_SetMode(MemIf_ModeType Mode);"
         }
      }
   },
   "093" : {
      "abbreviation" : "RamTst",
      "services" : {
         "0" : {
            "name" : "RamTst_Init",
            "param" : 1,
            "proto" : "void RamTst_Init(const RamTst_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "RamTst_MainFunction",
            "param" : 0,
            "proto" : "void RamTst_MainFunction();"
         },
         "12" : {
            "name" : "RamTst_DeInit",
            "param" : 0,
            "proto" : "void RamTst_DeInit();"
         },
         "13" : {
            "name" : "RamTst_Suspend",
            "param" : 0,
            "proto" : "void RamTst_Suspend();"
         },
         "17" : {
            "name" : "RamTst_RunPartialTest",
            "param" : 1,
            "proto" : "void RamTst_RunPartialTest(RamTst_NumberOfBlocksType BlockId);"
         },
         "18" : {
            "name" : "RamTst_GetAlgParams",
            "param" : 0,
            "proto" : "RamTst_AlgParamsIdType RamTst_GetAlgParams();"
         },
         "2" : {
            "name" : "RamTst_Stop",
            "param" : 0,
            "proto" : "void RamTst_Stop();"
         },
         "5" : {
            "name" : "RamTst_GetTestResult",
            "param" : 0,
            "proto" : "RamTst_TestResultType RamTst_GetTestResult();"
         },
         "6" : {
            "name" : "RamTst_GetTestResultPerBlock",
            "param" : 1,
            "proto" : "RamTst_TestResultType RamTst_GetTestResultPerBlock(RamTst_NumberOfBlocksType BlockID);"
         },
         "7" : {
            "name" : "RamTst_GetTestAlgorithm",
            "param" : 0,
            "proto" : "RamTst_AlgorithmType RamTst_GetTestAlgorithm();"
         },
         "8" : {
            "name" : "RamTst_ChangeNumberOfTestedCells",
            "param" : 1,
            "proto" : "void RamTst_ChangeNumberOfTestedCells(RamTst_NumberOfTestedCellsType NewNumberOfTestedCells);"
         },
         "9" : {
            "name" : "RamTst_GetNumberOfTestedCells",
            "param" : 0,
            "proto" : "RamTst_NumberOfTestedCellsType RamTst_GetNumberOfTestedCells();"
         }
      }
   },
   "1" : {
      "abbreviation" : "Os(not used asAPI prefix)",
      "services" : {
         "0" : {
            "name" : "GetApplicationID",
            "param" : 0,
            "proto" : "ApplicationType GetApplicationID();"
         },
         "1" : {
            "name" : "GetISRID",
            "param" : 0,
            "proto" : "ISRType GetISRID();"
         },
         "10" : {
            "name" : "NextScheduleTable",
            "param" : 2,
            "proto" : "StatusType NextScheduleTable(ScheduleTableType ScheduleTableID_From,ScheduleTableType ScheduleTableID_To);"
         },
         "11" : {
            "name" : "StartScheduleTableSynchron",
            "param" : 1,
            "proto" : "StatusType StartScheduleTableSynchron(ScheduleTableType ScheduleTableID);"
         },
         "12" : {
            "name" : "SyncScheduleTable",
            "param" : 2,
            "proto" : "StatusType SyncScheduleTable(ScheduleTableType ScheduleTableID,TickType Value);"
         },
         "15" : {
            "name" : "IncrementCounter",
            "param" : 1,
            "proto" : "StatusType IncrementCounter(CounterType CounterID);"
         },
         "16" : {
            "name" : "GetCounterValue",
            "param" : 2,
            "proto" : "StatusType GetCounterValue(CounterType CounterID,TickRefType Value);"
         },
         "18" : {
            "name" : "TerminateApplication",
            "param" : 2,
            "proto" : "StatusType TerminateApplication(ApplicationType Application,RestartType RestartOption);"
         },
         "19" : {
            "name" : "AllowAccess",
            "param" : 0,
            "proto" : "StatusType AllowAccess();"
         },
         "20" : {
            "name" : "GetApplicationState",
            "param" : 2,
            "proto" : "StatusType GetApplicationState(ApplicationType Application,ApplicationStateRefType Value);"
         },
         "21" : {
            "name" : "GetNumberOfActivatedCores",
            "param" : 0,
            "proto" : "uint32 GetNumberOfActivatedCores();"
         },
         "22" : {
            "name" : "GetCoreID",
            "param" : 0,
            "proto" : "CoreIdType GetCoreID();"
         },
         "28" : {
            "name" : "ShutdownAllCores",
            "param" : 1,
            "proto" : "void ShutdownAllCores(StatusType Error);"
         },
         "3" : {
            "name" : "CheckISRMemoryAccess",
            "param" : 3,
            "proto" : "AccessType CheckISRMemoryAccess(ISRType ISRID,MemoryStartAddressType Address,MemorySizeType Size);"
         },
         "38" : {
            "name" : "IocEmptyQueue__IocId_",
            "param" : 0,
            "proto" : "Std_ReturnType IocEmptyQueue__IocId_();"
         },
         "4" : {
            "name" : "CheckTaskMemoryAccess",
            "param" : 3,
            "proto" : "AccessType CheckTaskMemoryAccess(TaskType TaskID,MemoryStartAddressType Address,MemorySizeType Size);"
         },
         "40" : {
            "name" : "ReadPeripheral8",
            "param" : 3,
            "proto" : "StatusType ReadPeripheral8(AreaIdType Area,const uint8* Address,uint8* ReadValue);"
         },
         "41" : {
            "name" : "ReadPeripheral16",
            "param" : 3,
            "proto" : "StatusType ReadPeripheral16(AreaIdType Area,const uint16* Address,uint16* ReadValue);"
         },
         "42" : {
            "name" : "ReadPeripheral32",
            "param" : 3,
            "proto" : "StatusType ReadPeripheral32(AreaIdType Area,const uint32* Address,uint32* ReadValue);"
         },
         "43" : {
            "name" : "WritePeripheral8",
            "param" : 3,
            "proto" : "StatusType WritePeripheral8(AreaIdType Area,uint8* Address,uint8 WriteValue);"
         },
         "46" : {
            "name" : "ModifyPeripheral8",
            "param" : 4,
            "proto" : "StatusType ModifyPeripheral8(AreaIdType Area,uint8* Address,uint8 Clearmask,uint8 Setmask);"
         },
         "47" : {
            "name" : "ModifyPeripheral32",
            "param" : 4,
            "proto" : "StatusType ModifyPeripheral32(AreaIdType Area,uint32* Address,uint32 Clearmask,uint32 Setmask);"
         },
         "49" : {
            "name" : "EnableInterruptSource",
            "param" : 2,
            "proto" : "StatusType EnableInterruptSource(ISRType ISRID,boolean ClearPending);"
         },
         "5" : {
            "name" : "CheckObjectAccess",
            "param" : 4,
            "proto" : "ObjectAccessType CheckObjectAccess(ApplicationType ApplID,ObjectTypeType ObjectType,void ...);"
         },
         "50" : {
            "name" : "ClearPendingInterrupt",
            "param" : 1,
            "proto" : "StatusType ClearPendingInterrupt(ISRType ISRID);"
         },
         "51" : {
            "name" : "ActivateTaskAsyn",
            "param" : 1,
            "proto" : "void ActivateTaskAsyn(TaskType id);"
         },
         "52" : {
            "name" : "SetEventAsyn",
            "param" : 2,
            "proto" : "void SetEventAsyn(TaskType id,EventMaskType m);"
         },
         "6" : {
            "name" : "CheckObjectOwnership",
            "param" : 3,
            "proto" : "ApplicationType CheckObjectOwnership(ObjectTypeType ObjectType,void ...);"
         },
         "7" : {
            "name" : "StartScheduleTableRel",
            "param" : 2,
            "proto" : "StatusType StartScheduleTableRel(ScheduleTableType ScheduleTableID,TickType Offset);"
         },
         "9" : {
            "name" : "StopScheduleTable",
            "param" : 1,
            "proto" : "StatusType StopScheduleTable(ScheduleTableType ScheduleTableID);"
         }
      }
   },
   "10" : {
      "abbreviation" : "EcuM",
      "services" : {
         "0" : {
            "name" : "EcuM_EndCheckWakeup",
            "param" : 1,
            "proto" : "void EcuM_EndCheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "1" : {
            "name" : "EcuM_Init",
            "param" : 0,
            "proto" : "void EcuM_Init();"
         },
         "10" : {
            "name" : "EcuM_RequestPOST_RUN",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_RequestPOST_RUN(EcuM_UserType user);"
         },
         "11" : {
            "name" : "EcuM_ReleasePOST_RUN",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_ReleasePOST_RUN(EcuM_UserType user);"
         },
         "12" : {
            "name" : "EcuM_SetWakeupEvent",
            "param" : 1,
            "proto" : "void EcuM_SetWakeupEvent(EcuM_WakeupSourceType sources);"
         },
         "13" : {
            "name" : "EcuM_GetPendingWakeupEvents",
            "param" : 0,
            "proto" : "EcuM_WakeupSourceType EcuM_GetPendingWakeupEvents();"
         },
         "18" : {
            "name" : "EcuM_SelectBootTarget",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_SelectBootTarget(EcuM_BootTargetType target);"
         },
         "19" : {
            "name" : "EcuM_GetBootTarget",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_GetBootTarget(EcuM_BootTargetType * target);"
         },
         "2" : {
            "name" : "EcuM_Shutdown",
            "param" : 0,
            "proto" : "void EcuM_Shutdown();"
         },
         "20" : {
            "name" : "EcuM_ValidateWakeupEvent",
            "param" : 1,
            "proto" : "void EcuM_ValidateWakeupEvent(EcuM_WakeupSourceType sources);"
         },
         "21" : {
            "name" : "EcuM_GetValidatedWakeupEvents",
            "param" : 0,
            "proto" : "EcuM_WakeupSourceType EcuM_GetValidatedWakeupEvents();"
         },
         "22" : {
            "name" : "EcuM_ClearWakeupEvent",
            "param" : 1,
            "proto" : "void EcuM_ClearWakeupEvent(EcuM_WakeupSourceType sources);"
         },
         "24" : {
            "name" : "EcuM_MainFunction",
            "param" : 0,
            "proto" : "void EcuM_MainFunction();"
         },
         "25" : {
            "name" : "EcuM_GetExpiredWakeupEvents",
            "param" : 0,
            "proto" : "EcuM_WakeupSourceType EcuM_GetExpiredWakeupEvents();"
         },
         "26" : {
            "name" : "EcuM_StartupTwo",
            "param" : 0,
            "proto" : "void EcuM_StartupTwo();"
         },
         "27" : {
            "name" : "EcuM_SelectShutdownCause",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_SelectShutdownCause(EcuM_ShutdownCauseType target);"
         },
         "28" : {
            "name" : "EcuM_GetShutdownCause",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_GetShutdownCause(EcuM_ShutdownCauseType* shutdownCause);"
         },
         "3" : {
            "name" : "EcuM_RequestRUN",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_RequestRUN(EcuM_UserType user);"
         },
         "34" : {
            "name" : "EcuM_SetRelWakeupAlarm",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_SetRelWakeupAlarm(EcuM_UserType user,EcuM_TimeType time);"
         },
         "35" : {
            "name" : "EcuM_SetAbsWakeupAlarm",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_SetAbsWakeupAlarm(EcuM_UserType user,EcuM_TimeType time);"
         },
         "36" : {
            "name" : "EcuM_AbortWakeupAlarm",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_AbortWakeupAlarm(EcuM_UserType user);"
         },
         "37" : {
            "name" : "EcuM_GetCurrentTime",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_GetCurrentTime(EcuM_TimeType* time);"
         },
         "38" : {
            "name" : "EcuM_GetWakeupTime",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_GetWakeupTime(EcuM_TimeType* time);"
         },
         "39" : {
            "name" : "EcuM_SetClock",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_SetClock(EcuM_UserType user,EcuM_TimeType time);"
         },
         "4" : {
            "name" : "EcuM_ReleaseRUN",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_ReleaseRUN(EcuM_UserType user);"
         },
         "40" : {
            "name" : "EcuM_AL_DriverInitBswM__x_",
            "param" : 0,
            "proto" : "void EcuM_AL_DriverInitBswM__x_();"
         },
         "43" : {
            "name" : "EcuM_SetState",
            "param" : 1,
            "proto" : "void EcuM_SetState(EcuM_StateType state);"
         },
         "44" : {
            "name" : "EcuM_GoDownHaltPoll",
            "param" : 1,
            "proto" : "Std_ReturnType EcuM_GoDownHaltPoll(EcuM_UserType UserID);"
         },
         "48" : {
            "name" : "EcuM_ErrorHook",
            "param" : 1,
            "proto" : "void EcuM_ErrorHook(uint16 reason);"
         },
         "49" : {
            "name" : "EcuM_AL_DriverInitZero",
            "param" : 0,
            "proto" : "void EcuM_AL_DriverInitZero();"
         },
         "50" : {
            "name" : "EcuM_DeterminePbConfiguration",
            "param" : 0,
            "proto" : "const EcuM_ConfigType* EcuM_DeterminePbConfiguration();"
         },
         "51" : {
            "name" : "EcuM_AL_DriverInitOne",
            "param" : 0,
            "proto" : "void EcuM_AL_DriverInitOne();"
         },
         "6" : {
            "name" : "EcuM_SelectShutdownTarget",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_SelectShutdownTarget(EcuM_ShutdownTargetType shutdownTarget,EcuM_ShutdownModeType shutdownMode);"
         },
         "60" : {
            "name" : "EcuM_OnGoOffOne",
            "param" : 0,
            "proto" : "void EcuM_OnGoOffOne();"
         },
         "61" : {
            "name" : "EcuM_OnGoOffTwo",
            "param" : 0,
            "proto" : "void EcuM_OnGoOffTwo();"
         },
         "62" : {
            "name" : "EcuM_AL_SwitchOff",
            "param" : 0,
            "proto" : "void EcuM_AL_SwitchOff();"
         },
         "63" : {
            "name" : "EcuM_EnableWakeupSources",
            "param" : 1,
            "proto" : "void EcuM_EnableWakeupSources(EcuM_WakeupSourceType wakeupSource);"
         },
         "64" : {
            "name" : "EcuM_GenerateRamHash",
            "param" : 0,
            "proto" : "void EcuM_GenerateRamHash();"
         },
         "65" : {
            "name" : "EcuM_SleepActivity",
            "param" : 0,
            "proto" : "void EcuM_SleepActivity();"
         },
         "66" : {
            "name" : "EcuM_CheckWakeup",
            "param" : 1,
            "proto" : "void EcuM_CheckWakeup(EcuM_WakeupSourceType wakeupSource);"
         },
         "67" : {
            "name" : "EcuM_CheckRamHash",
            "param" : 0,
            "proto" : "uint8 EcuM_CheckRamHash();"
         },
         "68" : {
            "name" : "EcuM_DisableWakeupSources",
            "param" : 1,
            "proto" : "void EcuM_DisableWakeupSources(EcuM_WakeupSourceType wakeupSource);"
         },
         "69" : {
            "name" : "EcuM_AL_DriverRestart",
            "param" : 0,
            "proto" : "void EcuM_AL_DriverRestart();"
         },
         "70" : {
            "name" : "EcuM_StartWakeupSources",
            "param" : 1,
            "proto" : "void EcuM_StartWakeupSources(EcuM_WakeupSourceType wakeupSource);"
         },
         "71" : {
            "name" : "EcuM_CheckValidation",
            "param" : 1,
            "proto" : "void EcuM_CheckValidation(EcuM_WakeupSourceType wakeupSource);"
         },
         "72" : {
            "name" : "EcuM_StopWakeupSources",
            "param" : 1,
            "proto" : "void EcuM_StopWakeupSources(EcuM_WakeupSourceType wakeupSource);"
         },
         "74" : {
            "name" : "EcuM_AL_SetProgrammableInterrupts",
            "param" : 0,
            "proto" : "void EcuM_AL_SetProgrammableInterrupts();"
         },
         "75" : {
            "name" : "EcuM_LoopDetection",
            "param" : 0,
            "proto" : "void EcuM_LoopDetection();"
         },
         "76" : {
            "name" : "EcuM_AL_Reset",
            "param" : 1,
            "proto" : "void EcuM_AL_Reset(EcuM_ResetType reset);"
         },
         "8" : {
            "name" : "EcuM_GetLastShutdownTarget",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_GetLastShutdownTarget(EcuM_ShutdownTargetType* shutdownTarget,EcuM_ShutdownModeType* shutdownMode);"
         },
         "9" : {
            "name" : "EcuM_GetShutdownTarget",
            "param" : 2,
            "proto" : "Std_ReturnType EcuM_GetShutdownTarget(EcuM_ShutdownTargetType* shutdownTarget,EcuM_ShutdownModeType* shutdownMode);"
         }
      }
   },
   "100" : {
      "abbreviation" : "Gpt",
      "services" : {}
   },
   "101" : {
      "abbreviation" : "Mcu",
      "services" : {
         "0" : {
            "name" : "Mcu_Init",
            "param" : 1,
            "proto" : "void Mcu_Init(const Mcu_ConfigType* ConfigPtr);"
         },
         "2" : {
            "name" : "Mcu_InitClock",
            "param" : 1,
            "proto" : "Std_ReturnType Mcu_InitClock(Mcu_ClockType ClockSetting);"
         },
         "3" : {
            "name" : "Mcu_DistributePllClock",
            "param" : 0,
            "proto" : "Std_ReturnType Mcu_DistributePllClock();"
         },
         "6" : {
            "name" : "Mcu_GetResetRawValue",
            "param" : 0,
            "proto" : "Mcu_RawResetType Mcu_GetResetRawValue();"
         },
         "7" : {
            "name" : "Mcu_PerformReset",
            "param" : 0,
            "proto" : "void Mcu_PerformReset();"
         },
         "8" : {
            "name" : "Mcu_SetMode",
            "param" : 1,
            "proto" : "void Mcu_SetMode(Mcu_ModeType McuMode);"
         },
         "9" : {
            "name" : "Mcu_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mcu_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "102" : {
      "abbreviation" : "Wdg",
      "services" : {
         "0" : {
            "name" : "Wdg_Init",
            "param" : 1,
            "proto" : "void Wdg_Init(const Wdg_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Wdg_SetMode",
            "param" : 1,
            "proto" : "Std_ReturnType Wdg_SetMode(WdgIf_ModeType Mode);"
         },
         "3" : {
            "name" : "Wdg_SetTriggerCondition",
            "param" : 1,
            "proto" : "void Wdg_SetTriggerCondition(uint16 timeout);"
         },
         "4" : {
            "name" : "Wdg_GetVersionInfo",
            "param" : 1,
            "proto" : "void Wdg_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "103" : {
      "abbreviation" : "CorTst",
      "services" : {}
   },
   "104" : {
      "abbreviation" : "FlsTst",
      "services" : {}
   },
   "108" : {
      "abbreviation" : "IdsM",
      "services" : {
         "0" : {
            "name" : "IdsM_Init",
            "param" : 1,
            "proto" : "void IdsM_Init(const IdsM_ConfigType* configPtr);"
         },
         "1" : {
            "name" : "IdsM_GetVersionInfo",
            "param" : 1,
            "proto" : "void IdsM_GetVersionInfo(const Std_VersionInfoType* versionInfo);"
         },
         "12" : {
            "name" : "IdsM_Dcm_GetReportingMode_Start",
            "param" : 4,
            "proto" : "Std_ReturnType IdsM_Dcm_GetReportingMode_Start(uint16 In_SecurityEventId,uint8 In_SensorInstanceId,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "13" : {
            "name" : "IdsM_Dcm_GetReportingMode_RequestResults",
            "param" : 3,
            "proto" : "Std_ReturnType IdsM_Dcm_GetReportingMode_RequestResults(Dcm_OpStatusType OpStatus ,uint8* Out_ReportingMode,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "14" : {
            "name" : "IdsM_Dcm_SetReportingMode_Start",
            "param" : 5,
            "proto" : "Std_ReturnType IdsM_Dcm_SetReportingMode_Start(uint16 In_SecurityEventId,uint8 In_SensorInstanceId,uint8 In_ReportingMode,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "15" : {
            "name" : "IdsM_BswM_StateChanged",
            "param" : 1,
            "proto" : "void IdsM_BswM_StateChanged(IdsM_Filters_BlockStateType state);"
         },
         "2" : {
            "name" : "IdsM_MainFunction",
            "param" : 0,
            "proto" : "void IdsM_MainFunction();"
         },
         "3" : {
            "name" : "IdsM_SetSecurityEvent",
            "param" : 1,
            "proto" : "void IdsM_SetSecurityEvent(IdsM_SecurityEventIdType securityEventId);"
         },
         "4" : {
            "name" : "IdsM_SetSecurityEventWithContextData",
            "param" : 3,
            "proto" : "void IdsM_SetSecurityEventWithContextData(IdsM_SecurityEventIdType securityEventId,const uint8* contextData,uint16 contextDataSize);"
         },
         "5" : {
            "name" : "IdsM_SetSecurityEventWithCount",
            "param" : 2,
            "proto" : "void IdsM_SetSecurityEventWithCount(IdsM_SecurityEventIdType securityEventId,uint16 count);"
         },
         "6" : {
            "name" : "IdsM_SetSecurityEventWithCountContextData",
            "param" : 4,
            "proto" : "void IdsM_SetSecurityEventWithCountContextData(IdsM_SecurityEventIdType securityEventId,uint16 count,const uint8* contextData,uint16 contextDataSize);"
         },
         "64" : {
            "name" : "IdsM_TxConfirmation",
            "param" : 2,
            "proto" : "void IdsM_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "7" : {
            "name" : "IdsM_SetSecurityEventWithTimestampCount",
            "param" : 3,
            "proto" : "void IdsM_SetSecurityEventWithTimestampCount(IdsM_SecurityEventIdType securityEventId,IdsM_TimestampType timestamp,uint16 count);"
         },
         "72" : {
            "name" : "IdsM_TpTxConfirmation",
            "param" : 2,
            "proto" : "void IdsM_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         }
      }
   },
   "109" : {
      "abbreviation" : "KeyM",
      "services" : {
         "1" : {
            "name" : "KeyM_Init",
            "param" : 1,
            "proto" : "void KeyM_Init(const KeyM_ConfigType* ConfigPtr);"
         },
         "13" : {
            "name" : "KeyM_VerifyCertificate",
            "param" : 1,
            "proto" : "Std_ReturnType KeyM_VerifyCertificate(KeyM_CertificateIdType CertId);"
         },
         "18" : {
            "name" : "KeyM_CertGetStatus",
            "param" : 2,
            "proto" : "Std_ReturnType KeyM_CertGetStatus(KeyM_CertificateIdType CertId,KeyM_CertificateStatusType* Status);"
         },
         "2" : {
            "name" : "KeyM_Deinit",
            "param" : 0,
            "proto" : "void KeyM_Deinit();"
         }
      }
   },
   "11" : {
      "abbreviation" : "FiM",
      "services" : {
         "0" : {
            "name" : "FiM_Init",
            "param" : 1,
            "proto" : "void FiM_Init(const FiM_ConfigType* FiMConfigPtr);"
         },
         "1" : {
            "name" : "FiM_GetFunctionPermission",
            "param" : 2,
            "proto" : "Std_ReturnType FiM_GetFunctionPermission(FiM_FunctionIdType FID,boolean* Permission);"
         },
         "2" : {
            "name" : "FiM_DemTriggerOnMonitorStatus",
            "param" : 1,
            "proto" : "void FiM_DemTriggerOnMonitorStatus(Dem_EventIdType EventId);"
         },
         "3" : {
            "name" : "FiM_DemInit",
            "param" : 0,
            "proto" : "void FiM_DemInit();"
         },
         "4" : {
            "name" : "FiM_GetVersionInfo",
            "param" : 1,
            "proto" : "void FiM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "FiM_MainFunction",
            "param" : 0,
            "proto" : "void FiM_MainFunction();"
         },
         "6" : {
            "name" : "FiM_DemTriggerOnComponentStatus",
            "param" : 2,
            "proto" : "void FiM_DemTriggerOnComponentStatus(Dem_ComponentIdType ComponentId,boolean ComponentFailedStatus);"
         },
         "7" : {
            "name" : "FiM_SetFunctionAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType FiM_SetFunctionAvailable(FiM_FunctionIdType FID,boolean Availability);"
         }
      }
   },
   "110" : {
      "abbreviation" : "Csm",
      "services" : {
         "0" : {
            "name" : "Csm_Init",
            "param" : 1,
            "proto" : "void Csm_Init(const Csm_ConfigType* configPtr);"
         },
         "100" : {
            "name" : "Csm_SignatureVerify",
            "param" : 7,
            "proto" : "Std_ReturnType Csm_SignatureVerify(uint32 jobId,Crypto_OperationModeType mode,const uint8* dataPtr,uint32 dataLength,const uint8* signaturePtr,uint32 signatureLength,Crypto_VerifyResultType* verifyPtr);"
         },
         "105" : {
            "name" : "Csm_RandomSeed",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_RandomSeed(uint32 keyId,const uint8* seedPtr,uint32 seedLength);"
         },
         "106" : {
            "name" : "Csm_KeyGenerate",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_KeyGenerate(uint32 keyId);"
         },
         "111" : {
            "name" : "Csm_CancelJob",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_CancelJob(uint32 job,Crypto_OperationModeType mode);"
         },
         "112" : {
            "name" : "Csm_CallbackNotification",
            "param" : 2,
            "proto" : "void Csm_CallbackNotification(Crypto_JobType* job,Crypto_ResultType result);"
         },
         "115" : {
            "name" : "Csm_KeyCopy",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_KeyCopy(const uint32 keyId,const uint32 targetKeyId);"
         },
         "122" : {
            "name" : "Csm_JobKeySetValid",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_JobKeySetValid(uint32 jobId,uint32 keyId);"
         },
         "124" : {
            "name" : "Csm_JobKeyGenerate",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_JobKeyGenerate(uint32 jobId,uint32 keyId);"
         },
         "130" : {
            "name" : "_Csm_ApplicationCallbackNotification_",
            "param" : 2,
            "proto" : "void _Csm_ApplicationCallbackNotification_(uint32 jobId,Crypto_ResultType result);"
         },
         "131" : {
            "name" : "Csm_KeyGetStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Csm_KeyGetStatus(uint32 keyId,Crypto_KeyStatusType* keyStatusPtr);"
         },
         "133" : {
            "name" : "Csm_KeySetInvalid",
            "param" : 1,
            "proto" : "Std_ReturnType Csm_KeySetInvalid(uint32 keyId);"
         },
         "135" : {
            "name" : "Csm_RestoreContextJob",
            "param" : 3,
            "proto" : "Std_ReturnType Csm_RestoreContextJob(uint32 jobId,uint8* contextBufferPtr,uint32 contextBufferLength);"
         }
      }
   },
   "112" : {
      "abbreviation" : "CryIf",
      "services" : {
         "1" : {
            "name" : "CryIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void CryIf_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "13" : {
            "name" : "CryIf_CallbackNotification",
            "param" : 2,
            "proto" : "void CryIf_CallbackNotification(Crypto_JobType* job,Crypto_ResultType result);"
         },
         "14" : {
            "name" : "CryIf_CancelJob",
            "param" : 2,
            "proto" : "Std_ReturnType CryIf_CancelJob(uint32 channelId,Crypto_JobType* job);"
         },
         "15" : {
            "name" : "CryIf_KeyElementCopy",
            "param" : 4,
            "proto" : "Std_ReturnType CryIf_KeyElementCopy(uint32 cryIfKeyId,uint32 keyElementId,uint32 targetCryIfKeyId,uint32 targetKeyElementId);"
         },
         "16" : {
            "name" : "CryIf_KeyCopy",
            "param" : 2,
            "proto" : "Std_ReturnType CryIf_KeyCopy(uint32 cryIfKeyId,uint32 targetCryIfKeyId);"
         },
         "18" : {
            "name" : "CryIf_KeyElementCopyPartial",
            "param" : 7,
            "proto" : "Std_ReturnType CryIf_KeyElementCopyPartial(uint32 cryIfKeyId,uint32 keyElementId,uint32 keyElementSourceOffset,uint32 keyElementTargetOffset,uint32 keyElementCopyLength,uint32 targetCryIfKeyId,uint32 targetKeyElementId);"
         },
         "20" : {
            "name" : "CryIf_KeySetInvalid",
            "param" : 1,
            "proto" : "Std_ReturnType CryIf_KeySetInvalid(uint32 cryIfKeyId);"
         },
         "4" : {
            "name" : "CryIf_KeyElementSet",
            "param" : 4,
            "proto" : "Std_ReturnType CryIf_KeyElementSet(uint32 cryIfKeyId,uint32 keyElementId,const uint8* keyPtr,uint32 keyLength);"
         },
         "5" : {
            "name" : "CryIf_KeySetValid",
            "param" : 1,
            "proto" : "Std_ReturnType CryIf_KeySetValid(uint32 cryIfKeyId);"
         },
         "8" : {
            "name" : "CryIf_KeyGenerate",
            "param" : 1,
            "proto" : "Std_ReturnType CryIf_KeyGenerate(uint32 cryIfKeyId);"
         },
         "9" : {
            "name" : "CryIf_KeyDerive",
            "param" : 2,
            "proto" : "Std_ReturnType CryIf_KeyDerive(uint32 cryIfKeyId,uint32 targetCryIfKeyId);"
         }
      }
   },
   "114" : {
      "abbreviation" : "Crypto",
      "services" : {
         "0" : {
            "name" : "Crypto_Init",
            "param" : 1,
            "proto" : "void Crypto_Init(const Crypto_ConfigType* configPtr);"
         },
         "1" : {
            "name" : "Crypto_GetVersionInfo",
            "param" : 1,
            "proto" : "void Crypto_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "12" : {
            "name" : "Crypto_MainFunction",
            "param" : 0,
            "proto" : "void Crypto_MainFunction();"
         },
         "14" : {
            "name" : "Crypto_CancelJob",
            "param" : 2,
            "proto" : "Std_ReturnType Crypto_CancelJob(uint32 objectId,Crypto_JobType* job);"
         },
         "20" : {
            "name" : "Crypto_KeyGetStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Crypto_KeyGetStatus(uint32 cryptoKeyId,Crypto_KeyStatusType* keyStatusPtr);"
         },
         "21" : {
            "name" : "Crypto_KeySetInvalid",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto_KeySetInvalid(uint32 cryptoKeyId);"
         },
         "22" : {
            "name" : "Crypto__vi___ai__NvBlock_Init__NvBlock_",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto__vi___ai__NvBlock_Init__NvBlock_(NvM_InitBlockRequestType initBlockRequest);"
         },
         "23" : {
            "name" : "Crypto__vi___ai__NvBlock_ReadFrom__NvBlock_",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto__vi___ai__NvBlock_ReadFrom__NvBlock_(const void* NvmBuffer);"
         },
         "24" : {
            "name" : "Crypto__vi___ai__NvBlock_WriteTo__NvBlock_",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto__vi___ai__NvBlock_WriteTo__NvBlock_(void* NvmBuffer);"
         },
         "4" : {
            "name" : "Crypto_KeyElementSet",
            "param" : 4,
            "proto" : "Std_ReturnType Crypto_KeyElementSet(uint32 cryptoKeyId,uint32 keyElementId,const uint8* keyPtr,uint32 keyLength);"
         },
         "5" : {
            "name" : "Crypto_KeySetValid",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto_KeySetValid(uint32 cryptoKeyId);"
         },
         "7" : {
            "name" : "Crypto_KeyGenerate",
            "param" : 1,
            "proto" : "Std_ReturnType Crypto_KeyGenerate(uint32 cryptoKeyId);"
         }
      }
   },
   "12" : {
      "abbreviation" : "ComM",
      "services" : {
         "1" : {
            "name" : "ComM_Init",
            "param" : 1,
            "proto" : "void ComM_Init(const ComM_ConfigType* ConfigPtr);"
         },
         "102" : {
            "name" : "ComM_Nm_RepeatMessageLeftIndication",
            "param" : 1,
            "proto" : "void ComM_Nm_RepeatMessageLeftIndication(NetworkHandleType Channel);"
         },
         "104" : {
            "name" : "ComM_GetPncToChannelMapping",
            "param" : 3,
            "proto" : "Std_ReturnType ComM_GetPncToChannelMapping(boolean* MappingTable,uint8* ChannelCnt,uint8* PncCnt);"
         },
         "105" : {
            "name" : "ComM_Nm_PncLearningBitIndication",
            "param" : 1,
            "proto" : "void ComM_Nm_PncLearningBitIndication(NetworkHandleType Channel);"
         },
         "106" : {
            "name" : "ComM_GetCurrentPNCComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetCurrentPNCComMode(ComM_UserHandleType User,ComM_ModeType* ComMode);"
         },
         "13" : {
            "name" : "ComM_ReadInhibitCounter",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_ReadInhibitCounter(uint16* CounterValue);"
         },
         "15" : {
            "name" : "ComM_SetECUGroupClassification",
            "param" : 1,
            "proto" : "Std_ReturnType ComM_SetECUGroupClassification(ComM_InhibitionStatusType Status);"
         },
         "16" : {
            "name" : "ComM_GetVersionInfo",
            "param" : 1,
            "proto" : "void ComM_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         },
         "26" : {
            "name" : "ComM_Nm_BusSleepMode",
            "param" : 1,
            "proto" : "void ComM_Nm_BusSleepMode(NetworkHandleType Channel);"
         },
         "51" : {
            "name" : "ComM_BusSM_ModeIndication",
            "param" : 2,
            "proto" : "void ComM_BusSM_ModeIndication(NetworkHandleType Channel,ComM_ModeType ComMode);"
         },
         "6" : {
            "name" : "ComM_GetMaxComMode",
            "param" : 2,
            "proto" : "Std_ReturnType ComM_GetMaxComMode(ComM_UserHandleType User,ComM_ModeType* ComMode);"
         },
         "99" : {
            "name" : "ComM_ResetPncToChannelMapping",
            "param" : 0,
            "proto" : "Std_ReturnType ComM_ResetPncToChannelMapping();"
         }
      }
   },
   "120" : {
      "abbreviation" : "Dio",
      "services" : {
         "0" : {
            "name" : "Dio_ReadChannel",
            "param" : 1,
            "proto" : "Dio_LevelType Dio_ReadChannel(Dio_ChannelType ChannelId);"
         },
         "1" : {
            "name" : "Dio_WriteChannel",
            "param" : 2,
            "proto" : "void Dio_WriteChannel(Dio_ChannelType ChannelId,Dio_LevelType Level);"
         },
         "17" : {
            "name" : "Dio_FlipChannel",
            "param" : 1,
            "proto" : "Dio_LevelType Dio_FlipChannel(Dio_ChannelType ChannelId);"
         },
         "18" : {
            "name" : "Dio_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dio_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "19" : {
            "name" : "Dio_MaskedWritePort",
            "param" : 3,
            "proto" : "void Dio_MaskedWritePort(Dio_PortType PortId,Dio_PortLevelType Level,Dio_PortLevelType Mask);"
         },
         "3" : {
            "name" : "Dio_WritePort",
            "param" : 2,
            "proto" : "void Dio_WritePort(Dio_PortType PortId,Dio_PortLevelType Level);"
         },
         "5" : {
            "name" : "Dio_WriteChannelGroup",
            "param" : 2,
            "proto" : "void Dio_WriteChannelGroup(const Dio_ChannelGroupType* ChannelGroupIdPtr,Dio_PortLevelType Level);"
         }
      }
   },
   "121" : {
      "abbreviation" : "Pwm",
      "services" : {
         "1" : {
            "name" : "Pwm_DeInit",
            "param" : 0,
            "proto" : "void Pwm_DeInit();"
         },
         "10" : {
            "name" : "Pwm_GetCurrentPowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Pwm_GetCurrentPowerState(Pwm_PowerStateType* CurrentPowerState,Pwm_PowerStateRequestResultType* Result);"
         },
         "11" : {
            "name" : "Pwm_GetTargetPowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Pwm_GetTargetPowerState(Pwm_PowerStateType* TargetPowerState,Pwm_PowerStateRequestResultType* Result);"
         },
         "2" : {
            "name" : "Pwm_SetDutyCycle",
            "param" : 2,
            "proto" : "void Pwm_SetDutyCycle(Pwm_ChannelType ChannelNumber,uint16 DutyCycle);"
         },
         "3" : {
            "name" : "Pwm_SetPeriodAndDuty",
            "param" : 3,
            "proto" : "void Pwm_SetPeriodAndDuty(Pwm_ChannelType ChannelNumber,Pwm_PeriodType Period,uint16 DutyCycle);"
         },
         "5" : {
            "name" : "Pwm_GetOutputState",
            "param" : 1,
            "proto" : "Pwm_OutputStateType Pwm_GetOutputState(Pwm_ChannelType ChannelNumber);"
         },
         "6" : {
            "name" : "Pwm_DisableNotification",
            "param" : 1,
            "proto" : "void Pwm_DisableNotification(Pwm_ChannelType ChannelNumber);"
         },
         "7" : {
            "name" : "Pwm_EnableNotification",
            "param" : 2,
            "proto" : "void Pwm_EnableNotification(Pwm_ChannelType ChannelNumber,Pwm_EdgeNotificationType Notification);"
         },
         "96" : {
            "name" : "IoHwAb_Pwm_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Pwm_NotifyReadyForPowerState_Mode_();"
         }
      }
   },
   "122" : {
      "abbreviation" : "Icu",
      "services" : {
         "1" : {
            "name" : "Icu_DeInit",
            "param" : 0,
            "proto" : "void Icu_DeInit();"
         },
         "10" : {
            "name" : "Icu_StopTimestamp",
            "param" : 1,
            "proto" : "void Icu_StopTimestamp(Icu_ChannelType Channel);"
         },
         "11" : {
            "name" : "Icu_GetTimestampIndex",
            "param" : 1,
            "proto" : "Icu_IndexType Icu_GetTimestampIndex(Icu_ChannelType Channel);"
         },
         "13" : {
            "name" : "Icu_EnableEdgeCount",
            "param" : 1,
            "proto" : "void Icu_EnableEdgeCount(Icu_ChannelType Channel);"
         },
         "14" : {
            "name" : "Icu_DisableEdgeCount",
            "param" : 1,
            "proto" : "void Icu_DisableEdgeCount(Icu_ChannelType Channel);"
         },
         "15" : {
            "name" : "Icu_GetEdgeNumbers",
            "param" : 1,
            "proto" : "Icu_EdgeNumberType Icu_GetEdgeNumbers(Icu_ChannelType Channel);"
         },
         "16" : {
            "name" : "Icu_GetTimeElapsed",
            "param" : 1,
            "proto" : "Icu_ValueType Icu_GetTimeElapsed(Icu_ChannelType Channel);"
         },
         "17" : {
            "name" : "Icu_GetDutyCycleValues",
            "param" : 2,
            "proto" : "void Icu_GetDutyCycleValues(Icu_ChannelType Channel,Icu_DutyCycleType* DutyCycleValues);"
         },
         "18" : {
            "name" : "Icu_GetVersionInfo",
            "param" : 1,
            "proto" : "void Icu_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "19" : {
            "name" : "Icu_StartSignalMeasurement",
            "param" : 1,
            "proto" : "void Icu_StartSignalMeasurement(Icu_ChannelType Channel);"
         },
         "20" : {
            "name" : "Icu_StopSignalMeasurement",
            "param" : 1,
            "proto" : "void Icu_StopSignalMeasurement(Icu_ChannelType Channel);"
         },
         "21" : {
            "name" : "Icu_CheckWakeup",
            "param" : 1,
            "proto" : "void Icu_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "22" : {
            "name" : "Icu_EnableEdgeDetection",
            "param" : 1,
            "proto" : "void Icu_EnableEdgeDetection(Icu_ChannelType Channel);"
         },
         "23" : {
            "name" : "Icu_DisableEdgeDetection",
            "param" : 1,
            "proto" : "void Icu_DisableEdgeDetection(Icu_ChannelType Channel);"
         },
         "24" : {
            "name" : "Icu_DisableNotificationAsync",
            "param" : 1,
            "proto" : "void Icu_DisableNotificationAsync(Icu_ChannelType Channel);"
         },
         "25" : {
            "name" : "Icu_EnableNotificationAsync",
            "param" : 1,
            "proto" : "void Icu_EnableNotificationAsync(Icu_ChannelType Channel);"
         },
         "3" : {
            "name" : "Icu_DisableWakeup",
            "param" : 1,
            "proto" : "void Icu_DisableWakeup(Icu_ChannelType Channel);"
         },
         "4" : {
            "name" : "Icu_EnableWakeup",
            "param" : 1,
            "proto" : "void Icu_EnableWakeup(Icu_ChannelType Channel);"
         },
         "5" : {
            "name" : "Icu_SetActivationCondition",
            "param" : 2,
            "proto" : "void Icu_SetActivationCondition(Icu_ChannelType Channel,Icu_ActivationType Activation);"
         },
         "6" : {
            "name" : "Icu_DisableNotification",
            "param" : 1,
            "proto" : "void Icu_DisableNotification(Icu_ChannelType Channel);"
         },
         "7" : {
            "name" : "Icu_EnableNotification",
            "param" : 1,
            "proto" : "void Icu_EnableNotification(Icu_ChannelType Channel);"
         },
         "8" : {
            "name" : "Icu_GetInputState",
            "param" : 1,
            "proto" : "Icu_InputStateType Icu_GetInputState(Icu_ChannelType Channel);"
         }
      }
   },
   "123" : {
      "abbreviation" : "Adc",
      "services" : {
         "0" : {
            "name" : "Adc_Init",
            "param" : 1,
            "proto" : "void Adc_Init(const Adc_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Adc_DeInit",
            "param" : 0,
            "proto" : "void Adc_DeInit();"
         },
         "10" : {
            "name" : "Adc_GetVersionInfo",
            "param" : 1,
            "proto" : "void Adc_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "17" : {
            "name" : "Adc_GetCurrentPowerState",
            "param" : 2,
            "proto" : "Std_ReturnType Adc_GetCurrentPowerState(Adc_PowerStateType* CurrentPowerState,Adc_PowerStateRequestResultType* Result);"
         },
         "2" : {
            "name" : "Adc_StartGroupConversion",
            "param" : 1,
            "proto" : "void Adc_StartGroupConversion(Adc_GroupType Group);"
         },
         "3" : {
            "name" : "Adc_StopGroupConversion",
            "param" : 1,
            "proto" : "void Adc_StopGroupConversion(Adc_GroupType Group);"
         },
         "5" : {
            "name" : "Adc_EnableHardwareTrigger",
            "param" : 1,
            "proto" : "void Adc_EnableHardwareTrigger(Adc_GroupType Group);"
         },
         "6" : {
            "name" : "Adc_DisableHardwareTrigger",
            "param" : 1,
            "proto" : "void Adc_DisableHardwareTrigger(Adc_GroupType Group);"
         },
         "7" : {
            "name" : "Adc_EnableGroupNotification",
            "param" : 1,
            "proto" : "void Adc_EnableGroupNotification(Adc_GroupType Group);"
         }
      }
   },
   "124" : {
      "abbreviation" : "Port",
      "services" : {
         "0" : {
            "name" : "Port_Init",
            "param" : 1,
            "proto" : "void Port_Init(const Port_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Port_SetPinDirection",
            "param" : 2,
            "proto" : "void Port_SetPinDirection(Port_PinType Pin,Port_PinDirectionType Direction);"
         },
         "2" : {
            "name" : "Port_RefreshPortDirection",
            "param" : 0,
            "proto" : "void Port_RefreshPortDirection();"
         },
         "3" : {
            "name" : "Port_GetVersionInfo",
            "param" : 1,
            "proto" : "void Port_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "Port_SetPinMode",
            "param" : 2,
            "proto" : "void Port_SetPinMode(Port_PinType Pin,Port_PinModeType Mode);"
         }
      }
   },
   "125" : {
      "abbreviation" : "Ocu",
      "services" : {
         "1" : {
            "name" : "Ocu_DeInit",
            "param" : 0,
            "proto" : "void Ocu_DeInit();"
         },
         "10" : {
            "name" : "Ocu_DisableNotification",
            "param" : 1,
            "proto" : "void Ocu_DisableNotification(Ocu_ChannelType ChannelNumber);"
         },
         "11" : {
            "name" : "Ocu_EnableNotification",
            "param" : 1,
            "proto" : "void Ocu_EnableNotification(Ocu_ChannelType ChannelNumber);"
         },
         "2" : {
            "name" : "Ocu_StartChannel",
            "param" : 1,
            "proto" : "Std_ReturnType Ocu_StartChannel(Ocu_ChannelType ChannelNumber);"
         },
         "3" : {
            "name" : "Ocu_StopChannel",
            "param" : 1,
            "proto" : "void Ocu_StopChannel(Ocu_ChannelType ChannelNumber);"
         },
         "4" : {
            "name" : "Ocu_SetPinState",
            "param" : 2,
            "proto" : "void Ocu_SetPinState(Ocu_ChannelType ChannelNumber,Ocu_PinStateType PinState);"
         },
         "5" : {
            "name" : "Ocu_SetPinAction",
            "param" : 2,
            "proto" : "void Ocu_SetPinAction(Ocu_ChannelType ChannelNumber,Ocu_PinActionType PinAction);"
         },
         "8" : {
            "name" : "Ocu_SetRelativeThreshold",
            "param" : 2,
            "proto" : "Ocu_ReturnType Ocu_SetRelativeThreshold(Ocu_ChannelType ChannelNumber,Ocu_ValueType RelativeValue);"
         },
         "9" : {
            "name" : "Ocu_GetVersionInfo",
            "param" : 1,
            "proto" : "void Ocu_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "13" : {
      "abbreviation" : "WdgM",
      "services" : {
         "0" : {
            "name" : "WdgM_Init",
            "param" : 1,
            "proto" : "void WdgM_Init(const WdgM_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "WdgM_DeInit",
            "param" : 0,
            "proto" : "void WdgM_DeInit();"
         },
         "11" : {
            "name" : "WdgM_GetMode",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetMode(WdgM_ModeType* Mode);"
         },
         "12" : {
            "name" : "WdgM_GetLocalStatus",
            "param" : 2,
            "proto" : "Std_ReturnType WdgM_GetLocalStatus(WdgM_SupervisedEntityIdType SEID,WdgM_LocalStatusType* Status);"
         },
         "13" : {
            "name" : "WdgM_GetGlobalStatus",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetGlobalStatus(WdgM_GlobalStatusType* Status);"
         },
         "15" : {
            "name" : "WdgM_PerformReset",
            "param" : 0,
            "proto" : "void WdgM_PerformReset();"
         },
         "16" : {
            "name" : "WdgM_GetFirstExpiredSEID",
            "param" : 1,
            "proto" : "Std_ReturnType WdgM_GetFirstExpiredSEID(WdgM_SupervisedEntityIdType* SEID);"
         },
         "2" : {
            "name" : "WdgM_GetVersionInfo",
            "param" : 1,
            "proto" : "void WdgM_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "8" : {
            "name" : "WdgM_MainFunction",
            "param" : 0,
            "proto" : "void WdgM_MainFunction();"
         }
      }
   },
   "130" : {
      "abbreviation" : "SchM",
      "services" : {}
   },
   "14" : {
      "abbreviation" : "Tm",
      "services" : {
         "1" : {
            "name" : "Tm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Tm_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "11" : {
            "name" : "Tm_BusyWait1us24bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_BusyWait1us24bit(uint8 WaitingTimeMin);"
         },
         "12" : {
            "name" : "Tm_ResetTimer1us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer1us32bit(Tm_PredefTimer1us32bitType* TimerPtr);"
         },
         "16" : {
            "name" : "Tm_BusyWait1us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_BusyWait1us32bit(uint8 WaitingTimeMin);"
         },
         "17" : {
            "name" : "Tm_ResetTimer100us32bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer100us32bit(Tm_PredefTimer100us32bitType* TimerPtr);"
         },
         "18" : {
            "name" : "Tm_GetTimeSpan100us32bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan100us32bit(const Tm_PredefTimer100us32bitType* TimerPtr,uint32* TimeSpanPtr);"
         },
         "19" : {
            "name" : "Tm_ShiftTimer100us32bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer100us32bit(Tm_PredefTimer100us32bitType* TimerPtr,uint32 TimeValue);"
         },
         "2" : {
            "name" : "Tm_ResetTimer1us16bit",
            "param" : 1,
            "proto" : "Std_ReturnType Tm_ResetTimer1us16bit(Tm_PredefTimer1us16bitType* TimerPtr);"
         },
         "20" : {
            "name" : "Tm_SyncTimer100us32bit",
            "param" : 2,
            "proto" : "void Tm_SyncTimer100us32bit(Tm_PredefTimer100us32bitType* TimerDstPtr,const Tm_PredefTimer100us32bitType* TimerSrcPtr);"
         },
         "3" : {
            "name" : "Tm_GetTimeSpan1us16bit",
            "param" : 2,
            "proto" : "Std_ReturnType Tm_GetTimeSpan1us16bit(const Tm_PredefTimer1us16bitType* TimerPtr,uint16* TimeSpanPtr);"
         },
         "4" : {
            "name" : "Tm_ShiftTimer1us16bit",
            "param" : 2,
            "proto" : "void Tm_ShiftTimer1us16bit(Tm_PredefTimer1us16bitType* TimerPtr,uint16 TimeValue);"
         }
      }
   },
   "140" : {
      "abbreviation" : "CanSM",
      "services" : {
         "1" : {
            "name" : "CanSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanSM_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "10" : {
            "name" : "CanSM_CheckTransceiverWakeFlagIndication",
            "param" : 1,
            "proto" : "void CanSM_CheckTransceiverWakeFlagIndication(uint8 Transceiver);"
         },
         "17" : {
            "name" : "CanSM_StartWakeupSource",
            "param" : 1,
            "proto" : "Std_ReturnType CanSM_StartWakeupSource(NetworkHandleType network);"
         },
         "18" : {
            "name" : "CanSM_StopWakeupSource",
            "param" : 1,
            "proto" : "Std_ReturnType CanSM_StopWakeupSource(NetworkHandleType network);"
         },
         "19" : {
            "name" : "CanSM_SetEcuPassive",
            "param" : 1,
            "proto" : "Std_ReturnType CanSM_SetEcuPassive(boolean CanSM_Passive);"
         },
         "2" : {
            "name" : "CanSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanSM_RequestComMode(NetworkHandleType network,ComM_ModeType ComM_Mode);"
         },
         "4" : {
            "name" : "CanSM_ControllerBusOff",
            "param" : 1,
            "proto" : "void CanSM_ControllerBusOff(uint8 ControllerId);"
         },
         "5" : {
            "name" : "CanSM_MainFunction",
            "param" : 0,
            "proto" : "void CanSM_MainFunction();"
         },
         "7" : {
            "name" : "CanSM_ControllerModeIndication",
            "param" : 2,
            "proto" : "void CanSM_ControllerModeIndication(uint8 ControllerId,Can_ControllerStateType ControllerMode);"
         },
         "8" : {
            "name" : "CanSM_ClearTrcvWufFlagIndication",
            "param" : 1,
            "proto" : "void CanSM_ClearTrcvWufFlagIndication(uint8 Transceiver);"
         },
         "9" : {
            "name" : "CanSM_TransceiverModeIndication",
            "param" : 2,
            "proto" : "void CanSM_TransceiverModeIndication(uint8 TransceiverId,CanTrcv_TrcvModeType TransceiverMode);"
         }
      }
   },
   "141" : {
      "abbreviation" : "LinSM",
      "services" : {
         "1" : {
            "name" : "LinSM_Init",
            "param" : 1,
            "proto" : "void LinSM_Init(const LinSM_ConfigType* ConfigPtr);"
         },
         "16" : {
            "name" : "LinSM_ScheduleRequest",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_ScheduleRequest(NetworkHandleType network,LinIf_SchHandleType schedule);"
         },
         "17" : {
            "name" : "LinSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_GetCurrentComMode(NetworkHandleType network,ComM_ModeType* mode);"
         },
         "18" : {
            "name" : "LinSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType LinSM_RequestComMode(NetworkHandleType network,ComM_ModeType mode);"
         },
         "2" : {
            "name" : "LinSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void LinSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "3" : {
            "name" : "LinSM_GotoSleepIndication",
            "param" : 1,
            "proto" : "void LinSM_GotoSleepIndication(NetworkHandleType Channel);"
         },
         "32" : {
            "name" : "LinSM_ScheduleRequestConfirmation",
            "param" : 2,
            "proto" : "void LinSM_ScheduleRequestConfirmation(NetworkHandleType network,LinIf_SchHandleType schedule);"
         },
         "33" : {
            "name" : "LinSM_WakeupConfirmation",
            "param" : 2,
            "proto" : "void LinSM_WakeupConfirmation(NetworkHandleType network,boolean success);"
         },
         "34" : {
            "name" : "LinSM_GotoSleepConfirmation",
            "param" : 2,
            "proto" : "void LinSM_GotoSleepConfirmation(NetworkHandleType network,boolean success);"
         },
         "48" : {
            "name" : "LinSM_MainFunction",
            "param" : 0,
            "proto" : "void LinSM_MainFunction();"
         }
      }
   },
   "142" : {
      "abbreviation" : "FrSM",
      "services" : {
         "2" : {
            "name" : "FrSM_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrSM_RequestComMode(NetworkHandleType NetworkHandle,ComM_ModeType ComM_Mode);"
         },
         "3" : {
            "name" : "FrSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType FrSM_GetCurrentComMode(NetworkHandleType NetworkHandle,ComM_ModeType* ComM_ModePtr);"
         },
         "4" : {
            "name" : "FrSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "5" : {
            "name" : "FrSm_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType FrSm_AllSlots(NetworkHandleType NetworkHandle);"
         },
         "6" : {
            "name" : "FrSm_SetEcuPassive",
            "param" : 1,
            "proto" : "Std_ReturnType FrSm_SetEcuPassive(boolean FrSM_Passive);"
         }
      }
   },
   "143" : {
      "abbreviation" : "EthSM",
      "services" : {
         "1" : {
            "name" : "EthSM_MainFunction",
            "param" : 0,
            "proto" : "void EthSM_MainFunction();"
         },
         "2" : {
            "name" : "EthSM_GetVersionInfo",
            "param" : 1,
            "proto" : "void EthSM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "EthSM_GetCurrentComMode",
            "param" : 2,
            "proto" : "Std_ReturnType EthSM_GetCurrentComMode(NetworkHandleType NetworkHandle,ComM_ModeType* ComM_ModePtr);"
         },
         "6" : {
            "name" : "EthSM_TrcvLinkStateChg",
            "param" : 2,
            "proto" : "void EthSM_TrcvLinkStateChg(uint8 CtrlIdx,EthTrcv_LinkStateType TransceiverLinkState);"
         },
         "7" : {
            "name" : "EthSM_Init",
            "param" : 0,
            "proto" : "void EthSM_Init();"
         },
         "8" : {
            "name" : "EthSM_TcpIpModeIndication",
            "param" : 2,
            "proto" : "void EthSM_TcpIpModeIndication(uint8 CtrlIdx,TcpIp_StateType TcpIpState);"
         },
         "9" : {
            "name" : "EthSM_CtrlModeIndication",
            "param" : 2,
            "proto" : "void EthSM_CtrlModeIndication(uint8 CtrlIdx,Eth_ModeType CtrlMode);"
         }
      }
   },
   "15" : {
      "abbreviation" : "Det",
      "services" : {
         "18" : {
            "name" : "_DetReportTransientFaultCallout_",
            "param" : 4,
            "proto" : "Std_ReturnType _DetReportTransientFaultCallout_(uint16 ModuleId,uint8 InstanceId,uint8 ApiId,uint8 FaultId);"
         },
         "2" : {
            "name" : "Det_Start",
            "param" : 0,
            "proto" : "void Det_Start();"
         },
         "3" : {
            "name" : "Det_GetVersionInfo",
            "param" : 1,
            "proto" : "void Det_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "150" : {
      "abbreviation" : "SecOC",
      "services" : {
         "2" : {
            "name" : "SecOC_GetVersionInfo",
            "param" : 1,
            "proto" : "void SecOC_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "64" : {
            "name" : "SecOC_TxConfirmation",
            "param" : 2,
            "proto" : "void SecOC_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "72" : {
            "name" : "SecOC_TpTxConfirmation",
            "param" : 2,
            "proto" : "void SecOC_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "SecOC_IfTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_IfTransmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "76" : {
            "name" : "SecOC_TpCancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType SecOC_TpCancelReceive(PduIdType RxPduId);"
         },
         "77" : {
            "name" : "SecOC_SPduTxConfirmation",
            "param" : 1,
            "proto" : "void SecOC_SPduTxConfirmation(uint16 SecOCFreshnessValueID);"
         },
         "82" : {
            "name" : "SecOC_GetTxFreshness",
            "param" : 3,
            "proto" : "Std_ReturnType SecOC_GetTxFreshness(uint16 SecOCFreshnessValueID,uint8* SecOCFreshnessValue,uint32* SecOCFreshnessValueLength);"
         },
         "83" : {
            "name" : "SecOC_TpTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SecOC_TpTransmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "16" : {
      "abbreviation" : "SwCluC",
      "services" : {
         "1" : {
            "name" : "NvM_SetDataIndex",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_SetDataIndex(NvM_BlockIdType BlockId,uint8 DataIndex);"
         },
         "11" : {
            "name" : "NvM_InvalidateNvBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_InvalidateNvBlock(NvM_BlockIdType BlockId);"
         },
         "16" : {
            "name" : "NvM_CancelJobs",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_CancelJobs(NvM_BlockIdType BlockId);"
         },
         "17" : {
            "name" : "SwCluC_BManif_GetConSwClusterId__ResourceEntryGroup___ResourceEntry___Handle_",
            "param" : 1,
            "proto" : "SwCluC_BManif_SwClusterIdType SwCluC_BManif_GetConSwClusterId__ResourceEntryGroup___ResourceEntry___Handle_(SwCluC_BManif_HandleIndexType notifierSetIndex);"
         },
         "176" : {
            "name" : "Rte_Rips__PlugIn__Switch__BswSwcI___MMI_",
            "param" : 3,
            "proto" : "void Rte_Rips__PlugIn__Switch__BswSwcI___MMI_(Rte_Rips_SwitchNotificationStatusType switchNotificationStatus,uint32 previousmode,uint32 nextmode);"
         },
         "177" : {
            "name" : "Rte_Rips__PlugIn__DequeueModeSwitch__MMI___OsTask_",
            "param" : 0,
            "proto" : "Rte_Rips_SwitchNotificationStatusType Rte_Rips__PlugIn__DequeueModeSwitch__MMI___OsTask_();"
         },
         "178" : {
            "name" : "Rte_Rips__PlugIn__Trigger__BswSwcI___MMI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Trigger__BswSwcI___MMI_();"
         },
         "18" : {
            "name" : "SwCluC_BManif_GetHandle__ResourceEntryGroup___Handle_",
            "param" : 2,
            "proto" : "SwCluC_BManif_SwClusterIdType SwCluC_BManif_GetHandle__ResourceEntryGroup___Handle_(SwCluC_BManif_TableIndexType resIndex,SwCluC_BManif_HandleIndexType notifierSetIndex);"
         },
         "180" : {
            "name" : "Rte_Rips__PlugIn__DataIsUpdated__SwcBswI___CGI_",
            "param" : 0,
            "proto" : "boolean Rte_Rips__PlugIn__DataIsUpdated__SwcBswI___CGI_();"
         },
         "19" : {
            "name" : "NvM_SetBlockLockStatus",
            "param" : 2,
            "proto" : "void NvM_SetBlockLockStatus(NvM_BlockIdType BlockId,boolean BlockLocked);"
         },
         "2" : {
            "name" : "NvM_GetDataIndex",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_GetDataIndex(NvM_BlockIdType BlockId,uint8* DataIndexPtr);"
         },
         "22" : {
            "name" : "NvM_ReadPRAMBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_ReadPRAMBlock(NvM_BlockIdType BlockId);"
         },
         "23" : {
            "name" : "NvM_WritePRAMBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_WritePRAMBlock(NvM_BlockIdType BlockId);"
         },
         "236" : {
            "name" : "Rte_Rips__PlugIn__Invoke__SwcBswI___CGI_",
            "param" : 0,
            "proto" : "Std_ReturnType Rte_Rips__PlugIn__Invoke__SwcBswI___CGI_([IN|IN/OUT|OUT] _data_1_,[IN|IN/OUT|OUT] ...,[IN|IN/OUT|OUT] _data_n_,[Std_TransformerError transformerError]);"
         },
         "24" : {
            "name" : "NvM_RestorePRAMBlockDefaults",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_RestorePRAMBlockDefaults(NvM_BlockIdType BlockId);"
         },
         "240" : {
            "name" : "Rte_Rips__PlugIn__SchM_Init",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__SchM_Init();"
         },
         "241" : {
            "name" : "Rte_Rips__PlugIn__Rte_Start",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Rte_Start();"
         },
         "242" : {
            "name" : "Rte_Rips__PlugIn__Rte_Stop",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Rte_Stop();"
         },
         "243" : {
            "name" : "Rte_Rips_SchM_Deinit",
            "param" : 0,
            "proto" : "void Rte_Rips_SchM_Deinit();"
         },
         "256" : {
            "name" : "Rte_Rips__PlugIn__Prm__CGI_",
            "param" : 0,
            "proto" : "_return_ Rte_Rips__PlugIn__Prm__CGI_();"
         },
         "3" : {
            "name" : "NvM_SetBlockProtection",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_SetBlockProtection(NvM_BlockIdType BlockId,boolean ProtectionEnabled);"
         },
         "32" : {
            "name" : "SwCluC_Xcc_Init1",
            "param" : 0,
            "proto" : "void SwCluC_Xcc_Init1();"
         },
         "33" : {
            "name" : "SwCluC_Xcc_Init2",
            "param" : 0,
            "proto" : "void SwCluC_Xcc_Init2();"
         },
         "4" : {
            "name" : "NvM_GetErrorStatus",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_GetErrorStatus(NvM_BlockIdType BlockId,NvM_RequestResultType* RequestResultPtr);"
         },
         "48" : {
            "name" : "SwCluC_OsProxy_Init__SwCluCOsProxyOsBaseSocket_",
            "param" : 0,
            "proto" : "void SwCluC_OsProxy_Init__SwCluCOsProxyOsBaseSocket_();"
         },
         "49" : {
            "name" : "SwCluC_NvMProxy_Init__SwCluCNvMBaseSocket_",
            "param" : 0,
            "proto" : "void SwCluC_NvMProxy_Init__SwCluCNvMBaseSocket_();"
         },
         "5" : {
            "name" : "NvM_SetRamBlockStatus",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_SetRamBlockStatus(NvM_BlockIdType BlockId,boolean BlockChanged);"
         },
         "6" : {
            "name" : "NvM_ReadBlock",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_ReadBlock(NvM_BlockIdType BlockId,void* NvM_DstPtr);"
         },
         "7" : {
            "name" : "NvM_WriteBlock",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_WriteBlock(NvM_BlockIdType BlockId,const void* NvM_SrcPtr);"
         },
         "8" : {
            "name" : "NvM_RestoreBlockDefaults",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_RestoreBlockDefaults(NvM_BlockIdType BlockId,void* NvM_DestPtr);"
         }
      }
   },
   "160" : {
      "abbreviation" : "StbM",
      "services" : {
         "11" : {
            "name" : "StbM_SetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_SetGlobalTime(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* timeStamp,const StbM_UserDataType* userData);"
         },
         "14" : {
            "name" : "StbM_GetOffset",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_GetOffset(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* timeStamp,StbM_UserDataType* userData);"
         },
         "15" : {
            "name" : "StbM_BusSetGlobalTime",
            "param" : 5,
            "proto" : "Std_ReturnType StbM_BusSetGlobalTime(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_TimeStampType* globalTimePtr,const StbM_UserDataType* userDataPtr,const StbM_MeasurementType* measureDataPtr,const StbM_VirtualLocalTimeType* localTimePtr);"
         },
         "17" : {
            "name" : "StbM_GetRateDeviation",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetRateDeviation(StbM_SynchronizedTimeBaseType timeBaseId,StbM_RateDeviationType* rateDeviation);"
         },
         "18" : {
            "name" : "StbM_SetRateCorrection",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_SetRateCorrection(StbM_SynchronizedTimeBaseType timeBaseId,StbM_RateDeviationType rateDeviation);"
         },
         "20" : {
            "name" : "StbM_GetTimeBaseStatus",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_GetTimeBaseStatus(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeBaseStatusType* syncTimeBaseStatus,StbM_TimeBaseStatusType* offsetTimeBaseStatus);"
         },
         "22" : {
            "name" : "StbM_GetSyncTimeRecordHead",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetSyncTimeRecordHead(StbM_SynchronizedTimeBaseType timeBaseId,StbM_SyncRecordTableHeadType* syncRecordTableHead);"
         },
         "23" : {
            "name" : "StbM_GetOffsetTimeRecordHead",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetOffsetTimeRecordHead(StbM_SynchronizedTimeBaseType timeBaseId,StbM_OffsetRecordTableHeadType* offsetRecordTableHead);"
         },
         "24" : {
            "name" : "_Customer__TimeNotificationCallback_TimeBase_",
            "param" : 1,
            "proto" : "Std_ReturnType _Customer__TimeNotificationCallback_TimeBase_(StbM_TimeDiffType deviationTime);"
         },
         "25" : {
            "name" : "StatusNotificationCallback_TimeBase_",
            "param" : 1,
            "proto" : "Std_ReturnType StatusNotificationCallback_TimeBase_(StbM_TimeBaseNotificationType eventNotification);"
         },
         "27" : {
            "name" : "StbM_GetTimeBaseUpdateCounter",
            "param" : 1,
            "proto" : "uint8 StbM_GetTimeBaseUpdateCounter(StbM_SynchronizedTimeBaseType timeBaseId);"
         },
         "28" : {
            "name" : "StbM_TriggerTimeTransmission",
            "param" : 1,
            "proto" : "Std_ReturnType StbM_TriggerTimeTransmission(StbM_SynchronizedTimeBaseType timeBaseId);"
         },
         "29" : {
            "name" : "StbM_GetMasterConfig",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetMasterConfig(StbM_SynchronizedTimeBaseType timeBaseId,StbM_MasterConfigType* masterConfig);"
         },
         "31" : {
            "name" : "StbM_BusGetCurrentTime",
            "param" : 4,
            "proto" : "Std_ReturnType StbM_BusGetCurrentTime(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* globalTimePtr,StbM_VirtualLocalTimeType* localTimePtr,StbM_UserDataType* userData);"
         },
         "32" : {
            "name" : "StbM_CanSetMasterTimingData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_CanSetMasterTimingData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_CanTimeMasterMeasurementType* measureDataPtr);"
         },
         "33" : {
            "name" : "StbM_FrSetMasterTimingData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_FrSetMasterTimingData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_FrTimeMasterMeasurementType* measureDataPtr);"
         },
         "34" : {
            "name" : "StbM_EthSetMasterTimingData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_EthSetMasterTimingData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_EthTimeMasterMeasurementType* measureDataPtr);"
         },
         "35" : {
            "name" : "StbM_EthSetPdelayInitiatorData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_EthSetPdelayInitiatorData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_PdelayInitiatorMeasurementType* measureDataPtr);"
         },
         "36" : {
            "name" : "StbM_EthSetPdelayResponderData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_EthSetPdelayResponderData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_PdelayResponderMeasurementType* measureDataPtr);"
         },
         "38" : {
            "name" : "StbM_CanSetSlaveTimingData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_CanSetSlaveTimingData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_CanTimeSlaveMeasurementType* measureDataPtr);"
         },
         "40" : {
            "name" : "StbM_EthSetSlaveTimingData",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_EthSetSlaveTimingData(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_EthTimeSlaveMeasurementType* measureDataPtr);"
         },
         "41" : {
            "name" : "StbM_GetBusProtocolParam",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_GetBusProtocolParam(StbM_SynchronizedTimeBaseType timeBaseId,StbM_ProtocolParamType* protocolParam);"
         },
         "42" : {
            "name" : "StbM_SetBusProtocolParam",
            "param" : 2,
            "proto" : "Std_ReturnType StbM_SetBusProtocolParam(StbM_SynchronizedTimeBaseType timeBaseId,const StbM_ProtocolParamType* protocolParam);"
         },
         "5" : {
            "name" : "StbM_GetVersionInfo",
            "param" : 1,
            "proto" : "void StbM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "7" : {
            "name" : "StbM_GetCurrentTime",
            "param" : 3,
            "proto" : "Std_ReturnType StbM_GetCurrentTime(StbM_SynchronizedTimeBaseType timeBaseId,StbM_TimeStampType* timeStamp,StbM_UserDataType* userData);"
         }
      }
   },
   "161" : {
      "abbreviation" : "CanTSyn",
      "services" : {
         "1" : {
            "name" : "CanTSyn_Init",
            "param" : 1,
            "proto" : "void CanTSyn_Init(const CanTSyn_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "CanTSyn_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanTSyn_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "163" : {
      "abbreviation" : "FrTSyn",
      "services" : {
         "1" : {
            "name" : "FrTSyn_Init",
            "param" : 1,
            "proto" : "void FrTSyn_Init(const FrTSyn_ConfigType* configPtr);"
         },
         "4" : {
            "name" : "FrTSyn_MainFunction",
            "param" : 0,
            "proto" : "void FrTSyn_MainFunction();"
         },
         "66" : {
            "name" : "FrTSyn_RxIndication",
            "param" : 2,
            "proto" : "void FrTSyn_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "164" : {
      "abbreviation" : "EthTSyn",
      "services" : {
         "11" : {
            "name" : "EthTSyn_GetProtocolParam",
            "param" : 2,
            "proto" : "Std_ReturnType EthTSyn_GetProtocolParam(StbM_SynchronizedTimeBaseType timeBaseId,StbM_ProtocolParamType* protocolParam);"
         },
         "5" : {
            "name" : "EthTSyn_SetTransmissionMode",
            "param" : 2,
            "proto" : "void EthTSyn_SetTransmissionMode(uint8 CtrlIdx,EthTSyn_TransmissionModeType Mode);"
         },
         "6" : {
            "name" : "EthTSyn_RxIndication",
            "param" : 6,
            "proto" : "void EthTSyn_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,const uint8* DataPtr,uint16 LenByte);"
         },
         "8" : {
            "name" : "EthTSyn_TrcvLinkStateChg",
            "param" : 2,
            "proto" : "Std_ReturnType EthTSyn_TrcvLinkStateChg(uint8 CtrlIdx,EthTrcv_LinkStateType TrcvLinkState);"
         },
         "9" : {
            "name" : "EthTSyn_MainFunction",
            "param" : 0,
            "proto" : "void EthTSyn_MainFunction();"
         }
      }
   },
   "170" : {
      "abbreviation" : "TcpIp",
      "services" : {
         "11" : {
            "name" : "TcpIp_ReleaseIpAddrAssignment",
            "param" : 1,
            "proto" : "Std_ReturnType TcpIp_ReleaseIpAddrAssignment(TcpIp_LocalAddrIdType LocalAddrId);"
         },
         "13" : {
            "name" : "TcpIp_DhcpReadOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpReadOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint8 Option,uint8* DataLength,uint8* DataPtr);"
         },
         "15" : {
            "name" : "TcpIp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType TcpIp_ChangeParameter(TcpIp_SocketIdType SocketId,TcpIp_ParamIdType ParameterId,const uint8* ParameterValue);"
         },
         "17" : {
            "name" : "TcpIp_GetPhysAddr",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_GetPhysAddr(TcpIp_LocalAddrIdType LocalAddrId,uint8* PhysAddrPtr);"
         },
         "2" : {
            "name" : "TcpIp_GetVersionInfo",
            "param" : 1,
            "proto" : "void TcpIp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "20" : {
            "name" : "TcpIp_RxIndication",
            "param" : 6,
            "proto" : "void TcpIp_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,const uint8* DataPtr,uint16 LenByte);"
         },
         "21" : {
            "name" : "TcpIp_MainFunction",
            "param" : 0,
            "proto" : "void TcpIp_MainFunction();"
         },
         "23" : {
            "name" : "TcpIp_GetCtrlIdx",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_GetCtrlIdx(TcpIp_LocalAddrIdType LocalAddrId,uint8* CtrlIdxPtr);"
         },
         "24" : {
            "name" : "TcpIp_IcmpV6Transmit",
            "param" : 7,
            "proto" : "Std_ReturnType TcpIp_IcmpV6Transmit(TcpIp_LocalAddrIdType LocalIpAddrId,const TcpIp_SockAddrType* RemoteAddrPtr,uint8 HopLimit,uint8 Type,uint8 Code,uint16 DataLength,const uint8* DataPtr);"
         },
         "25" : {
            "name" : "TcpIp_DhcpV6ReadOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpV6ReadOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint16 Option,uint16* DataLength,uint8* DataPtr);"
         },
         "26" : {
            "name" : "TcpIp_DhcpV6WriteOption",
            "param" : 4,
            "proto" : "Std_ReturnType TcpIp_DhcpV6WriteOption(TcpIp_LocalAddrIdType LocalIpAddrId,uint16 Option,uint16 DataLength,const uint8* DataPtr);"
         },
         "27" : {
            "name" : "TcpIp_ResetIpAssignment",
            "param" : 0,
            "proto" : "Std_ReturnType TcpIp_ResetIpAssignment();"
         },
         "6" : {
            "name" : "TcpIp_TcpConnect",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpConnect(TcpIp_SocketIdType SocketId,const TcpIp_SockAddrType* RemoteAddrPtr);"
         },
         "7" : {
            "name" : "TcpIp_TcpListen",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpListen(TcpIp_SocketIdType SocketId,uint16 MaxChannels);"
         },
         "8" : {
            "name" : "TcpIp_TcpReceived",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_TcpReceived(TcpIp_SocketIdType SocketId,uint32 Length);"
         },
         "9" : {
            "name" : "TcpIp_RequestComMode",
            "param" : 2,
            "proto" : "Std_ReturnType TcpIp_RequestComMode(uint8 CtrlIdx,TcpIp_StateType State);"
         }
      }
   },
   "171" : {
      "abbreviation" : "Sd",
      "services" : {
         "2" : {
            "name" : "Sd_GetVersionInfo",
            "param" : 1,
            "proto" : "void Sd_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "6" : {
            "name" : "Sd_MainFunction",
            "param" : 0,
            "proto" : "void Sd_MainFunction();"
         },
         "68" : {
            "name" : "Sd_ServiceGroupStart",
            "param" : 1,
            "proto" : "void Sd_ServiceGroupStart(Sd_ServiceGroupIdType ServiceGroupId);"
         },
         "8" : {
            "name" : "Sd_ClientServiceSetState",
            "param" : 2,
            "proto" : "Std_ReturnType Sd_ClientServiceSetState(uint16 ClientServiceHandleId,Sd_ClientServiceSetStateType ClientServiceState);"
         },
         "9" : {
            "name" : "Sd_ConsumedEventGroupSetState",
            "param" : 2,
            "proto" : "Std_ReturnType Sd_ConsumedEventGroupSetState(uint16 SdConsumedEventGroupHandleId,Sd_ConsumedEventGroupSetStateType ConsumedEventGroupState);"
         }
      }
   },
   "173" : {
      "abbreviation" : "DoIP",
      "services" : {
         "0" : {
            "name" : "DoIP_GetVersionInfo",
            "param" : 1,
            "proto" : "void DoIP_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "1" : {
            "name" : "DoIP_Init",
            "param" : 1,
            "proto" : "void DoIP_Init(const DoIP_ConfigType* DoIPConfigPtr);"
         },
         "11" : {
            "name" : "DoIP_SoConModeChg",
            "param" : 2,
            "proto" : "void DoIP_SoConModeChg(SoAd_SoConIdType SoConId,SoAd_SoConModeType Mode);"
         },
         "12" : {
            "name" : "DoIP_LocalIpAddrAssignmentChg",
            "param" : 2,
            "proto" : "void DoIP_LocalIpAddrAssignmentChg(SoAd_SoConIdType SoConId,TcpIp_IpAddrStateType State);"
         },
         "13" : {
            "name" : "DoIP_TriggerVehicleAnnouncement",
            "param" : 1,
            "proto" : "void DoIP_TriggerVehicleAnnouncement(uint8 InterfaceId);"
         },
         "14" : {
            "name" : "DoIP_ActivationLineSwitch",
            "param" : 2,
            "proto" : "void DoIP_ActivationLineSwitch(uint8 InterfaceId,boolean* Active);"
         },
         "2" : {
            "name" : "DoIP_MainFunction",
            "param" : 0,
            "proto" : "void DoIP_MainFunction();"
         },
         "64" : {
            "name" : "DoIP_SoAdIfTxConfirmation",
            "param" : 2,
            "proto" : "void DoIP_SoAdIfTxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "DoIP_SoAdIfRxIndication",
            "param" : 2,
            "proto" : "void DoIP_SoAdIfRxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "68" : {
            "name" : "DoIP_SoAdTpCopyRxData",
            "param" : 3,
            "proto" : "BufReq_ReturnType DoIP_SoAdTpCopyRxData(PduIdType id,const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "69" : {
            "name" : "DoIP_SoAdTpRxIndication",
            "param" : 2,
            "proto" : "void DoIP_SoAdTpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "70" : {
            "name" : "DoIP_SoAdTpStartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType DoIP_SoAdTpStartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "DoIP_SoAdTpTxConfirmation",
            "param" : 2,
            "proto" : "void DoIP_SoAdTpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "DoIP_IfTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType DoIP_IfTransmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "74" : {
            "name" : "DoIP_IfCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_IfCancelTransmit(PduIdType TxPduId);"
         },
         "76" : {
            "name" : "DoIP_TpCancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_TpCancelReceive(PduIdType RxPduId);"
         },
         "83" : {
            "name" : "DoIP_TpTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType DoIP_TpTransmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "84" : {
            "name" : "DoIP_TpCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType DoIP_TpCancelTransmit(PduIdType TxPduId);"
         }
      }
   },
   "174" : {
      "abbreviation" : "SomeIpXf",
      "services" : {
         "0" : {
            "name" : "SomeIpXf_GetVersionInfo",
            "param" : 1,
            "proto" : "void SomeIpXf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "1" : {
            "name" : "SomeIpXf_Init",
            "param" : 1,
            "proto" : "void SomeIpXf_Init(const SomeIpXf_ConfigType* config);"
         },
         "2" : {
            "name" : "SomeIpXf_DeInit",
            "param" : 0,
            "proto" : "void SomeIpXf_DeInit();"
         },
         "3" : {
            "name" : "SomeIpXf__transformerId_",
            "param" : 2,
            "proto" : "uint8 SomeIpXf__transformerId_(uint8* buffer,uint32* bufferLength);"
         },
         "4" : {
            "name" : "SomeIpXf_Inv__transformerId_",
            "param" : 2,
            "proto" : "uint8 SomeIpXf_Inv__transformerId_(const uint8* buffer,uint32 bufferLength);"
         },
         "5" : {
            "name" : "SomeIpXf_ExtractProtocolHeaderFields",
            "param" : 4,
            "proto" : "Std_ReturnType SomeIpXf_ExtractProtocolHeaderFields(const uint8* buffer,uint32 bufferLength,Std_MessageTypeType* messageType,Std_MessageResultType* messageResult);"
         }
      }
   },
   "175" : {
      "abbreviation" : "ComXf",
      "services" : {
         "0" : {
            "name" : "ComXf_GetVersionInfo",
            "param" : 1,
            "proto" : "void ComXf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "1" : {
            "name" : "ComXf_Init",
            "param" : 1,
            "proto" : "void ComXf_Init(const ComXf_ConfigType* config);"
         },
         "2" : {
            "name" : "ComXf_DeInit",
            "param" : 0,
            "proto" : "void ComXf_DeInit();"
         },
         "3" : {
            "name" : "ComXf__transformerId_",
            "param" : 3,
            "proto" : "uint8 ComXf__transformerId_(uint8* buffer,uint32* bufferLength,_paramtype_ dataElement);"
         },
         "4" : {
            "name" : "ComXf_Inv__transformerId_",
            "param" : 3,
            "proto" : "uint8 ComXf_Inv__transformerId_(const uint8* buffer,uint32 bufferLength,_type_* dataElement);"
         }
      }
   },
   "176" : {
      "abbreviation" : "E2EXf",
      "services" : {
         "0" : {
            "name" : "E2EXf_GetVersionInfo",
            "param" : 1,
            "proto" : "void E2EXf_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "2" : {
            "name" : "E2EXf_DeInit",
            "param" : 0,
            "proto" : "void E2EXf_DeInit();"
         }
      }
   },
   "177" : {
      "abbreviation" : "SomeIpTp",
      "services" : {
         "2" : {
            "name" : "SomeIpTp_Init",
            "param" : 1,
            "proto" : "void SomeIpTp_Init(const SomeIpTp_ConfigType* config);"
         },
         "3" : {
            "name" : "SomeIpTp_MainFunctionTx",
            "param" : 0,
            "proto" : "void SomeIpTp_MainFunctionTx();"
         },
         "4" : {
            "name" : "SomeIpTp_MainFunctionRx",
            "param" : 0,
            "proto" : "void SomeIpTp_MainFunctionRx();"
         },
         "64" : {
            "name" : "SomeIpTp_TxConfirmation",
            "param" : 2,
            "proto" : "void SomeIpTp_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "SomeIpTp_RxIndication",
            "param" : 2,
            "proto" : "void SomeIpTp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "73" : {
            "name" : "SomeIpTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType SomeIpTp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "182" : {
      "abbreviation" : "V2xGn",
      "services" : {
         "1" : {
            "name" : "V2xGn_Init",
            "param" : 1,
            "proto" : "void V2xGn_Init(void* CfgPtr);"
         },
         "10" : {
            "name" : "V2xGn_V2xM_AbortPseudonymChange",
            "param" : 0,
            "proto" : "Std_ReturnType V2xGn_V2xM_AbortPseudonymChange();"
         },
         "11" : {
            "name" : "V2xGn_V2xM_EncapConfirmation",
            "param" : 1,
            "proto" : "void V2xGn_V2xM_EncapConfirmation(uint16 TransactionId16);"
         },
         "12" : {
            "name" : "V2xGn_V2xM_DecapConfirmation",
            "param" : 6,
            "proto" : "void V2xGn_V2xM_DecapConfirmation(uint32 TransactionId32,V2xM_SecReportType SecReport,uint64 CertificateId,uint32 ItsAid,uint8 SspLength,uint8* SspBits);"
         },
         "2" : {
            "name" : "V2xGn_GetVersionInfo",
            "param" : 1,
            "proto" : "void V2xGn_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "3" : {
            "name" : "V2xGn_Transmit",
            "param" : 3,
            "proto" : "V2x_GnTxResultType V2xGn_Transmit(uint16 TransactionId16,const V2xGn_TxParamsType* TxParams,uint16 Length);"
         },
         "4" : {
            "name" : "V2xGn_RxIndication",
            "param" : 6,
            "proto" : "void V2xGn_RxIndication(uint8 CtrlIdx,Eth_FrameType FrameType,boolean IsBroadcast,const uint8* PhysAddrPtr,uint8* DataPtr,uint16 LenByte);"
         },
         "8" : {
            "name" : "V2xGn_MainFunction",
            "param" : 0,
            "proto" : "void V2xGn_MainFunction();"
         },
         "9" : {
            "name" : "V2xGn_V2xM_CommitPseudonymChange",
            "param" : 0,
            "proto" : "Std_ReturnType V2xGn_V2xM_CommitPseudonymChange();"
         }
      }
   },
   "183" : {
      "abbreviation" : "V2xBtp",
      "services" : {
         "1" : {
            "name" : "V2xBtp_Init",
            "param" : 1,
            "proto" : "void V2xBtp_Init(void* CfgPtr);"
         },
         "2" : {
            "name" : "V2Btp_GetVersionInfo",
            "param" : 1,
            "proto" : "void V2Btp_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "4" : {
            "name" : "V2xBtp_RxIndication",
            "param" : 4,
            "proto" : "void V2xBtp_RxIndication(uint32 TransactionId32,const V2xBtp_RxParamsType* ReceiveParams,uint16 Length,const uint8* DataPtr);"
         },
         "6" : {
            "name" : "V2xBtp_CopyTxData",
            "param" : 3,
            "proto" : "Std_ReturnType V2xBtp_CopyTxData(uint16 TransactionId16,uint8* DestPtr,uint16* Length);"
         }
      }
   },
   "184" : {
      "abbreviation" : "V2xFac",
      "services" : {
         "1" : {
            "name" : "V2xFac_Init",
            "param" : 1,
            "proto" : "void V2xFac_Init(void* CfgPtr);"
         },
         "10" : {
            "name" : "V2xFac_CaBs_MainFunction",
            "param" : 0,
            "proto" : "void V2xFac_CaBs_MainFunction();"
         },
         "11" : {
            "name" : "V2xFac_DenBs_MainFunction",
            "param" : 0,
            "proto" : "void V2xFac_DenBs_MainFunction();"
         },
         "12" : {
            "name" : "V2xFac_IviS_MainFunction",
            "param" : 0,
            "proto" : "void V2xFac_IviS_MainFunction();"
         },
         "2" : {
            "name" : "V2xFac_GetVersionInfo",
            "param" : 1,
            "proto" : "void V2xFac_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "3" : {
            "name" : "V2xFac_V2xM_PreparePseudonymChange",
            "param" : 1,
            "proto" : "Std_ReturnType V2xFac_V2xM_PreparePseudonymChange(const V2x_PseudonymType* PseudonymPtr);"
         },
         "6" : {
            "name" : "V2xFac_V2xM_SetTGenCamDcc",
            "param" : 1,
            "proto" : "void V2xFac_V2xM_SetTGenCamDcc(uint16 TGenCamDcc);"
         },
         "8" : {
            "name" : "V2xFac_TxConfirmation",
            "param" : 1,
            "proto" : "void V2xFac_TxConfirmation(uint16 TransactionId16);"
         }
      }
   },
   "185" : {
      "abbreviation" : "V2xM",
      "services" : {
         "12" : {
            "name" : "V2xM_V2xGn_GetGlobalTxParams",
            "param" : 2,
            "proto" : "void V2xM_V2xGn_GetGlobalTxParams(const V2x_ChanType* channel,uint16* Cbr);"
         },
         "13" : {
            "name" : "V2xM_MainFunction",
            "param" : 0,
            "proto" : "void V2xM_MainFunction();"
         },
         "14" : {
            "name" : "V2xM_CalcDistance",
            "param" : 5,
            "proto" : "Std_ReturnType V2xM_CalcDistance(sint32 LatitudeA,sint32 LongitudeA,sint32 LatitudeB,sint32 LongitudeB,float32* Distance);"
         },
         "15" : {
            "name" : "V2xM_CalcHeadingInTolerance",
            "param" : 3,
            "proto" : "boolean V2xM_CalcHeadingInTolerance(float32 Heading1,float32 Heading2,float32 Tolerance);"
         },
         "16" : {
            "name" : "V2xM_SetTollingZoneInformation",
            "param" : 4,
            "proto" : "void V2xM_SetTollingZoneInformation(sint32 protectedZoneLatitude,sint32 protectedZoneLongitude,uint32 protectedZoneRadius,uint8 protectedZoneID);"
         },
         "2" : {
            "name" : "V2xM_GetVersionInfo",
            "param" : 1,
            "proto" : "void V2xM_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "3" : {
            "name" : "V2xM_GetPositionAndTime",
            "param" : 1,
            "proto" : "Std_ReturnType V2xM_GetPositionAndTime(V2xM_PositionAndTimeType* Poti);"
         },
         "4" : {
            "name" : "V2xM_GetRefTimePtr",
            "param" : 1,
            "proto" : "Std_ReturnType V2xM_GetRefTimePtr(const uint32** RefTimePtr);"
         },
         "8" : {
            "name" : "V2xM_TriggerPseudonymChange",
            "param" : 0,
            "proto" : "Std_ReturnType V2xM_TriggerPseudonymChange();"
         },
         "9" : {
            "name" : "V2xM_LockPseudonymChange",
            "param" : 2,
            "proto" : "Std_ReturnType V2xM_LockPseudonymChange(uint16 Duration,uint64* HandleId);"
         }
      }
   },
   "2" : {
      "abbreviation" : "Rte",
      "services" : {
         "0" : {
            "name" : "SchM_Init",
            "param" : 1,
            "proto" : "void SchM_Init(const SchM_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "SchM_Deinit",
            "param" : 0,
            "proto" : "void SchM_Deinit();"
         },
         "112" : {
            "name" : "SchM_Start",
            "param" : 0,
            "proto" : "void SchM_Start();"
         },
         "113" : {
            "name" : "Rte_Stop",
            "param" : 0,
            "proto" : "Std_ReturnType Rte_Stop();"
         },
         "114" : {
            "name" : "Rte_PartitionTerminated__PID_",
            "param" : 0,
            "proto" : "void Rte_PartitionTerminated__PID_();"
         },
         "115" : {
            "name" : "Rte_PartitionRestarting__PID_",
            "param" : 0,
            "proto" : "void Rte_PartitionRestarting__PID_();"
         },
         "116" : {
            "name" : "Rte_RestartPartition__PID_",
            "param" : 0,
            "proto" : "Std_ReturnType Rte_RestartPartition__PID_();"
         },
         "117" : {
            "name" : "Rte_Init__InitContainer_",
            "param" : 0,
            "proto" : "void Rte_Init__InitContainer_();"
         },
         "118" : {
            "name" : "SchM_StartTiming",
            "param" : 0,
            "proto" : "void SchM_StartTiming();"
         },
         "144" : {
            "name" : "Rte_COMCbkTAck__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTAck__sn_();"
         },
         "145" : {
            "name" : "Rte_COMCbkTErr__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTErr__sn_();"
         },
         "146" : {
            "name" : "Rte_COMCbkInv__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkInv__sn_();"
         },
         "147" : {
            "name" : "Rte_COMCbkRxTOut__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkRxTOut__sn_();"
         },
         "148" : {
            "name" : "Rte_COMCbkTxTOut__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTxTOut__sn_();"
         },
         "149" : {
            "name" : "Rte_COMCbk__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbk__sg_();"
         },
         "150" : {
            "name" : "Rte_COMCbkTAck__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTAck__sg_();"
         },
         "151" : {
            "name" : "Rte_COMCbkTErr__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTErr__sg_();"
         },
         "152" : {
            "name" : "Rte_COMCbkInv__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbkInv__sg_();"
         },
         "153" : {
            "name" : "Rte_COMCbkRxTOut__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbkRxTOut__sg_();"
         },
         "154" : {
            "name" : "Rte_COMCbkTxTOut__sg_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTxTOut__sg_();"
         },
         "155" : {
            "name" : "Rte_SetMirror__b___d_",
            "param" : 1,
            "proto" : "Std_ReturnType Rte_SetMirror__b___d_(const void* NVMBuffer);"
         },
         "156" : {
            "name" : "Rte_GetMirror__b___d_",
            "param" : 1,
            "proto" : "Std_ReturnType Rte_GetMirror__b___d_(void* NVMBuffer);"
         },
         "157" : {
            "name" : "Rte_NvMNotifyInitBlock__b___d_",
            "param" : 2,
            "proto" : "Std_ReturnType Rte_NvMNotifyInitBlock__b___d_(NvM_BlockRequestType BlockRequest,NvM_RequestResultType JobResult);"
         },
         "158" : {
            "name" : "Rte_NvMNotifyInitBlock__b___d_",
            "param" : 1,
            "proto" : "Std_ReturnType Rte_NvMNotifyInitBlock__b___d_(NvM_InitBlockRequestType InitBlockRequest);"
         },
         "159" : {
            "name" : "Rte_COMCbk__sn_",
            "param" : 0,
            "proto" : "void Rte_COMCbk__sn_();"
         },
         "160" : {
            "name" : "Rte_LdComCbkRxIndication__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkRxIndication__sn_(const PduInfoType* PduInfoPtr);"
         },
         "161" : {
            "name" : "Rte_LdComCbkStartOfReception__sn_",
            "param" : 3,
            "proto" : "BufReq_ReturnType Rte_LdComCbkStartOfReception__sn_(const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "162" : {
            "name" : "Rte_LdComCbkCopyRxData__sn_",
            "param" : 2,
            "proto" : "BufReq_ReturnType Rte_LdComCbkCopyRxData__sn_(const PduInfoType* info,PduLengthType* bufferSizePtr);"
         },
         "163" : {
            "name" : "Rte_LdComCbkTpRxIndication__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkTpRxIndication__sn_(Std_ReturnType result);"
         },
         "164" : {
            "name" : "Rte_LdComCbkCopyTxData__sn_",
            "param" : 3,
            "proto" : "BufReq_ReturnType Rte_LdComCbkCopyTxData__sn_(const PduInfoType* info,const RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "165" : {
            "name" : "Rte_LdComCbkTpTxConfirmation__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkTpTxConfirmation__sn_(Std_ReturnType result);"
         },
         "166" : {
            "name" : "Rte_LdComCbkTriggerTransmit__sn_",
            "param" : 1,
            "proto" : "Std_ReturnType Rte_LdComCbkTriggerTransmit__sn_(PduInfoType* PduInfoPtr);"
         },
         "167" : {
            "name" : "Rte_LdComCbkTxConfirmation__sn_",
            "param" : 1,
            "proto" : "void Rte_LdComCbkTxConfirmation__sn_(Std_ReturnType result);"
         },
         "168" : {
            "name" : "Rte_COMCbkTxPrep__mn_",
            "param" : 0,
            "proto" : "void Rte_COMCbkTxPrep__mn_();"
         },
         "176" : {
            "name" : "Rte_Rips__PlugIn__Switch__BswSwcI___MMI_",
            "param" : 3,
            "proto" : "void Rte_Rips__PlugIn__Switch__BswSwcI___MMI_(Rte_Rips_SwitchNotificationStatusType switchNotificationStatus,uint32 previousmode,uint32 nextmode);"
         },
         "177" : {
            "name" : "Rte_Rips__PlugIn__DequeueModeSwitch__MMI___OsTask_",
            "param" : 0,
            "proto" : "Rte_Rips_SwitchNotificationStatusType Rte_Rips__PlugIn__DequeueModeSwitch__MMI___OsTask_();"
         },
         "178" : {
            "name" : "Rte_Rips__PlugIn__Trigger__BswSwcI___MMI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Trigger__BswSwcI___MMI_();"
         },
         "180" : {
            "name" : "Rte_Rips__PlugIn__DataIsUpdated__SwcBswI___CGI_",
            "param" : 0,
            "proto" : "boolean Rte_Rips__PlugIn__DataIsUpdated__SwcBswI___CGI_();"
         },
         "181" : {
            "name" : "Rte_Rips__PlugIn__DataIsUpdatedEventActivation__SwcBswI___DR___CGI_",
            "param" : 0,
            "proto" : "boolean Rte_Rips__PlugIn__DataIsUpdatedEventActivation__SwcBswI___DR___CGI_();"
         },
         "2" : {
            "name" : "SchM_GetVersionInfo",
            "param" : 1,
            "proto" : "void SchM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "224" : {
            "name" : "Rte_Rips__PlugIn__IRead__SwcBswI___ExE___CGI_",
            "param" : 0,
            "proto" : "_return_ Rte_Rips__PlugIn__IRead__SwcBswI___ExE___CGI_();"
         },
         "225" : {
            "name" : "Rte_Rips__PlugIn__IWrite__SwcBswI___ExE___CGI_",
            "param" : 1,
            "proto" : "void Rte_Rips__PlugIn__IWrite__SwcBswI___ExE___CGI_(IN data);"
         },
         "226" : {
            "name" : "Rte_Rips__PlugIn__IRBufferRef__SwcBswI___ExE___CGI_",
            "param" : 0,
            "proto" : "_rips_return_ref_ Rte_Rips__PlugIn__IRBufferRef__SwcBswI___ExE___CGI_();"
         },
         "227" : {
            "name" : "Rte_Rips__PlugIn__IWBufferRef__SwcBswI___ExE___CGI_",
            "param" : 0,
            "proto" : "_rips_return_ref_ Rte_Rips__PlugIn__IWBufferRef__SwcBswI___ExE___CGI_();"
         },
         "236" : {
            "name" : "Rte_Rips__PlugIn__Invoke__SwcBswI___CGI_",
            "param" : 0,
            "proto" : "Std_ReturnType Rte_Rips__PlugIn__Invoke__SwcBswI___CGI_([IN|IN/OUT|OUT] _data_1_,[IN|IN/OUT|OUT] ...,[IN|IN/OUT|OUT] _data_n_,[Std_TransformerError transformerError]);"
         },
         "237" : {
            "name" : "Rte_Rips__PlugIn__ReturnResult__SwcBswI___CGI_",
            "param" : 0,
            "proto" : "Std_ReturnType Rte_Rips__PlugIn__ReturnResult__SwcBswI___CGI_([IN/OUT|OUT] _param_1_,[IN/OUT|OUT] _param_n_,[Std_TransformerError transformerError]);"
         },
         "240" : {
            "name" : "Rte_Rips__PlugIn__SchM_Init",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__SchM_Init();"
         },
         "241" : {
            "name" : "Rte_Rips__PlugIn__Rte_Start",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Rte_Start();"
         },
         "242" : {
            "name" : "Rte_Rips__PlugIn__Rte_Stop",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__Rte_Stop();"
         },
         "243" : {
            "name" : "Rte_Rips_SchM_Deinit",
            "param" : 0,
            "proto" : "void Rte_Rips_SchM_Deinit();"
         },
         "246" : {
            "name" : "Rte_Rips__PlugIn__DsmqSwitch__BswSwcI___MMI_",
            "param" : 3,
            "proto" : "void Rte_Rips__PlugIn__DsmqSwitch__BswSwcI___MMI_(Rte_DsmqStatusType dsmqstatus,uint32 previousmode,uint32 nextmode);"
         },
         "247" : {
            "name" : "Rte_Rips__PlugIn__DsmqTransitionStart__BswSwcI___MMI_",
            "param" : 2,
            "proto" : "void Rte_Rips__PlugIn__DsmqTransitionStart__BswSwcI___MMI_(uint32 previousmode,uint32 nextmode);"
         },
         "248" : {
            "name" : "Rte_Rips__PlugIn__DsmqTransitionSync__DsmqOsTask_",
            "param" : 0,
            "proto" : "boolean Rte_Rips__PlugIn__DsmqTransitionSync__DsmqOsTask_();"
         },
         "249" : {
            "name" : "Rte_Rips__PlugIn__DsmqTransitionEnd__BswSwcI___MMI_",
            "param" : 3,
            "proto" : "void Rte_Rips__PlugIn__DsmqTransitionEnd__BswSwcI___MMI_(Rte_DsmqStatusType dsmqstatus,uint32 previousmode,uint32 nextmode);"
         },
         "250" : {
            "name" : "Rte_Rips__PlugIn__NotifyRxAck__CGI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__NotifyRxAck__CGI_();"
         },
         "251" : {
            "name" : "Rte_Rips__PlugIn__NotifyRxTOut__CGI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__NotifyRxTOut__CGI_();"
         },
         "252" : {
            "name" : "Rte_Rips__PlugIn__NotifyTxAck__CGI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__NotifyTxAck__CGI_();"
         },
         "253" : {
            "name" : "Rte_Rips__PlugIn__NotifyTxErr__CGI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__NotifyTxErr__CGI_();"
         },
         "254" : {
            "name" : "Rte_Rips__PlugIn__NotifyTxTOut__CGI_",
            "param" : 0,
            "proto" : "void Rte_Rips__PlugIn__NotifyTxTOut__CGI_();"
         },
         "256" : {
            "name" : "Rte_Rips__PlugIn__Prm__CGI_",
            "param" : 0,
            "proto" : "_return_ Rte_Rips__PlugIn__Prm__CGI_();"
         }
      }
   },
   "20" : {
      "abbreviation" : "NvM",
      "services" : {
         "0" : {
            "name" : "NvM_Init",
            "param" : 1,
            "proto" : "void NvM_Init(const NvM_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "NvM_CancelWriteAll",
            "param" : 0,
            "proto" : "void NvM_CancelWriteAll();"
         },
         "11" : {
            "name" : "NvM_InvalidateNvBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_InvalidateNvBlock(NvM_BlockIdType BlockId);"
         },
         "13" : {
            "name" : "NvM_WriteAll",
            "param" : 0,
            "proto" : "void NvM_WriteAll();"
         },
         "15" : {
            "name" : "NvM_GetVersionInfo",
            "param" : 1,
            "proto" : "void NvM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "16" : {
            "name" : "NvM_CancelJobs",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_CancelJobs(NvM_BlockIdType BlockId);"
         },
         "17" : {
            "name" : "NvM_JobEndNotification",
            "param" : 0,
            "proto" : "void NvM_JobEndNotification();"
         },
         "18" : {
            "name" : "NvM_JobErrorNotification",
            "param" : 0,
            "proto" : "void NvM_JobErrorNotification();"
         },
         "19" : {
            "name" : "NvM_SetBlockLockStatus",
            "param" : 2,
            "proto" : "void NvM_SetBlockLockStatus(NvM_BlockIdType BlockId,boolean BlockLocked);"
         },
         "2" : {
            "name" : "NvM_GetDataIndex",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_GetDataIndex(NvM_BlockIdType BlockId,uint8* DataIndexPtr);"
         },
         "22" : {
            "name" : "NvM_ReadPRAMBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_ReadPRAMBlock(NvM_BlockIdType BlockId);"
         },
         "23" : {
            "name" : "NvM_WritePRAMBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_WritePRAMBlock(NvM_BlockIdType BlockId);"
         },
         "24" : {
            "name" : "NvM_RestorePRAMBlockDefaults",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_RestorePRAMBlockDefaults(NvM_BlockIdType BlockId);"
         },
         "3" : {
            "name" : "NvM_SetBlockProtection",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_SetBlockProtection(NvM_BlockIdType BlockId,boolean ProtectionEnabled);"
         },
         "4" : {
            "name" : "NvM_GetErrorStatus",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_GetErrorStatus(NvM_BlockIdType BlockId,NvM_RequestResultType* RequestResultPtr);"
         },
         "6" : {
            "name" : "NvM_ReadBlock",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_ReadBlock(NvM_BlockIdType BlockId,void* NvM_DstPtr);"
         },
         "7" : {
            "name" : "NvM_WriteBlock",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_WriteBlock(NvM_BlockIdType BlockId,const void* NvM_SrcPtr);"
         },
         "8" : {
            "name" : "NvM_RestoreBlockDefaults",
            "param" : 2,
            "proto" : "Std_ReturnType NvM_RestoreBlockDefaults(NvM_BlockIdType BlockId,void* NvM_DestPtr);"
         },
         "9" : {
            "name" : "NvM_EraseNvBlock",
            "param" : 1,
            "proto" : "Std_ReturnType NvM_EraseNvBlock(NvM_BlockIdType BlockId);"
         }
      }
   },
   "201" : {
      "abbreviation" : "Crc",
      "services" : {
         "4" : {
            "name" : "Crc_GetVersionInfo",
            "param" : 1,
            "proto" : "void Crc_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         }
      }
   },
   "205" : {
      "abbreviation" : "Bfx",
      "services" : {
         "255" : {
            "name" : "Bfx_GetVersionInfo",
            "param" : 1,
            "proto" : "void Bfx_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         }
      }
   },
   "207" : {
      "abbreviation" : "E2E",
      "services" : {
         "1" : {
            "name" : "E2E_P01Protect",
            "param" : 3,
            "proto" : "Std_ReturnType E2E_P01Protect(const E2E_P01ConfigType* ConfigPtr,E2E_P01ProtectStateType* StatePtr,uint8* DataPtr);"
         },
         "20" : {
            "name" : "E2E_GetVersionInfo",
            "param" : 1,
            "proto" : "void E2E_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "21" : {
            "name" : "E2EPW_WriteInit__p___o_",
            "param" : 1,
            "proto" : "Std_ReturnType E2EPW_WriteInit__p___o_(Rte_Instance _instance_);"
         },
         "24" : {
            "name" : "E2EPW_WriteInit2__p___o_",
            "param" : 1,
            "proto" : "uint8 E2EPW_WriteInit2__p___o_(Rte_Instance _instance_);"
         },
         "26" : {
            "name" : "E2EPW_ReadInit2__p___o_",
            "param" : 1,
            "proto" : "uint8 E2EPW_ReadInit2__p___o_(Rte_Instance _instance_);"
         },
         "27" : {
            "name" : "E2E_P01ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P01ProtectInit(E2E_P01ProtectStateType* StatePtr);"
         },
         "28" : {
            "name" : "E2E_P01CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P01CheckInit(E2E_P01CheckStateType* StatePtr);"
         },
         "3" : {
            "name" : "E2E_P02Protect",
            "param" : 3,
            "proto" : "Std_ReturnType E2E_P02Protect(const E2E_P02ConfigType* ConfigPtr,E2E_P02ProtectStateType* StatePtr,uint8* DataPtr);"
         },
         "30" : {
            "name" : "E2E_P02ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P02ProtectInit(E2E_P02ProtectStateType* StatePtr);"
         },
         "31" : {
            "name" : "E2E_P02CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P02CheckInit(E2E_P02CheckStateType* StatePtr);"
         },
         "33" : {
            "name" : "E2E_P07Protect",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P07Protect(const E2E_P07ConfigType* ConfigPtr,E2E_P07ProtectStateType* StatePtr,uint8* DataPtr,uint32 Length);"
         },
         "34" : {
            "name" : "E2E_P07ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P07ProtectInit(E2E_P07ProtectStateType* StatePtr);"
         },
         "35" : {
            "name" : "E2E_P07Check",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P07Check(const E2E_P07ConfigType* ConfigPtr,E2E_P07CheckStateType* StatePtr,const uint8* DataPtr,uint32 Length);"
         },
         "36" : {
            "name" : "E2E_P07CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P07CheckInit(E2E_P07CheckStateType* StatePtr);"
         },
         "39" : {
            "name" : "E2E_P05ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P05ProtectInit(E2E_P05ProtectStateType* StatePtr);"
         },
         "4" : {
            "name" : "E2E_P02Check",
            "param" : 3,
            "proto" : "Std_ReturnType  E2E_P02Check(const E2E_P02ConfigType* ConfigPtr,E2E_P02CheckStateType* StatePtr,const uint8* DataPtr);"
         },
         "40" : {
            "name" : "E2E_P05Check",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P05Check(const E2E_P05ConfigType* ConfigPtr,E2E_P05CheckStateType* StatePtr,const uint8* DataPtr,uint16 Length);"
         },
         "41" : {
            "name" : "E2E_P05CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P05CheckInit(E2E_P05CheckStateType* StatePtr);"
         },
         "43" : {
            "name" : "E2E_P06Protect",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P06Protect(const E2E_P06ConfigType* ConfigPtr,E2E_P06ProtectStateType* StatePtr,uint8* DataPtr,uint16 Length);"
         },
         "45" : {
            "name" : "E2E_P06Check",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P06Check(const E2E_P06ConfigType* ConfigPtr,E2E_P06CheckStateType* StatePtr,const uint8* DataPtr,uint16 Length);"
         },
         "46" : {
            "name" : "E2E_P06CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P06CheckInit(E2E_P06CheckStateType* StatePtr);"
         },
         "48" : {
            "name" : "E2E_SMCheck",
            "param" : 3,
            "proto" : "Std_ReturnType E2E_SMCheck(E2E_PCheckStatusType ProfileStatus,const E2E_SMConfigType* ConfigPtr,E2E_SMCheckStateType* StatePtr);"
         },
         "49" : {
            "name" : "E2E_SMCheckInit",
            "param" : 2,
            "proto" : "Std_ReturnType E2E_SMCheckInit(E2E_SMCheckStateType* StatePtr,const E2E_SMConfigType* ConfigPtr);"
         },
         "56" : {
            "name" : "E2E_P11Check",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P11Check(const E2E_P11ConfigType* ConfigPtr,E2E_P11CheckStateType StatePtr,const uint8* DataPtr,uint16 Length);"
         },
         "59" : {
            "name" : "E2E_P11Protect",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P11Protect(const E2E_P11ConfigType* ConfigPtr,E2E_P11ProtectStateType StatePtr,uint8 DataPtr,uint16 Length);"
         },
         "60" : {
            "name" : "E2E_P11ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P11ProtectInit(E2E_P11ProtectStateType* StatePtr);"
         },
         "61" : {
            "name" : "E2E_P22Check",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P22Check(const E2E_P22ConfigType* ConfigPtr,E2E_P22CheckStateType StatePtr,const uint8* DataPtr,uint16 Length);"
         },
         "64" : {
            "name" : "E2E_P22Protect",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P22Protect(const E2E_P22ConfigType* ConfigPtr,E2E_P22ProtectStateType StatePtr,uint8 DataPtr,uint16 Length);"
         },
         "65" : {
            "name" : "E2E_P22ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P22ProtectInit(E2E_P22ProtectStateType* StatePtr);"
         },
         "66" : {
            "name" : "E2E_P04mCheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P04mCheckInit(E2E_P04mCheckStateType* StatePtr);"
         },
         "67" : {
            "name" : "E2E_P04mSourceCheck",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P04mSourceCheck(const E2E_P04mConfigType* ConfigPtr,E2E_P04mCheckStateType* StatePtr,uint32 SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,const uint8* DataPtr,uint16 Length);"
         },
         "68" : {
            "name" : "E2E_P04mSinkCheck",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P04mSinkCheck(const E2E_P04mConfigType* ConfigPtr,E2E_P04mCheckStateType StatePtr,uint32* SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,const uint8* DataPtr,uint16 Length);"
         },
         "70" : {
            "name" : "E2E_P04mProtect",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P04mProtect(const E2E_P04mConfigType* ConfigPtr,E2E_P04mProtectStateType* StatePtr,uint32 SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,uint8* DataPtr,uint16 Length);"
         },
         "75" : {
            "name" : "E2E_P07mProtect",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P07mProtect(const E2E_P07mConfigType* ConfigPtr,E2E_P07mProtectStateType* StatePtr,uint32 SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,uint8* DataPtr,uint16 Length);"
         },
         "76" : {
            "name" : "E2E_P07mProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P07mProtectInit(E2E_P07mProtectStateType* StatePtr);"
         },
         "78" : {
            "name" : "E2E_P07mSinkCheck",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P07mSinkCheck(const E2E_P07mConfigType* ConfigPtr,E2E_P07mCheckStateType* StatePtr,uint32* SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,const uint8* DataPtr,uint16 Length);"
         },
         "79" : {
            "name" : "E2E_P07mSourceCheck",
            "param" : 7,
            "proto" : "Std_ReturnType E2E_P07mSourceCheck(const E2E_P07mConfigType* ConfigPtr,E2E_P07mCheckStateType* StatePtr,uint32 SourceID,Std_MessageTypeType MessageType,Std_MessageResultType MessageResult,const uint8* DataPtr,uint16 Length);"
         },
         "87" : {
            "name" : "E2E_P08Protect",
            "param" : 4,
            "proto" : "Std_ReturnType E2E_P08Protect(const E2E_P08ConfigType* ConfigPtr,E2E_P08ProtectStateType* StatePtr,uint8* DataPtr,uint32 Length);"
         },
         "88" : {
            "name" : "E2E_P08ProtectInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P08ProtectInit(E2E_P08ProtectStateType* StatePtr);"
         },
         "91" : {
            "name" : "E2E_P08CheckInit",
            "param" : 1,
            "proto" : "Std_ReturnType E2E_P08CheckInit(E2E_P08CheckStateType* StatePtr);"
         }
      }
   },
   "208" : {
      "abbreviation" : "Efx",
      "services" : {
         "113" : {
            "name" : "Efx_Hypot_u16u16_u16",
            "param" : 2,
            "proto" : "uint16 Efx_Hypot_u16u16_u16(uint16 x_value,uint16 y_value);"
         },
         "114" : {
            "name" : "Efx_Hypot_u8u8_u8",
            "param" : 2,
            "proto" : "uint8 Efx_Hypot_u8u8_u8(uint8 x_value,uint8 y_value);"
         },
         "117" : {
            "name" : "Efx_Sin_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_Sin_s32_s32(sint32 x_value);"
         },
         "118" : {
            "name" : "Efx_Sin_s16_s16",
            "param" : 1,
            "proto" : "sint16 Efx_Sin_s16_s16(sint16 x_value);"
         },
         "124" : {
            "name" : "Efx_Cos_s8_s8",
            "param" : 1,
            "proto" : "sint8 Efx_Cos_s8_s8(sint8 x_value);"
         },
         "128" : {
            "name" : "Efx_ArcSin_s32_s32",
            "param" : 1,
            "proto" : "sint32 Efx_ArcSin_s32_s32(sint32 x_value);"
         },
         "133" : {
            "name" : "Efx_ArcCos_s32_u32",
            "param" : 1,
            "proto" : "uint32 Efx_ArcCos_s32_u32(sint32 x_value);"
         },
         "147" : {
            "name" : "Efx_RampOut_s32",
            "param" : 1,
            "proto" : "sint32 Efx_RampOut_s32(const Efx_StateRamp_Type* State_cpcst);"
         },
         "148" : {
            "name" : "Efx_RampCalcJump",
            "param" : 2,
            "proto" : "void Efx_RampCalcJump(sint32 X_s32,Efx_StateRamp_Type* State_cpst);"
         },
         "150" : {
            "name" : "Efx_RampCalcSwitch",
            "param" : 4,
            "proto" : "sint32 Efx_RampCalcSwitch(sint32 Xa_s32,sint32 Xb_s32,boolean Switch,Efx_StateRamp_Type* State_cpst);"
         },
         "153" : {
            "name" : "Efx_RampCheckActivity",
            "param" : 1,
            "proto" : "boolean Efx_RampCheckActivity(const Efx_StateRamp_Type* State_cpst);"
         },
         "16" : {
            "name" : "Efx_HpFilter_u8_s16",
            "param" : 4,
            "proto" : "sint16 Efx_HpFilter_u8_s16(sint16 Yn_1,uint8 Xn,uint8 Xn_1,uint16 K);"
         },
         "17" : {
            "name" : "Efx_HpFilter_s8_s16",
            "param" : 4,
            "proto" : "sint16 Efx_HpFilter_s8_s16(sint16 Yn_1,sint8 Xn,sint8 Xn_1,uint16 K);"
         },
         "176" : {
            "name" : "Efx_Debounce_u8_u8",
            "param" : 4,
            "proto" : "boolean Efx_Debounce_u8_u8(boolean X,Efx_DebounceState_Type * State,const Efx_DebounceParam_Type * Param,sint32 dT);"
         },
         "178" : {
            "name" : "Efx_DebounceSetParam",
            "param" : 3,
            "proto" : "void Efx_DebounceSetParam(Efx_DebounceParam_Type * Param,sint16 THighLow,sint16 TLowHigh);"
         },
         "18" : {
            "name" : "Efx_HpFilter_u16_s32",
            "param" : 4,
            "proto" : "sint32 Efx_HpFilter_u16_s32(sint32 Yn_1,uint16 Xn,uint16 Xn_1,uint16 K);"
         },
         "19" : {
            "name" : "Efx_HpFilter_s16_s32",
            "param" : 4,
            "proto" : "sint32 Efx_HpFilter_s16_s32(sint32 Yn_1,sint16 Xn,sint16 Xn_1,uint16 K);"
         },
         "199" : {
            "name" : "Efx_EdgeRising_u8_u8",
            "param" : 2,
            "proto" : "boolean Efx_EdgeRising_u8_u8(boolean Inp_Val,boolean* Old_Val);"
         },
         "33" : {
            "name" : "Efx_PSetState",
            "param" : 2,
            "proto" : "void Efx_PSetState(sint32* P_s32,sint16 Y_s16);"
         },
         "41" : {
            "name" : "Efx_CalcTeQApp_s32",
            "param" : 2,
            "proto" : "sint32 Efx_CalcTeQApp_s32(sint32 T1rec_s32,sint32 dT_s32);"
         },
         "42" : {
            "name" : "Efx_PT1Calc",
            "param" : 4,
            "proto" : "void Efx_PT1Calc(sint32 X_s32,Efx_StatePT1_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32);"
         },
         "43" : {
            "name" : "Efx_PT1SetState",
            "param" : 3,
            "proto" : "void Efx_PT1SetState(Efx_StatePT1_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "44" : {
            "name" : "Efx_CalcTeQ_s32",
            "param" : 2,
            "proto" : "sint32 Efx_CalcTeQ_s32(sint32 T1rec_s32,sint32 dT_s32);"
         },
         "47" : {
            "name" : "Efx_DT1Typ2Calc",
            "param" : 5,
            "proto" : "void Efx_DT1Typ2Calc(sint32 X_s32,Efx_StateDT1Typ2_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32,sint32 dT_s32);"
         },
         "48" : {
            "name" : "Efx_DT1Typ1Calc",
            "param" : 5,
            "proto" : "void Efx_DT1Typ1Calc(sint32 X_s32,Efx_StateDT1Typ1_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32,sint32 dT_s32);"
         },
         "49" : {
            "name" : "Efx_DT1Typ1SetState",
            "param" : 4,
            "proto" : "void Efx_DT1Typ1SetState(Efx_StateDT1Typ1_Type* State_cpst,sint32 X1_s32,sint32 X2_s32,sint16 Y1_s16);"
         },
         "54" : {
            "name" : "Efx_PITyp2LimCalc",
            "param" : 5,
            "proto" : "void Efx_PITyp2LimCalc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "55" : {
            "name" : "Efx_PIDTyp1LimCalc",
            "param" : 5,
            "proto" : "void Efx_PIDTyp1LimCalc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         },
         "56" : {
            "name" : "Efx_PT1Typ1Calc",
            "param" : 4,
            "proto" : "void Efx_PT1Typ1Calc(sint32 X_s32,Efx_StatePT1_Type* State_cpst,sint32 K_s32,sint32 TeQ_s32);"
         },
         "60" : {
            "name" : "Efx_PDSetParam",
            "param" : 3,
            "proto" : "void Efx_PDSetParam(Efx_ParamPD_Type* Param_cpst,sint32 K_s32,sint32 Tv_s32);"
         },
         "64" : {
            "name" : "Efx_ICalc",
            "param" : 4,
            "proto" : "void Efx_ICalc(sint32 X_s32,Efx_StateI_Type* State_cpst,sint32 K_s32,sint32 dT_s32);"
         },
         "65" : {
            "name" : "Efx_ISetState",
            "param" : 3,
            "proto" : "void Efx_ISetState(Efx_StateI_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "70" : {
            "name" : "Efx_PITyp2Calc",
            "param" : 4,
            "proto" : "void Efx_PITyp2Calc(sint32 X_s32,Efx_StatePI_Type* State_cpst,const Efx_ParamPI_Type* Param_cpst,sint32 dT_s32);"
         },
         "71" : {
            "name" : "Efx_PISetState",
            "param" : 3,
            "proto" : "void Efx_PISetState(Efx_StatePI_Type* State_cpst,sint32 X1_s32,sint16 Y1_s16);"
         },
         "75" : {
            "name" : "Efx_PIDTyp1Calc",
            "param" : 4,
            "proto" : "void Efx_PIDTyp1Calc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,sint32 dT_s32);"
         },
         "76" : {
            "name" : "Efx_PIDTyp2Calc",
            "param" : 4,
            "proto" : "void Efx_PIDTyp2Calc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,sint32 dT_s32);"
         },
         "79" : {
            "name" : "Efx_PIDTyp2LimCalc",
            "param" : 5,
            "proto" : "void Efx_PIDTyp2LimCalc(sint32 X_s32,Efx_StatePID_Type* State_cpst,const Efx_ParamPID_Type* Param_cpst,const Efx_Limits_Type* Limit_cpst,sint32 dT_s32);"
         }
      }
   },
   "209" : {
      "abbreviation" : "Ifl",
      "services" : {
         "1" : {
            "name" : "Ifl_DPSearch_f32",
            "param" : 4,
            "proto" : "void Ifl_DPSearch_f32(Ifl_DPResultF32_Type* dpResult,float32 Xin,uint32 N,const float32* X_array);"
         },
         "16" : {
            "name" : "Ifl_IntIpoCur_f32_f32",
            "param" : 4,
            "proto" : "float32 Ifl_IntIpoCur_f32_f32(float32 X_in,uint32 N,const float32* X_array,const float32* Val_array);"
         },
         "17" : {
            "name" : "Ifl_IntIpoMap_f32f32_f32",
            "param" : 7,
            "proto" : "float32 Ifl_IntIpoMap_f32f32_f32(float32 Xin,float32 Yin,uint32 Nx,uint32 Ny,const float32* X_array,const float32* Y_array,const float32* Val_array);"
         },
         "5" : {
            "name" : "Ifl_IpoMap_f32",
            "param" : 4,
            "proto" : "float32 Ifl_IpoMap_f32(const Ifl_DPResultF32_Type* dpResultX,const Ifl_DPResultF32_Type* dpResultY,uint32 num_value,const float32* Val_array);"
         },
         "6" : {
            "name" : "Ifl_Interpolate_f32",
            "param" : 3,
            "proto" : "float32 Ifl_Interpolate_f32(float32 Value1,float32 Value2,float32 Coef);"
         }
      }
   },
   "21" : {
      "abbreviation" : "Fee",
      "services" : {
         "0" : {
            "name" : "Fee_Init",
            "param" : 1,
            "proto" : "void Fee_Init(const Fee_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Fee_SetMode",
            "param" : 1,
            "proto" : "void Fee_SetMode(MemIf_ModeType Mode);"
         },
         "16" : {
            "name" : "Fee_JobEndNotification",
            "param" : 0,
            "proto" : "void Fee_JobEndNotification();"
         },
         "17" : {
            "name" : "Fee_JobErrorNotification",
            "param" : 0,
            "proto" : "void Fee_JobErrorNotification();"
         },
         "18" : {
            "name" : "Fee_MainFunction",
            "param" : 0,
            "proto" : "void Fee_MainFunction();"
         },
         "3" : {
            "name" : "Fee_Write",
            "param" : 2,
            "proto" : "Std_ReturnType Fee_Write(uint16 BlockNumber,const uint8* DataBufferPtr);"
         },
         "4" : {
            "name" : "Fee_Cancel",
            "param" : 0,
            "proto" : "void Fee_Cancel();"
         },
         "5" : {
            "name" : "Fee_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Fee_GetStatus();"
         },
         "6" : {
            "name" : "Fee_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Fee_GetJobResult();"
         },
         "7" : {
            "name" : "Fee_InvalidateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Fee_InvalidateBlock(uint16 BlockNumber);"
         }
      }
   },
   "210" : {
      "abbreviation" : "Mfl",
      "services" : {
         "101" : {
            "name" : "Mfl_ArrayAverage_f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_ArrayAverage_f32_f32(const float32* Array,uint32 Count);"
         },
         "11" : {
            "name" : "Mfl_Ceil_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Ceil_f32(float32 ValValue);"
         },
         "112" : {
            "name" : "Mfl_Hypot_f32f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Hypot_f32f32_f32(float32 x_value,float32 y_value);"
         },
         "12" : {
            "name" : "Mfl_Floor_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Floor_f32(float32 ValValue);"
         },
         "144" : {
            "name" : "Mfl_RampCalc",
            "param" : 4,
            "proto" : "void Mfl_RampCalc(float32 X_f32,Mfl_StateRamp_Type* State_cpst,const Mfl_ParamRamp_Type* Param_cpcst,float32 dT_f32);"
         },
         "145" : {
            "name" : "Mfl_RampInitState",
            "param" : 2,
            "proto" : "void Mfl_RampInitState(Mfl_StateRamp_Type* State_cpst,float32 Val_f32);"
         },
         "146" : {
            "name" : "Mfl_RampSetParam",
            "param" : 3,
            "proto" : "void Mfl_RampSetParam(Mfl_ParamRamp_Type* Param_cpst,float32 SlopePosVal_f32,float32 SlopeNegVal_f32);"
         },
         "147" : {
            "name" : "Mfl_RampOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_RampOut_f32(const Mfl_StateRamp_Type* State_cpcst);"
         },
         "151" : {
            "name" : "Mfl_RampCheckActivity",
            "param" : 1,
            "proto" : "boolean Mfl_RampCheckActivity(const Mfl_StateRamp_Type* State_cpst);"
         },
         "16" : {
            "name" : "Mfl_PCalc",
            "param" : 3,
            "proto" : "void Mfl_PCalc(float32 X_f32,float32* P_pf32,float32 K_f32);"
         },
         "163" : {
            "name" : "Mfl_HystLeftRight_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystLeftRight_f32_u8(float32 X,float32 Lsp,float32 Rsp,uint8* State);"
         },
         "165" : {
            "name" : "Mfl_HystDeltaRight_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystDeltaRight_f32_u8(float32 X,float32 Delta,float32 Rsp,const uint8* State);"
         },
         "167" : {
            "name" : "Mfl_HystLeftDelta_f32_u8",
            "param" : 4,
            "proto" : "boolean Mfl_HystLeftDelta_f32_u8(float32 X,float32 Lsp,float32 Delta,uint8* State);"
         },
         "176" : {
            "name" : "Mfl_Debounce_u8_u8",
            "param" : 4,
            "proto" : "boolean Mfl_Debounce_u8_u8(boolean X,Mfl_DebounceState_Type* State,const Mfl_DebounceParam_Type* Param,float32 dT);"
         },
         "181" : {
            "name" : "Mfl_SortAscend_f32",
            "param" : 2,
            "proto" : "void Mfl_SortAscend_f32(float32* Array,uint16 Num);"
         },
         "188" : {
            "name" : "Mfl_ArcSin_f32",
            "param" : 1,
            "proto" : "float32 Mfl_ArcSin_f32(float32 value);"
         },
         "191" : {
            "name" : "Mfl_ArcTan2_f32",
            "param" : 2,
            "proto" : "float32 Mfl_ArcTan2_f32(float32 y,float32 x);"
         },
         "192" : {
            "name" : "Mfl_DT1Typ2Calc",
            "param" : 5,
            "proto" : "void Mfl_DT1Typ2Calc(float32 X_f32,Mfl_StateDT1Typ2_Type* State_cpst,float32 K_f32,float32 TeQ_f32,float32 dT_f32);"
         },
         "193" : {
            "name" : "Mfl_DT1Typ2SetState",
            "param" : 3,
            "proto" : "void Mfl_DT1Typ2SetState(Mfl_StateDT1Typ2_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "194" : {
            "name" : "Mfl_DT1Typ2Out_f32",
            "param" : 1,
            "proto" : "float32 Mfl_DT1Typ2Out_f32(const Mfl_StateDT1Typ2_Type* State_cpst);"
         },
         "196" : {
            "name" : "Mfl_PITyp2LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PITyp2LimCalc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "197" : {
            "name" : "Mfl_PIDTyp1LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PIDTyp1LimCalc(float32 X_f32,Mfl_StatePID_Type* State_cpst,const Mfl_ParamPID_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "198" : {
            "name" : "Mfl_PIDTyp2LimCalc",
            "param" : 5,
            "proto" : "void Mfl_PIDTyp2LimCalc(float32 X_f32,Mfl_StatePID_Type* State_cpst,const Mfl_ParamPID_Type* Param_cpst,const Mfl_Limits_Type* Limit_cpst,float32 dT_f32);"
         },
         "200" : {
            "name" : "Mfl_DebounceSetParam",
            "param" : 3,
            "proto" : "void Mfl_DebounceSetParam(Mfl_DebounceParam_Type* Param,float32 THighLow,float32 TLowHigh);"
         },
         "201" : {
            "name" : "Mfl_CtrlSetLimits",
            "param" : 3,
            "proto" : "void Mfl_CtrlSetLimits(Mfl_Limits_Type* Limit_cpst,float32 Min_f32,float32 Max_f32);"
         },
         "202" : {
            "name" : "Mfl_RampCalcSwitch",
            "param" : 4,
            "proto" : "float32 Mfl_RampCalcSwitch(float32 Xa_f32,float32 Xb_f32,boolean Switch,Mfl_StateRamp_Type* State_cpst);"
         },
         "255" : {
            "name" : "Mfl_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mfl_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "26" : {
            "name" : "Mfl_PT1Calc",
            "param" : 4,
            "proto" : "void Mfl_PT1Calc(float32 X_f32,Mfl_StatePT1_Type* State_cpst,float32 K_f32,float32 TeQ_f32);"
         },
         "27" : {
            "name" : "Mfl_PT1SetState",
            "param" : 3,
            "proto" : "void Mfl_PT1SetState(Mfl_StatePT1_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "28" : {
            "name" : "Mfl_CalcTeQ_f32",
            "param" : 2,
            "proto" : "float32 Mfl_CalcTeQ_f32(float32 T1rec_f32,float32 dT_f32);"
         },
         "30" : {
            "name" : "Mfl_CalcTeQApp_f32",
            "param" : 2,
            "proto" : "float32 Mfl_CalcTeQApp_f32(float32 T1rec_f32,float32 dT_f32);"
         },
         "32" : {
            "name" : "Mfl_DT1Typ1Calc",
            "param" : 5,
            "proto" : "void Mfl_DT1Typ1Calc(float32 X_f32,Mfl_StateDT1Typ1_Type* State_cpst,float32 K_f32,float32 TeQ_f32,float32 dT_f32);"
         },
         "34" : {
            "name" : "Mfl_DT1Typ1SetState",
            "param" : 4,
            "proto" : "void Mfl_DT1Typ1SetState(Mfl_StateDT1Typ1_Type* State_cpst,float32 X1_f32,float32 X2_f32,float32 Y1_f32);"
         },
         "35" : {
            "name" : "Mfl_DT1Typ1Out_f32",
            "param" : 1,
            "proto" : "float32 Mfl_DT1Typ1Out_f32(const Mfl_StateDT1Typ1_Type* State_cpst);"
         },
         "43" : {
            "name" : "Mfl_PDSetState",
            "param" : 3,
            "proto" : "void Mfl_PDSetState(Mfl_StatePD_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "44" : {
            "name" : "Mfl_PDSetParam",
            "param" : 3,
            "proto" : "void Mfl_PDSetParam(Mfl_ParamPD_Type* Param_cpst,float32 K_f32,float32 Tv_f32);"
         },
         "45" : {
            "name" : "Mfl_PDOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PDOut_f32(const Mfl_StatePD_Type* State_cpst);"
         },
         "49" : {
            "name" : "Mfl_ISetState",
            "param" : 3,
            "proto" : "void Mfl_ISetState(Mfl_StateI_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "51" : {
            "name" : "Mfl_IOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_IOut_f32(const Mfl_StateI_Type* State_cpst);"
         },
         "54" : {
            "name" : "Mfl_PITyp2Calc",
            "param" : 4,
            "proto" : "void Mfl_PITyp2Calc(float32 X_f32,Mfl_StatePI_Type* State_cpst,const Mfl_ParamPI_Type* Param_cpst,float32 dT_f32);"
         },
         "55" : {
            "name" : "Mfl_PISetState",
            "param" : 3,
            "proto" : "void Mfl_PISetState(Mfl_StatePI_Type* State_cpst,float32 X1_f32,float32 Y1_f32);"
         },
         "56" : {
            "name" : "Mfl_PISetParam",
            "param" : 3,
            "proto" : "void Mfl_PISetParam(Mfl_ParamPI_Type* Param_cpst,float32 K_f32,float32 Tnrec_f32);"
         },
         "57" : {
            "name" : "Mfl_PIOut_f32",
            "param" : 1,
            "proto" : "float32 Mfl_PIOut_f32(const Mfl_StatePI_Type* State_cpst);"
         },
         "59" : {
            "name" : "Mfl_PIDTyp2Calc",
            "param" : 4,
            "proto" : "void Mfl_PIDTyp2Calc(float32 X_f32,Mfl_StatePID_Type* State_cpst,const Mfl_ParamPID_Type* Param_cpst,float32 dT_f32);"
         },
         "60" : {
            "name" : "Mfl_PIDSetState",
            "param" : 4,
            "proto" : "void Mfl_PIDSetState(Mfl_StatePID_Type* State_cpst,float32 X1_f32,float32 X2_f32,float32 Y1_f32);"
         },
         "61" : {
            "name" : "Mfl_PIDSetParam",
            "param" : 4,
            "proto" : "void Mfl_PIDSetParam(Mfl_ParamPID_Type* Param_cpst,float32 K_f32,float32 Tv_f32,float32 Tnrec_f32);"
         },
         "64" : {
            "name" : "Mfl_Abs_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Abs_f32(float32 ValValue);"
         },
         "72" : {
            "name" : "Mfl_Limit_f32",
            "param" : 3,
            "proto" : "float32 Mfl_Limit_f32(float32 val,float32 lowLim,float32 upLim);"
         },
         "80" : {
            "name" : "Mfl_Pow_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Pow_f32(float32 ValBase,float32 ValExp);"
         },
         "81" : {
            "name" : "Mfl_Sqrt_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Sqrt_f32(float32 ValValue);"
         },
         "85" : {
            "name" : "Mfl_Sin_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Sin_f32(float32 value);"
         },
         "86" : {
            "name" : "Mfl_Cos_f32",
            "param" : 1,
            "proto" : "float32 Mfl_Cos_f32(float32 value);"
         },
         "91" : {
            "name" : "Mfl_arcTan2_f32",
            "param" : 2,
            "proto" : "float32 Mfl_arcTan2_f32(float32 X1_f32,float32 X2_f32);"
         },
         "97" : {
            "name" : "Mfl_Average_f32_f32",
            "param" : 2,
            "proto" : "float32 Mfl_Average_f32_f32(float32 value1,float32 value2);"
         }
      }
   },
   "211" : {
      "abbreviation" : "Mfx",
      "services" : {
         "475" : {
            "name" : "Mfx_GetVersionInfo",
            "param" : 1,
            "proto" : "void Mfx_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "212" : {
      "abbreviation" : "Xcp",
      "services" : {
         "0" : {
            "name" : "Xcp_Init",
            "param" : 1,
            "proto" : "void Xcp_Init(const Xcp_ConfigType* Xcp_ConfigPtr);"
         },
         "1" : {
            "name" : "Xcp_GetVersionInfo",
            "param" : 1,
            "proto" : "void Xcp_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "Xcp_MainFunction",
            "param" : 0,
            "proto" : "void Xcp_MainFunction();"
         },
         "64" : {
            "name" : "Xcp__Lo_TxConfirmation",
            "param" : 2,
            "proto" : "void Xcp__Lo_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         }
      }
   },
   "213" : {
      "abbreviation" : "Ifx",
      "services" : {}
   },
   "214" : {
      "abbreviation" : "Bmc",
      "services" : {
         "1" : {
            "name" : "Bmc_FlagTestAndSet",
            "param" : 1,
            "proto" : "boolean Bmc_FlagTestAndSet(volatile boolean* Object);"
         },
         "2" : {
            "name" : "Bmc_FlagClear",
            "param" : 1,
            "proto" : "void Bmc_FlagClear(volatile boolean* Object);"
         },
         "255" : {
            "name" : "Bmc_GetVersionInfo",
            "param" : 1,
            "proto" : "void Bmc_GetVersionInfo(Std_VersionInfoType* Versioninfo);"
         },
         "3" : {
            "name" : "Bmc_ThreadFence",
            "param" : 0,
            "proto" : "void Bmc_ThreadFence();"
         }
      }
   },
   "22" : {
      "abbreviation" : "MemIf",
      "services" : {
         "1" : {
            "name" : "MemIf_SetMode",
            "param" : 1,
            "proto" : "void MemIf_SetMode(MemIf_ModeType Mode);"
         }
      }
   },
   "23" : {
      "abbreviation" : "BndM",
      "services" : {
         "1" : {
            "name" : "BndM_Init",
            "param" : 1,
            "proto" : "void BndM_Init(const BndM_ConfigType* ConfigPtr);"
         },
         "2" : {
            "name" : "BndM_GetVersionInfo",
            "param" : 1,
            "proto" : "void BndM_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "BndM_WriteStart",
            "param" : 0,
            "proto" : "Std_ReturnType BndM_WriteStart();"
         },
         "6" : {
            "name" : "BndM_WriteFinalize",
            "param" : 0,
            "proto" : "Std_ReturnType BndM_WriteFinalize();"
         },
         "7" : {
            "name" : "BndM_WriteCancel",
            "param" : 0,
            "proto" : "void BndM_WriteCancel();"
         },
         "8" : {
            "name" : "BndM_JobEndNotification",
            "param" : 0,
            "proto" : "void BndM_JobEndNotification();"
         },
         "85" : {
            "name" : "BndM_MainFunction",
            "param" : 0,
            "proto" : "void BndM_MainFunction();"
         },
         "86" : {
            "name" : "Xxx_BndMWriteStartFinish",
            "param" : 2,
            "proto" : "void Xxx_BndMWriteStartFinish(BndM_BlockIdType BlockId,BndM_ResultType result);"
         },
         "87" : {
            "name" : "Xxx_BndMWriteBlockFinish",
            "param" : 2,
            "proto" : "void Xxx_BndMWriteBlockFinish(BndM_BlockIdType BlockId,BndM_ResultType result);"
         },
         "88" : {
            "name" : "Xxx_BndMWriteFinalizeFinish",
            "param" : 2,
            "proto" : "void Xxx_BndMWriteFinalizeFinish(BndM_BlockIdType BlockId,BndM_ResultType result);"
         },
         "9" : {
            "name" : "BndM_JobErrorNotification",
            "param" : 0,
            "proto" : "void BndM_JobErrorNotification();"
         }
      }
   },
   "254" : {
      "abbreviation" : "IO_HW_Abstraction",
      "services" : {
         "16" : {
            "name" : "IoHwAb_GetVersionInfo",
            "param" : 1,
            "proto" : "void IoHwAb_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "160" : {
            "name" : "IoHwAb_OcuNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_OcuNotification_channel_();"
         },
         "192" : {
            "name" : "IoHwAb_Dcm_Read_EcuSignalName_",
            "param" : 1,
            "proto" : "void IoHwAb_Dcm_Read_EcuSignalName_(_EcuSignalDataType_* signal);"
         },
         "32" : {
            "name" : "IoHwAb_AdcNotification_groupID_",
            "param" : 0,
            "proto" : "void IoHwAb_AdcNotification_groupID_();"
         },
         "48" : {
            "name" : "IoHwAb_PwmNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_PwmNotification_channel_();"
         },
         "64" : {
            "name" : "IoHwAb_IcuNotification_channel_",
            "param" : 0,
            "proto" : "void IoHwAb_IcuNotification_channel_();"
         },
         "96" : {
            "name" : "IoHwAb_Pwm_NotifyReadyForPowerState_Mode_",
            "param" : 0,
            "proto" : "void IoHwAb_Pwm_NotifyReadyForPowerState_Mode_();"
         }
      }
   },
   "255;2048-4095" : {
      "abbreviation" : "Complex_Drivers",
      "services" : {}
   },
   "29" : {
      "abbreviation" : "Nm",
      "services" : {
         "0" : {
            "name" : "Nm_Init",
            "param" : 1,
            "proto" : "void Nm_Init(const Nm_ConfigType* ConfigPtr);"
         },
         "1" : {
            "name" : "Nm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_PassiveStartUp(NetworkHandleType NetworkHandle);"
         },
         "10" : {
            "name" : "Nm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "11" : {
            "name" : "Nm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetLocalNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "13" : {
            "name" : "Nm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_CheckRemoteSleepIndication(NetworkHandleType nmNetworkHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "14" : {
            "name" : "Nm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType Nm_GetState(NetworkHandleType nmNetworkHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "15" : {
            "name" : "Nm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Nm_GetVersionInfo(Std_VersionInfoType* nmVerInfoPtr);"
         },
         "16" : {
            "name" : "Nm_MainFunction",
            "param" : 0,
            "proto" : "void Nm_MainFunction();"
         },
         "17" : {
            "name" : "Nm_NetworkStartIndication",
            "param" : 1,
            "proto" : "void Nm_NetworkStartIndication(NetworkHandleType nmNetworkHandle);"
         },
         "18" : {
            "name" : "Nm_NetworkMode",
            "param" : 1,
            "proto" : "void Nm_NetworkMode(NetworkHandleType nmNetworkHandle);"
         },
         "19" : {
            "name" : "Nm_PrepareBusSleepMode",
            "param" : 1,
            "proto" : "void Nm_PrepareBusSleepMode(NetworkHandleType nmNetworkHandle);"
         },
         "2" : {
            "name" : "Nm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_NetworkRequest(NetworkHandleType NetworkHandle);"
         },
         "20" : {
            "name" : "Nm_BusSleepMode",
            "param" : 1,
            "proto" : "void Nm_BusSleepMode(NetworkHandleType nmNetworkHandle);"
         },
         "21" : {
            "name" : "Nm_PduRxIndication",
            "param" : 1,
            "proto" : "void Nm_PduRxIndication(NetworkHandleType nmNetworkHandle);"
         },
         "22" : {
            "name" : "Nm_StateChangeNotification",
            "param" : 3,
            "proto" : "void Nm_StateChangeNotification(NetworkHandleType nmNetworkHandle,Nm_StateType nmPreviousState,Nm_StateType nmCurrentState);"
         },
         "23" : {
            "name" : "Nm_RemoteSleepIndication",
            "param" : 1,
            "proto" : "void Nm_RemoteSleepIndication(NetworkHandleType nmNetworkHandle);"
         },
         "24" : {
            "name" : "Nm_RemoteSleepCancellation",
            "param" : 1,
            "proto" : "void Nm_RemoteSleepCancellation(NetworkHandleType nmNetworkHandle);"
         },
         "25" : {
            "name" : "Nm_SynchronizationPoint",
            "param" : 1,
            "proto" : "void Nm_SynchronizationPoint(NetworkHandleType nmNetworkHandle);"
         },
         "26" : {
            "name" : "Nm_RepeatMessageIndication",
            "param" : 2,
            "proto" : "void Nm_RepeatMessageIndication(NetworkHandleType nmNetworkHandle,boolean pnLearningBitSet);"
         },
         "27" : {
            "name" : "Nm_TxTimeoutException",
            "param" : 1,
            "proto" : "void Nm_TxTimeoutException(NetworkHandleType nmNetworkHandle);"
         },
         "29" : {
            "name" : "Nm_CarWakeUpIndication",
            "param" : 1,
            "proto" : "void Nm_CarWakeUpIndication(NetworkHandleType nmChannelHandle);"
         },
         "3" : {
            "name" : "Nm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_NetworkRelease(NetworkHandleType NetworkHandle);"
         },
         "30" : {
            "name" : "Nm_CoordReadyToSleepIndication",
            "param" : 1,
            "proto" : "void Nm_CoordReadyToSleepIndication(NetworkHandleType nmChannelHandle);"
         },
         "31" : {
            "name" : "Nm_CoordReadyToSleepCancellation",
            "param" : 1,
            "proto" : "void Nm_CoordReadyToSleepCancellation(NetworkHandleType nmChannelHandle);"
         },
         "32" : {
            "name" : "_NmCarWakeUpCallout_",
            "param" : 1,
            "proto" : "void _NmCarWakeUpCallout_(NetworkHandleType nmNetworkHandle);"
         },
         "33" : {
            "name" : "Nm_SynchronizeMode",
            "param" : 1,
            "proto" : "void Nm_SynchronizeMode(NetworkHandleType nmNetworkHandle);"
         },
         "34" : {
            "name" : "Nm_PnLearningRequest",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_PnLearningRequest(NetworkHandleType NetworkHandle);"
         },
         "35" : {
            "name" : "Nm_ForwardSynchronizedPncShutdown",
            "param" : 0,
            "proto" : "void Nm_ForwardSynchronizedPncShutdown();"
         },
         "36" : {
            "name" : "Nm_RequestSynchronizedPncShutdown",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_RequestSynchronizedPncShutdown(NetworkHandleType NetworkHandle,PNCHandleType PncId);"
         },
         "4" : {
            "name" : "Nm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_DisableCommunication(NetworkHandleType NetworkHandle);"
         },
         "5" : {
            "name" : "Nm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_EnableCommunication(NetworkHandleType NetworkHandle);"
         },
         "6" : {
            "name" : "Nm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_SetUserData(NetworkHandleType NetworkHandle,const uint8* nmUserDataPtr);"
         },
         "7" : {
            "name" : "Nm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetUserData(NetworkHandleType NetworkHandle,uint8* nmUserDataPtr);"
         },
         "8" : {
            "name" : "Nm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType Nm_GetPduData(NetworkHandleType NetworkHandle,uint8* nmPduData);"
         },
         "9" : {
            "name" : "Nm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType Nm_RepeatMessageRequest(NetworkHandleType NetworkHandle);"
         }
      }
   },
   "31" : {
      "abbreviation" : "CanNm",
      "services" : {
         "0" : {
            "name" : "CanNm_Init",
            "param" : 1,
            "proto" : "void CanNm_Init(const CanNm_ConfigType* cannmConfigPtr);"
         },
         "1" : {
            "name" : "CanNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "12" : {
            "name" : "CanNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "16" : {
            "name" : "CanNm_DeInit",
            "param" : 0,
            "proto" : "void CanNm_DeInit();"
         },
         "19" : {
            "name" : "CanNm_MainFunction",
            "param" : 0,
            "proto" : "void CanNm_MainFunction();"
         },
         "192" : {
            "name" : "CanNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_RequestBusSynchronization(NetworkHandleType nmChannelHandle);"
         },
         "2" : {
            "name" : "CanNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType CanNm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "208" : {
            "name" : "CanNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_CheckRemoteSleepIndication(NetworkHandleType nmChannelHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "23" : {
            "name" : "CanNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "241" : {
            "name" : "CanNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanNm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "4" : {
            "name" : "CanNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_SetUserData(NetworkHandleType nmChannelHandle,const uint8* nmUserDataPtr);"
         },
         "5" : {
            "name" : "CanNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetUserData(NetworkHandleType nmChannelHandle,uint8* nmUserDataPtr);"
         },
         "6" : {
            "name" : "CanNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "64" : {
            "name" : "CanNm_TxConfirmation",
            "param" : 2,
            "proto" : "void CanNm_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "CanNm_RxIndication",
            "param" : 2,
            "proto" : "void CanNm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "CanNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType CanNm_GetLocalNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         }
      }
   },
   "32" : {
      "abbreviation" : "FrNm",
      "services" : {
         "1" : {
            "name" : "FrNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_PassiveStartUp(NetworkHandleType NetworkHandle);"
         },
         "10" : {
            "name" : "FrNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "11" : {
            "name" : "FrNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetLocalNodeIdentifier(NetworkHandleType NetworkHandle,uint8* nmNodeIdPtr);"
         },
         "12" : {
            "name" : "FrNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "13" : {
            "name" : "FrNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_CheckRemoteSleepIndication(NetworkHandleType NetworkHandle,boolean* nmRemoteSleepIndPtr);"
         },
         "16" : {
            "name" : "FrNm_StartupError",
            "param" : 1,
            "proto" : "void FrNm_StartupError(NetworkHandleType NetworkHandle);"
         },
         "18" : {
            "name" : "FrNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "192" : {
            "name" : "FrNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_RequestBusSynchronization(NetworkHandleType NetworkHandle);"
         },
         "2" : {
            "name" : "FrNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_NetworkRequest(NetworkHandleType NetworkHandle);"
         },
         "243" : {
            "name" : "FrNm_RequestSynchronizedPncShutdown",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_RequestSynchronizedPncShutdown(NetworkHandleType nmChannelHandle,PNCHandleType pncId);"
         },
         "3" : {
            "name" : "FrNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_NetworkRelease(NetworkHandleType NetworkHandle);"
         },
         "5" : {
            "name" : "FrNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_EnableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "6" : {
            "name" : "FrNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_SetUserData(NetworkHandleType NetworkHandle,const uint8* nmUserDataPtr);"
         },
         "64" : {
            "name" : "FrNm_TxConfirmation",
            "param" : 2,
            "proto" : "void FrNm_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "FrNm_RxIndication",
            "param" : 2,
            "proto" : "void FrNm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "FrNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetUserData(NetworkHandleType NetworkHandle,uint8* nmUserDataPtr);"
         },
         "73" : {
            "name" : "FrNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "8" : {
            "name" : "FrNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType FrNm_GetPduData(NetworkHandleType NetworkHandle,uint8* nmPduData);"
         },
         "9" : {
            "name" : "FrNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType FrNm_RepeatMessageRequest(NetworkHandleType NetworkHandle);"
         }
      }
   },
   "33" : {
      "abbreviation" : "UdpNm",
      "services" : {
         "1" : {
            "name" : "UdpNm_Init",
            "param" : 1,
            "proto" : "void UdpNm_Init(const UdpNm_ConfigType* UdpNmConfigPtr);"
         },
         "10" : {
            "name" : "UdpNm_GetPduData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetPduData(NetworkHandleType nmChannelHandle,uint8* nmPduDataPtr);"
         },
         "11" : {
            "name" : "UdpNm_GetState",
            "param" : 3,
            "proto" : "Std_ReturnType UdpNm_GetState(NetworkHandleType nmChannelHandle,Nm_StateType* nmStatePtr,Nm_ModeType* nmModePtr);"
         },
         "12" : {
            "name" : "UdpNm_DisableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_DisableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "13" : {
            "name" : "UdpNm_EnableCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_EnableCommunication(NetworkHandleType nmChannelHandle);"
         },
         "14" : {
            "name" : "UdpNm_PassiveStartUp",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_PassiveStartUp(NetworkHandleType nmChannelHandle);"
         },
         "17" : {
            "name" : "UdpNm_CheckRemoteSleepIndication",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_CheckRemoteSleepIndication(NetworkHandleType nmChannelHandle,boolean* NmRemoteSleepIndPtr);"
         },
         "2" : {
            "name" : "UdpNm_NetworkRequest",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_NetworkRequest(NetworkHandleType nmChannelHandle);"
         },
         "20" : {
            "name" : "UdpNm_RequestBusSynchronization",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_RequestBusSynchronization(NetworkHandleType nmChannelHandle);"
         },
         "22" : {
            "name" : "UdpNm_SetSleepReadyBit",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_SetSleepReadyBit(NetworkHandleType nmChannelHandle,boolean nmSleepReadyBit);"
         },
         "3" : {
            "name" : "UdpNm_NetworkRelease",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_NetworkRelease(NetworkHandleType nmChannelHandle);"
         },
         "4" : {
            "name" : "UdpNm_SetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_SetUserData(NetworkHandleType nmChannelHandle,const uint8* nmUserDataPtr);"
         },
         "5" : {
            "name" : "UdpNm_GetUserData",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetUserData(NetworkHandleType nmChannelHandle,uint8* nmUserDataPtr);"
         },
         "6" : {
            "name" : "UdpNm_GetNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "64" : {
            "name" : "UdpNm_SoAdIfTxConfirmation",
            "param" : 2,
            "proto" : "void UdpNm_SoAdIfTxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "UdpNm_SoAdIfRxIndication",
            "param" : 2,
            "proto" : "void UdpNm_SoAdIfRxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "UdpNm_GetLocalNodeIdentifier",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_GetLocalNodeIdentifier(NetworkHandleType nmChannelHandle,uint8* nmNodeIdPtr);"
         },
         "73" : {
            "name" : "UdpNm_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "75" : {
            "name" : "UdpNm_RequestSynchronizedPncShutdown",
            "param" : 2,
            "proto" : "Std_ReturnType UdpNm_RequestSynchronizedPncShutdown(NetworkHandleType nmChannelHandle,PNCHandleType pncId);"
         },
         "8" : {
            "name" : "UdpNm_RepeatMessageRequest",
            "param" : 1,
            "proto" : "Std_ReturnType UdpNm_RepeatMessageRequest(NetworkHandleType nmChannelHandle);"
         },
         "9" : {
            "name" : "UdpNm_GetVersionInfo",
            "param" : 1,
            "proto" : "void UdpNm_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         }
      }
   },
   "34" : {
      "abbreviation" : "J1939Nm",
      "services" : {}
   },
   "35" : {
      "abbreviation" : "CanTp",
      "services" : {}
   },
   "36" : {
      "abbreviation" : "FrTp",
      "services" : {
         "16" : {
            "name" : "FrTp_MainFunction",
            "param" : 0,
            "proto" : "void FrTp_MainFunction();"
         },
         "64" : {
            "name" : "FrTp_TxConfirmation",
            "param" : 2,
            "proto" : "void FrTp_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "73" : {
            "name" : "FrTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrTp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "75" : {
            "name" : "FrTp_ChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType FrTp_ChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "76" : {
            "name" : "FrTp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType FrTp_CancelReceive(PduIdType RxPduId);"
         }
      }
   },
   "37" : {
      "abbreviation" : "J1939Tp",
      "services" : {
         "1" : {
            "name" : "J1939Tp_Init",
            "param" : 1,
            "proto" : "void J1939Tp_Init(const J1939Tp_ConfigType* ConfigPtr);"
         },
         "64" : {
            "name" : "J1939Tp_TxConfirmation",
            "param" : 2,
            "proto" : "void J1939Tp_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "J1939Tp_RxIndication",
            "param" : 2,
            "proto" : "void J1939Tp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "73" : {
            "name" : "J1939Tp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType J1939Tp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "74" : {
            "name" : "J1939Tp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Tp_CancelTransmit(PduIdType TxPduId);"
         },
         "76" : {
            "name" : "J1939Tp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType J1939Tp_CancelReceive(PduIdType RxPduId);"
         }
      }
   },
   "38" : {
      "abbreviation" : "FrArTp",
      "services" : {
         "16" : {
            "name" : "FrArTp_MainFunction",
            "param" : 0,
            "proto" : "void FrArTp_MainFunction();"
         },
         "64" : {
            "name" : "FrArTp_TxConfirmation",
            "param" : 2,
            "proto" : "void FrArTp_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "FrArTp_RxIndication",
            "param" : 2,
            "proto" : "void FrArTp_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "73" : {
            "name" : "FrArTp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrArTp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "76" : {
            "name" : "FrArTp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType FrArTp_CancelReceive(PduIdType RxPduId);"
         }
      }
   },
   "40" : {
      "abbreviation" : "Ea",
      "services" : {
         "16" : {
            "name" : "Ea_JobEndNotification",
            "param" : 0,
            "proto" : "void Ea_JobEndNotification();"
         },
         "18" : {
            "name" : "Ea_MainFunction",
            "param" : 0,
            "proto" : "void Ea_MainFunction();"
         },
         "2" : {
            "name" : "Ea_Read",
            "param" : 4,
            "proto" : "Std_ReturnType Ea_Read(uint16 BlockNumber,uint16 BlockOffset,uint8* DataBufferPtr,uint16 Length);"
         },
         "4" : {
            "name" : "Ea_Cancel",
            "param" : 0,
            "proto" : "void Ea_Cancel();"
         },
         "5" : {
            "name" : "Ea_GetStatus",
            "param" : 0,
            "proto" : "MemIf_StatusType Ea_GetStatus();"
         },
         "6" : {
            "name" : "Ea_GetJobResult",
            "param" : 0,
            "proto" : "MemIf_JobResultType Ea_GetJobResult();"
         },
         "7" : {
            "name" : "Ea_InvalidateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Ea_InvalidateBlock(uint16 BlockNumber);"
         },
         "8" : {
            "name" : "Ea_GetVersionInfo",
            "param" : 1,
            "proto" : "void Ea_GetVersionInfo(Std_VersionInfoType* VersionInfoPtr);"
         },
         "9" : {
            "name" : "Ea_EraseImmediateBlock",
            "param" : 1,
            "proto" : "Std_ReturnType Ea_EraseImmediateBlock(uint16 BlockNumber);"
         }
      }
   },
   "42" : {
      "abbreviation" : "BswM",
      "services" : {
         "0" : {
            "name" : "BswM_Init",
            "param" : 1,
            "proto" : "void BswM_Init(const BswM_ConfigType * ConfigPtr);"
         },
         "1" : {
            "name" : "BswM_GetVersionInfo",
            "param" : 1,
            "proto" : "void BswM_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "10" : {
            "name" : "BswM_LinSM_CurrentSchedule",
            "param" : 2,
            "proto" : "void BswM_LinSM_CurrentSchedule(NetworkHandleType Network,LinIf_SchHandleType CurrentSchedule);"
         },
         "12" : {
            "name" : "BswM_FrSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_FrSM_CurrentState(NetworkHandleType Network,FrSM_BswM_StateType CurrentState);"
         },
         "13" : {
            "name" : "BswM_EthSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_EthSM_CurrentState(NetworkHandleType Network,EthSM_NetworkModeStateType CurrentState);"
         },
         "14" : {
            "name" : "BswM_ComM_CurrentMode",
            "param" : 2,
            "proto" : "void BswM_ComM_CurrentMode(NetworkHandleType Network,ComM_ModeType RequestedMode);"
         },
         "16" : {
            "name" : "BswM_EcuM_CurrentWakeup",
            "param" : 2,
            "proto" : "void BswM_EcuM_CurrentWakeup(EcuM_WakeupSourceType source,EcuM_WakeupStatusType state);"
         },
         "17" : {
            "name" : "BswM_WdgM_RequestPartitionReset",
            "param" : 1,
            "proto" : "void BswM_WdgM_RequestPartitionReset(ApplicationType Application);"
         },
         "2" : {
            "name" : "BswM_RequestMode",
            "param" : 2,
            "proto" : "void BswM_RequestMode(BswM_UserType requesting_user,BswM_ModeType requested_mode);"
         },
         "20" : {
            "name" : "BswM_Dcm_ApplicationUpdated",
            "param" : 0,
            "proto" : "void BswM_Dcm_ApplicationUpdated();"
         },
         "21" : {
            "name" : "BswM_ComM_CurrentPNCMode",
            "param" : 2,
            "proto" : "void BswM_ComM_CurrentPNCMode(PNCHandleType PNC,ComM_PncModeType CurrentPncMode);"
         },
         "24" : {
            "name" : "BswM_J1939Nm_StateChangeNotification",
            "param" : 3,
            "proto" : "void BswM_J1939Nm_StateChangeNotification(NetworkHandleType Network,uint8 Node,Nm_StateType NmState);"
         },
         "3" : {
            "name" : "BswM_MainFunction",
            "param" : 0,
            "proto" : "void BswM_MainFunction();"
         },
         "30" : {
            "name" : "BswM_BswMPartitionRestarted",
            "param" : 0,
            "proto" : "void BswM_BswMPartitionRestarted();"
         },
         "32" : {
            "name" : "BswM_Sd_EventHandlerCurrentState",
            "param" : 2,
            "proto" : "void BswM_Sd_EventHandlerCurrentState(uint16 SdEventHandlerHandleId,Sd_EventHandlerCurrentStateType EventHandlerStatus);"
         },
         "33" : {
            "name" : "BswM_Sd_ConsumedEventGroupCurrentState",
            "param" : 2,
            "proto" : "void BswM_Sd_ConsumedEventGroupCurrentState(uint16 SdConsumedEventGroupHandleId,Sd_ConsumedEventGroupCurrentStateType ConsumedEventGroupState);"
         },
         "36" : {
            "name" : "BswM_Nm_CarWakeUpIndication",
            "param" : 1,
            "proto" : "void BswM_Nm_CarWakeUpIndication(NetworkHandleType Network);"
         },
         "39" : {
            "name" : "BswM_Nm_StateChangeNotification",
            "param" : 2,
            "proto" : "void BswM_Nm_StateChangeNotification(NetworkHandleType Network,Nm_StateType currentState);"
         },
         "4" : {
            "name" : "BswM_Deinit",
            "param" : 0,
            "proto" : "void BswM_Deinit();"
         },
         "40" : {
            "name" : "BswM_EcuM_CurrentState",
            "param" : 1,
            "proto" : "void BswM_EcuM_CurrentState(EcuM_StateType CurrentState);"
         },
         "41" : {
            "name" : "BswM_EcuM_RequestedState",
            "param" : 2,
            "proto" : "void BswM_EcuM_RequestedState(EcuM_StateType State,EcuM_RunStatusType CurrentState);"
         },
         "5" : {
            "name" : "BswM_CanSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_CanSM_CurrentState(NetworkHandleType Network,CanSM_BswMCurrentStateType CurrentState);"
         },
         "6" : {
            "name" : "BswM_Dcm_CommunicationMode_CurrentState",
            "param" : 2,
            "proto" : "void BswM_Dcm_CommunicationMode_CurrentState(NetworkHandleType Network,Dcm_CommunicationModeType RequestedMode);"
         },
         "9" : {
            "name" : "BswM_LinSM_CurrentState",
            "param" : 2,
            "proto" : "void BswM_LinSM_CurrentState(NetworkHandleType Network,LinSM_ModeType CurrentState);"
         }
      }
   },
   "43" : {
      "abbreviation" : "WdgIf",
      "services" : {
         "2" : {
            "name" : "WdgIf_SetTriggerCondition",
            "param" : 2,
            "proto" : "void WdgIf_SetTriggerCondition(uint8 DeviceIndex,uint16 Timeout);"
         }
      }
   },
   "48" : {
      "abbreviation" : "Mirror",
      "services" : {}
   },
   "49" : {
      "abbreviation" : "LdCom",
      "services" : {
         "1" : {
            "name" : "LdCom_Init",
            "param" : 1,
            "proto" : "void LdCom_Init(const LdCom_ConfigType* config);"
         },
         "3" : {
            "name" : "LdCom_GetVersionInfo",
            "param" : 1,
            "proto" : "void LdCom_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "69" : {
            "name" : "LdCom_TpRxIndication",
            "param" : 2,
            "proto" : "void LdCom_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "72" : {
            "name" : "LdCom_TpTxConfirmation",
            "param" : 2,
            "proto" : "void LdCom_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "LdCom_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType LdCom_Transmit(PduIdType Id,const PduInfoType* InfoPtr);"
         }
      }
   },
   "50" : {
      "abbreviation" : "Com",
      "services" : {
         "1" : {
            "name" : "Com_Init",
            "param" : 1,
            "proto" : "void Com_Init(const Com_ConfigType* config);"
         },
         "16" : {
            "name" : "Com_InvalidateSignal",
            "param" : 1,
            "proto" : "uint8 Com_InvalidateSignal(Com_SignalIdType SignalId);"
         },
         "23" : {
            "name" : "Com_TriggerIPDUSend",
            "param" : 1,
            "proto" : "Std_ReturnType Com_TriggerIPDUSend(PduIdType PduId);"
         },
         "24" : {
            "name" : "Com_MainFunctionRx",
            "param" : 0,
            "proto" : "void Com_MainFunctionRx();"
         },
         "25" : {
            "name" : "Com_MainFunctionTx",
            "param" : 0,
            "proto" : "void Com_MainFunctionTx();"
         },
         "27" : {
            "name" : "Com_InvalidateSignalGroup",
            "param" : 1,
            "proto" : "uint8 Com_InvalidateSignalGroup(Com_SignalGroupIdType SignalGroupId);"
         },
         "33" : {
            "name" : "Com_SendDynSignal",
            "param" : 3,
            "proto" : "uint8 Com_SendDynSignal(Com_SignalIdType SignalId,const void* SignalDataPtr,uint16 Length);"
         },
         "34" : {
            "name" : "Com_ReceiveDynSignal",
            "param" : 3,
            "proto" : "uint8 Com_ReceiveDynSignal(Com_SignalIdType SignalId,void* SignalDataPtr,uint16* Length);"
         },
         "35" : {
            "name" : "Com_SendSignalGroupArray",
            "param" : 2,
            "proto" : "uint8 Com_SendSignalGroupArray(Com_SignalGroupIdType SignalGroupId,const uint8* SignalGroupArrayPtr);"
         },
         "36" : {
            "name" : "Com_ReceiveSignalGroupArray",
            "param" : 2,
            "proto" : "uint8 Com_ReceiveSignalGroupArray(Com_SignalGroupIdType SignalGroupId,uint8* SignalGroupArrayPtr);"
         },
         "41" : {
            "name" : "Com_TxIpduCallout",
            "param" : 2,
            "proto" : "boolean Com_TxIpduCallout(PduIdType PduId,PduInfoType* PduInfoPtr);"
         },
         "42" : {
            "name" : "Com_RxIpduCallout",
            "param" : 2,
            "proto" : "boolean Com_RxIpduCallout(PduIdType PduId,const PduInfoType* PduInfoPtr);"
         },
         "5" : {
            "name" : "Com_DisableReceptionDM",
            "param" : 1,
            "proto" : "void Com_DisableReceptionDM(Com_IpduGroupIdType IpduGroupId);"
         },
         "6" : {
            "name" : "Com_EnableReceptionDM",
            "param" : 1,
            "proto" : "void Com_EnableReceptionDM(Com_IpduGroupIdType IpduGroupId);"
         },
         "64" : {
            "name" : "Com_TxConfirmation",
            "param" : 2,
            "proto" : "void Com_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "Com_RxIndication",
            "param" : 2,
            "proto" : "void Com_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "69" : {
            "name" : "Com_TpRxIndication",
            "param" : 2,
            "proto" : "void Com_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "7" : {
            "name" : "Com_GetStatus",
            "param" : 0,
            "proto" : "Com_StatusType Com_GetStatus();"
         },
         "72" : {
            "name" : "Com_TpTxConfirmation",
            "param" : 2,
            "proto" : "void Com_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         }
      }
   },
   "51" : {
      "abbreviation" : "PduR",
      "services" : {
         "240" : {
            "name" : "PduR_Init",
            "param" : 1,
            "proto" : "void PduR_Init(const PduR_PBConfigType* ConfigPtr);"
         },
         "241" : {
            "name" : "PduR_GetVersionInfo",
            "param" : 1,
            "proto" : "void PduR_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "242" : {
            "name" : "PduR_GetConfigurationId",
            "param" : 0,
            "proto" : "PduR_PBConfigIdType PduR_GetConfigurationId();"
         },
         "243" : {
            "name" : "PduR_EnableRouting",
            "param" : 1,
            "proto" : "void PduR_EnableRouting(PduR_RoutingPathGroupIdType id);"
         },
         "244" : {
            "name" : "PduR_DisableRouting",
            "param" : 2,
            "proto" : "void PduR_DisableRouting(PduR_RoutingPathGroupIdType id,boolean initialize);"
         },
         "64" : {
            "name" : "PduR__UserLo_TxConfirmation",
            "param" : 2,
            "proto" : "void PduR__UserLo_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "65" : {
            "name" : "PduR__UserLo_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType PduR__UserLo_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "66" : {
            "name" : "PduR__UserLo_RxIndication",
            "param" : 2,
            "proto" : "void PduR__UserLo_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "67" : {
            "name" : "PduR__UserLoTp_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType PduR__UserLoTp_CopyTxData(PduIdType id,const PduInfoType* info,const RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "69" : {
            "name" : "PduR__UserLoTp_RxIndication",
            "param" : 2,
            "proto" : "void PduR__UserLoTp_RxIndication(PduIdType id,Std_ReturnType result);"
         },
         "70" : {
            "name" : "PduR__UserLoTp_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType PduR__UserLoTp_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "72" : {
            "name" : "PduR__UserLoTp_TxConfirmation",
            "param" : 2,
            "proto" : "void PduR__UserLoTp_TxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "PduR__UserUp_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType PduR__UserUp_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "74" : {
            "name" : "PduR__UserUp_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType PduR__UserUp_CancelTransmit(PduIdType TxPduId);"
         },
         "76" : {
            "name" : "PduR__UserUp_CancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType PduR__UserUp_CancelReceive(PduIdType RxPduId);"
         }
      }
   },
   "52" : {
      "abbreviation" : "IpduM",
      "services" : {
         "64" : {
            "name" : "IpduM_TxConfirmation",
            "param" : 2,
            "proto" : "void IpduM_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "IpduM_RxIndication",
            "param" : 2,
            "proto" : "void IpduM_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         }
      }
   },
   "53" : {
      "abbreviation" : "Dcm",
      "services" : {
         "1" : {
            "name" : "Dcm_Init",
            "param" : 1,
            "proto" : "void Dcm_Init(const Dcm_ConfigType* ConfigPtr);"
         },
         "100" : {
            "name" : "Xxx_StopProtocol",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_StopProtocol(Dcm_ProtocolType ProtocolType,uint16 TesterSourceAddress,uint16 ConnectionId);"
         },
         "101" : {
            "name" : "Xxx_Indication",
            "param" : 8,
            "proto" : "Std_ReturnType Xxx_Indication(uint8 SID,const uint8* RequestData,uint32 DataSize,uint8 ReqType,uint16 ConnectionId,Dcm_NegativeResponseCodeType* ErrorCode,Dcm_ProtocolType ProtocolType,uint16 TesterSourceAddress);"
         },
         "102" : {
            "name" : "Xxx_Confirmation",
            "param" : 6,
            "proto" : "Std_ReturnType Xxx_Confirmation(uint8 SID,uint8 ReqType,uint16 ConnectionId,Dcm_ConfirmationStatusType ConfirmationStatus,Dcm_ProtocolType ProtocolType,uint16 TesterSourceAddress);"
         },
         "103" : {
            "name" : "Xxx_StartProtocol",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_StartProtocol(Dcm_ProtocolType ProtocolType,uint16 TesterSourceAddress,uint16 ConnectionId);"
         },
         "105" : {
            "name" : "Xxx_StopConfirmation",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_StopConfirmation(Dcm_ConfirmationStatusType ConfirmationStatus);"
         },
         "112" : {
            "name" : "Xxx_RequestResultsConfirmation",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_RequestResultsConfirmation(Dcm_ConfirmationStatusType ConfirmationStatus);"
         },
         "113" : {
            "name" : "Xxx_RequestResults",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_RequestResults(Dcm_OpStatusType OpStatus,[DcmDspRoutineSignalType* dataIn_1, ...DcmDspRoutineSignalType* dataIn_n],[const uint8* dataInVar],[DcmDspRoutineSignalType* dataOut_1, ...DcmDspRoutineSignalType* dataOut_n],[uint8* dataOutVar],[uint16* variableDataLength],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "114" : {
            "name" : "Dcm_ProcessRequestAddFile",
            "param" : 8,
            "proto" : "Std_ReturnType Dcm_ProcessRequestAddFile(Dcm_OpStatusType OpStatus,uint16 filePathAndNameLength,const uint8* filePathAndName,uint8 dataFormatIdentifier,uint64 fileSizeUncompressed,uint64 fileSizeCompressed,uint64* maxNumberOfBlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "115" : {
            "name" : "Dcm_ProcessRequestDeleteFile",
            "param" : 4,
            "proto" : "Std_ReturnType Dcm_ProcessRequestDeleteFile(Dcm_OpStatusType OpStatus,uint16 filePathAndNameLength,const uint8* filePathAndName,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "116" : {
            "name" : "Dcm_ProcessRequestReplaceFile",
            "param" : 8,
            "proto" : "Std_ReturnType Dcm_ProcessRequestReplaceFile(Dcm_OpStatusType OpStatus,uint16 filePathAndNameLength,const uint8* filePathAndName,uint8 dataFormatIdentifier,uint64 fileSizeUncompressed,uint64 fileSizeCompressed,uint64* maxNumberOfBlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "117" : {
            "name" : "Dcm_ProcessRequestReadFile",
            "param" : 8,
            "proto" : "Std_ReturnType Dcm_ProcessRequestReadFile(Dcm_OpStatusType OpStatus,uint16 filePathAndNameLength,const uint8* filePathAndName,uint8 dataFormatIdentifier,uint64 fileSizeUncompressed,uint64 fileSizeCompressed,uint64* maxNumberOfBlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "118" : {
            "name" : "Dcm_ProcessRequestReadDir",
            "param" : 6,
            "proto" : "Std_ReturnType Dcm_ProcessRequestReadDir(Dcm_OpStatusType OpStatus,uint16 filePathAndNameLength,const uint8* filePathAndName,uint64* dirInfoLength,uint64* maxNumberOfBlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "120" : {
            "name" : "Dcm_ReadFileOrDir",
            "param" : 4,
            "proto" : "Std_ReturnType Dcm_ReadFileOrDir(Dcm_OpStatusType OpStatus,uint64* DataLength,uint8* Data,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "121" : {
            "name" : "Dcm_SetDeauthenticatedRole",
            "param" : 2,
            "proto" : "Std_ReturnType Dcm_SetDeauthenticatedRole(uint16 connectionId,Dcm_AuthenticationRoleType deauthenticatedRole);"
         },
         "122" : {
            "name" : "Dcm_BndMWriteBlockFinish",
            "param" : 2,
            "proto" : "void Dcm_BndMWriteBlockFinish(BndM_BlockIdType BlockId,BndM_ResultType result);"
         },
         "13" : {
            "name" : "Dcm_GetSecurityLevel",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetSecurityLevel(Dcm_SecLevelType* SecLevel);"
         },
         "15" : {
            "name" : "Dcm_GetActiveProtocol",
            "param" : 3,
            "proto" : "Std_ReturnType Dcm_GetActiveProtocol(Dcm_ProtocolType* ActiveProtocolType,uint16* ConnectionId,uint16* TesterSourceAddress);"
         },
         "33" : {
            "name" : "Dcm_ComM_NoComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_NoComModeEntered(uint8 NetworkId);"
         },
         "34" : {
            "name" : "Dcm_ComM_SilentComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_SilentComModeEntered(uint8 NetworkId);"
         },
         "35" : {
            "name" : "Dcm_ComM_FullComModeEntered",
            "param" : 1,
            "proto" : "void Dcm_ComM_FullComModeEntered(uint8 NetworkId);"
         },
         "36" : {
            "name" : "Dcm_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dcm_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "37" : {
            "name" : "Dcm_MainFunction",
            "param" : 0,
            "proto" : "void Dcm_MainFunction();"
         },
         "38" : {
            "name" : "Xxx_ProcessTransferDataRead",
            "param" : 6,
            "proto" : "Dcm_ReturnReadMemoryType Xxx_ProcessTransferDataRead(Dcm_OpStatusType OpStatus,uint8 MemoryIdentifier,uint32 MemoryAddress,uint32 MemorySize,Dcm_RequestDataArrayType MemoryData,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "42" : {
            "name" : "Dcm_ResetToDefaultSession",
            "param" : 0,
            "proto" : "Std_ReturnType Dcm_ResetToDefaultSession();"
         },
         "43" : {
            "name" : "Dcm_DemTriggerOnDTCStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Dcm_DemTriggerOnDTCStatus(uint32 DTC,Dem_UdsStatusByteType DTCStatusOld,Dem_UdsStatusByteType DTCStatusNew);"
         },
         "45" : {
            "name" : "Dcm_TriggerOnEvent",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_TriggerOnEvent(uint8 RoeEventId);"
         },
         "48" : {
            "name" : "Xxx_ProcessRequestDownload",
            "param" : 7,
            "proto" : "Std_ReturnType Xxx_ProcessRequestDownload(Dcm_OpStatusType OpStatus,uint8 DataFormatIdentifier,uint8 MemoryIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint32* BlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "49" : {
            "name" : "Xxx_ProcessRequestUpload",
            "param" : 7,
            "proto" : "Std_ReturnType Xxx_ProcessRequestUpload(Dcm_OpStatusType OpStatus,uint8 DataFormatIdentifier,uint8 MemoryIdentifier,uint32 MemoryAddress,uint32 MemorySize,uint32* BlockLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "50" : {
            "name" : "_Module___DiagnosticService_",
            "param" : 3,
            "proto" : "Std_ReturnType _Module___DiagnosticService_(Dcm_ExtendedOpStatusType OpStatus,Dcm_MsgContextType* pMsgContext,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "51" : {
            "name" : "_Module___DiagnosticService___SubService_",
            "param" : 3,
            "proto" : "Std_ReturnType _Module___DiagnosticService___SubService_(Dcm_ExtendedOpStatusType OpStatus,Dcm_MsgContextType* pMsgContext,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "52" : {
            "name" : "Xxx_ReadData",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ReadData(uint8* Data);"
         },
         "54" : {
            "name" : "Xxx_ReadDataLength",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ReadDataLength(uint16* DataLength);"
         },
         "55" : {
            "name" : "Xxx_ConditionCheckRead",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ConditionCheckRead(Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "56" : {
            "name" : "Xxx_GetScalingInformation",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_GetScalingInformation(Dcm_OpStatusType OpStatus,uint8* ScalingInfo,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "59" : {
            "name" : "Xxx_ReadData",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ReadData(Dcm_OpStatusType OpStatus,uint8* Data);"
         },
         "6" : {
            "name" : "Dcm_GetSesCtrlType",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetSesCtrlType(Dcm_SesCtrlType* SesCtrlType);"
         },
         "60" : {
            "name" : "Xxx_ResetToDefault",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ResetToDefault(Dcm_OpStatusType OpStatus,[Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "62" : {
            "name" : "Xxx_WriteData",
            "param" : 4,
            "proto" : "Std_ReturnType Xxx_WriteData(const uint8* Data,uint16 DataLength,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "64" : {
            "name" : "Xxx_ReadDidData",
            "param" : 5,
            "proto" : "Std_ReturnType Xxx_ReadDidData(uint16 DID,uint8* Data,Dcm_OpStatusType OpStatus,uint16 DataLength,Dcm_NegativeResponseCodeType ErrorCode);"
         },
         "65" : {
            "name" : "Xxx_WriteDidData",
            "param" : 5,
            "proto" : "Std_ReturnType Xxx_WriteDidData(uint16 DID,const uint8* Data,Dcm_OpStatusType OpStatus,uint16 DataLength,Dcm_NegativeResponseCodeType ErrorCode);"
         },
         "67" : {
            "name" : "Dcm_CopyTxData",
            "param" : 4,
            "proto" : "BufReq_ReturnType Dcm_CopyTxData(PduIdType id,const PduInfoType* info,const RetryInfoType* retry,PduLengthType* availableDataPtr);"
         },
         "68" : {
            "name" : "Xxx_GetSeed",
            "param" : 4,
            "proto" : "Std_ReturnType Xxx_GetSeed(const uint8* SecurityAccessDataRecord,Dcm_OpStatusType OpStatus,uint8* Seed,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "69" : {
            "name" : "Xxx_GetSeed",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_GetSeed(Dcm_OpStatusType OpStatus,uint8* Seed,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "7" : {
            "name" : "Dcm_GetVin",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_GetVin(uint8* Data);"
         },
         "70" : {
            "name" : "Dcm_StartOfReception",
            "param" : 4,
            "proto" : "BufReq_ReturnType Dcm_StartOfReception(PduIdType id,const PduInfoType* info,PduLengthType TpSduLength,PduLengthType* bufferSizePtr);"
         },
         "71" : {
            "name" : "Xxx_CompareKey",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_CompareKey(const uint8* Key,Dcm_OpStatusType OpStatus,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "72" : {
            "name" : "Dcm_TpTxConfirmation",
            "param" : 2,
            "proto" : "void Dcm_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "Xxx_ConditionCheckRead",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ConditionCheckRead(Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "74" : {
            "name" : "Xxx_FreezeCurrentState",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_FreezeCurrentState([Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "75" : {
            "name" : "Xxx_GetScalingInformation",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_GetScalingInformation(uint8* ScalingInfo,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "76" : {
            "name" : "Xxx_ReadDataLength",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ReadDataLength(Dcm_OpStatusType OpStatus,uint16* DataLength);"
         },
         "77" : {
            "name" : "Xxx_ResetToDefault",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ResetToDefault([Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "79" : {
            "name" : "Xxx_ReturnControlToECU",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_ReturnControlToECU([Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "80" : {
            "name" : "Xxx_ShortTermAdjustment",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ShortTermAdjustment(const uint8* ControlStateInfo,[Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "81" : {
            "name" : "Xxx_WriteData",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_WriteData(const uint8* Data,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "82" : {
            "name" : "Xxx_WriteData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_WriteData(const uint8* Data,uint16 DataLength,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "83" : {
            "name" : "Xxx_IsDidAvailable",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_IsDidAvailable(uint16 DID,Dcm_OpStatusType OpStatus,Dcm_DidSupportedType* supported);"
         },
         "85" : {
            "name" : "Xxx_ShortTermAdjustment",
            "param" : 4,
            "proto" : "Std_ReturnType Xxx_ShortTermAdjustment(const uint8* ControlStateInfo,uint16 DataLength,Dcm_OpStatusType OpStatus,[Dcm_ControlMask_{DID}Type controlMask],[uint8* controlMask2],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "86" : {
            "name" : "Dcm_SetActiveDiagnostic",
            "param" : 1,
            "proto" : "Std_ReturnType Dcm_SetActiveDiagnostic(boolean active);"
         },
         "88" : {
            "name" : "Xxx_ReadData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_ReadData(Dcm_OpStatusType OpStatus,uint8* Data,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "89" : {
            "name" : "Xxx_GetSecurityAttemptCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_GetSecurityAttemptCounter(Dcm_OpStatusType OpStatus,uint8* AttemptCounter);"
         },
         "90" : {
            "name" : "Xxx_SetSecurityAttemptCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_SetSecurityAttemptCounter(Dcm_OpStatusType OpStatus,uint8 AttemptCounter);"
         },
         "92" : {
            "name" : "Xxx_Stop",
            "param" : 1,
            "proto" : "Std_ReturnType Xxx_Stop([DcmDspRoutineSignalType dataIn_1, ...DcmDspRoutineSignalType dataIn_n],[const uint8* dataInVar],[DcmDspRoutineSignalType dataOut_1, ...DcmDspRoutineSignalType dataOut_n],[uint8* dataOutVar],[uint16* currentDataLength],Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "94" : {
            "name" : "Xxx_ReadDidRangeDataLength",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_ReadDidRangeDataLength(uint16 DID,Dcm_OpStatusType OpStatus,uint16* DataLength);"
         },
         "95" : {
            "name" : "Xxx_ClearDTCCheckFnc",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_ClearDTCCheckFnc(uint32 GoDTC,Dcm_NegativeResponseCodeType* ErrorCode);"
         },
         "96" : {
            "name" : "Xxx_GetInfotypeValueData",
            "param" : 3,
            "proto" : "Std_ReturnType Xxx_GetInfotypeValueData(Dcm_OpStatusType OpStatus,uint8* DataValueBuffer,uint8* DataValueBufferSize);"
         },
         "97" : {
            "name" : "Dcm_SetProgConditions",
            "param" : 2,
            "proto" : "Std_ReturnType Dcm_SetProgConditions(Dcm_OpStatusType OpStatus,const Dcm_ProgConditionsType* ProgConditions);"
         },
         "98" : {
            "name" : "Dcm_GetProgConditions",
            "param" : 1,
            "proto" : "Dcm_EcuStartModeType Dcm_GetProgConditions(Dcm_ProgConditionsType * ProgConditions);"
         },
         "99" : {
            "name" : "Xxx_RequestControl",
            "param" : 2,
            "proto" : "Std_ReturnType Xxx_RequestControl(uint8* OutBuffer,const uint8* InBuffer);"
         }
      }
   },
   "54" : {
      "abbreviation" : "Dem",
      "services" : {
         "0" : {
            "name" : "Dem_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dem_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "1" : {
            "name" : "Dem_PreInit",
            "param" : 0,
            "proto" : "void Dem_PreInit();"
         },
         "100" : {
            "name" : "Dem_DcmReadDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID21(uint8* PID21value);"
         },
         "101" : {
            "name" : "Dem_DcmReadDataOfPID30",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID30(uint8* PID30value);"
         },
         "102" : {
            "name" : "Dem_DcmReadDataOfPID31",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID31(uint8* PID31value);"
         },
         "103" : {
            "name" : "Dem_DcmReadDataOfPID41",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID41(uint8* PID41value);"
         },
         "104" : {
            "name" : "Dem_DcmReadDataOfPID4D",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID4D(uint8* PID4Dvalue);"
         },
         "105" : {
            "name" : "Dem_DcmReadDataOfPID4E",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID4E(uint8* PID4Evalue);"
         },
         "106" : {
            "name" : "Dem_DcmReadDataOfPID91",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID91(uint8* PID91value);"
         },
         "107" : {
            "name" : "Dem_DcmGetInfoTypeValue08",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetInfoTypeValue08(Dcm_OpStatusType OpStatus,uint8* Iumprdata08,uint8* Iumprdata08BufferSize);"
         },
         "108" : {
            "name" : "Dem_DcmGetInfoTypeValue0B",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetInfoTypeValue0B(Dcm_OpStatusType OpStatus,uint8* Iumprdata0B,uint8* Iumprdata0BBufferSize);"
         },
         "109" : {
            "name" : "Dem_GetEventExtendedDataRecordEx",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_GetEventExtendedDataRecordEx(Dem_EventIdType EventId,uint8 RecordNumber,uint8* DestBuffer,uint16* BufSize);"
         },
         "110" : {
            "name" : "Dem_GetEventFreezeFrameDataEx",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_GetEventFreezeFrameDataEx(Dem_EventIdType EventId,uint8 RecordNumber,uint16 DataId,uint8* DestBuffer,uint16* BufSize);"
         },
         "115" : {
            "name" : "Dem_RepIUMPRFaultDetect",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_RepIUMPRFaultDetect(Dem_RatioIdType RatioID);"
         },
         "121" : {
            "name" : "Dem_SetPtoStatus",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetPtoStatus(boolean PtoStatus);"
         },
         "122" : {
            "name" : "Dem_SetWIRStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetWIRStatus(Dem_EventIdType EventId,boolean WIRStatus);"
         },
         "13" : {
            "name" : "Dem_GetDTCOfEvent",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetDTCOfEvent(Dem_EventIdType EventId,Dem_DTCFormatType DTCFormat,uint32* DTCOfEvent);"
         },
         "14" : {
            "name" : "Dem_GetSeverityOfDTC",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetSeverityOfDTC(Dem_DTCSeverityType* DTCSeverity,uint8 ClientId);"
         },
         "144" : {
            "name" : "Dem_J1939DcmSetDTCFilter",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_J1939DcmSetDTCFilter(Dem_J1939DcmDTCStatusFilterType DTCStatusFilter,Dem_DTCKindType DTCKind,Dem_DTCOriginType DTCOrigin,uint8 ClientId,Dem_J1939DcmLampStatusType* LampStatus);"
         },
         "145" : {
            "name" : "Dem_J1939DcmGetNumberOfFilteredDTC",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNumberOfFilteredDTC(uint16* NumberOfFilteredDTC,uint8 ClientId);"
         },
         "146" : {
            "name" : "Dem_J1939DcmGetNextFilteredDTC",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNextFilteredDTC(uint32* J1939DTC,uint8* OccurenceCounter,uint8 ClientId);"
         },
         "147" : {
            "name" : "Dem_J1939DcmFirstDTCwithLampStatus",
            "param" : 1,
            "proto" : "void Dem_J1939DcmFirstDTCwithLampStatus(uint8 ClientId);"
         },
         "148" : {
            "name" : "Dem_J1939DcmGetNextDTCwithLampStatus",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNextDTCwithLampStatus(Dem_J1939DcmLampStatusType* LampStatus,uint32* J1939DTC,uint8* OccurenceCounter,uint8 ClientId);"
         },
         "149" : {
            "name" : "Dem_J1939DcmClearDTC",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_J1939DcmClearDTC(Dem_J1939DcmSetClearFilterType DTCTypeFilter,Dem_DTCOriginType DTCOrigin,uint8 ClientId);"
         },
         "150" : {
            "name" : "Dem_J1939DcmSetFreezeFrameFilter",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmSetFreezeFrameFilter(Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind,uint8 ClientId);"
         },
         "151" : {
            "name" : "Dem_J1939DcmGetNextFreezeFrame",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNextFreezeFrame(uint32* J1939DTC,uint8* OccurenceCounter,uint8* DestBuffer,uint16* BufSize,uint8 ClientId);"
         },
         "152" : {
            "name" : "Dem_J1939DcmGetNextSPNInFreezeFrame",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNextSPNInFreezeFrame(uint32* SPNSupported,uint8* SPNDataLength,uint8 ClientId);"
         },
         "153" : {
            "name" : "Dem_J1939DcmSetRatioFilter",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_J1939DcmSetRatioFilter(uint16* IgnitionCycleCounter,uint16* OBDMonitoringConditionsEncountered,uint8 ClientId);"
         },
         "154" : {
            "name" : "Dem_J1939DcmGetNextFilteredRatio",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_J1939DcmGetNextFilteredRatio(uint32* SPN,uint16* Numerator,uint16* Denominator,uint8 ClientId);"
         },
         "155" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness1",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness1(Dem_J1939DcmDiagnosticReadiness1Type* DataValue,uint8 ClientId);"
         },
         "156" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness2",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness2(Dem_J1939DcmDiagnosticReadiness2Type* DataValue,uint8 ClientId);"
         },
         "157" : {
            "name" : "Dem_J1939DcmReadDiagnosticReadiness3",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_J1939DcmReadDiagnosticReadiness3(Dem_J1939DcmDiagnosticReadiness3Type* DataValue,uint8 ClientId);"
         },
         "159" : {
            "name" : "Dem_GetDebouncingOfEvent",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetDebouncingOfEvent(Dem_EventIdType EventId,Dem_DebouncingStateType* DebouncingState);"
         },
         "162" : {
            "name" : "Dem_SetDTR",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_SetDTR(uint16 DTRId,sint32 TestResult,sint32 LowerLimit,sint32 UpperLimit,Dem_DTRControlType Ctrlval);"
         },
         "163" : {
            "name" : "Dem_DcmGetAvailableOBDMIDs",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_DcmGetAvailableOBDMIDs(uint8 Obdmid,uint32* Obdmidvalue);"
         },
         "164" : {
            "name" : "Dem_DcmGetNumTIDsOfOBDMID",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_DcmGetNumTIDsOfOBDMID(uint8 Obdmid,uint8* numberOfTIDs);"
         },
         "165" : {
            "name" : "Dem_DcmGetDTRData",
            "param" : 7,
            "proto" : "Std_ReturnType Dem_DcmGetDTRData(uint8 Obdmid,uint8 TIDindex,uint8* TIDvalue,uint8* UaSID,uint16* Testvalue,uint16* Lowlimvalue,uint16* Upplimvalue);"
         },
         "166" : {
            "name" : "Dem_SetDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID21(const uint8* PID21value);"
         },
         "167" : {
            "name" : "Dem_SetDataOfPID31",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID31(const uint8* PID31value);"
         },
         "168" : {
            "name" : "Dem_SetDataOfPID4D",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID4D(const uint8* PID4Dvalue);"
         },
         "169" : {
            "name" : "Dem_SetDataOfPID4E",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetDataOfPID4E(const uint8* PID4Evalue);"
         },
         "171" : {
            "name" : "Dem_GetCycleQualified",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetCycleQualified(uint8 OperationCycleId,boolean* isQualified);"
         },
         "174" : {
            "name" : "Dem_SetIUMPRDenCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetIUMPRDenCondition(Dem_IumprDenomCondIdType ConditionId,Dem_IumprDenomCondStatusType ConditionStatus);"
         },
         "175" : {
            "name" : "Dem_GetIUMPRDenCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetIUMPRDenCondition(Dem_IumprDenomCondIdType ConditionId,Dem_IumprDenomCondStatusType* ConditionStatus);"
         },
         "177" : {
            "name" : "Dem_GetDataOfPID21",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetDataOfPID21(uint8* PID21value);"
         },
         "178" : {
            "name" : "Dem_GetDTCSeverityAvailabilityMask",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetDTCSeverityAvailabilityMask(uint8 ClientId,Dem_DTCSeverityType* DTCSeverityMask);"
         },
         "179" : {
            "name" : "Dem_ReadDataOfPID01",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ReadDataOfPID01(uint8* PID01value);"
         },
         "180" : {
            "name" : "Dem_GetB1Counter",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetB1Counter(uint16* B1Counter);"
         },
         "181" : {
            "name" : "Dem_GetMonitorStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetMonitorStatus(Dem_EventIdType EventID,Dem_MonitorStatusType* MonitorStatus);"
         },
         "182" : {
            "name" : "Dem_GetEventUdsStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventUdsStatus(Dem_EventIdType EventId,Dem_UdsStatusByteType* UDSStatusByte);"
         },
         "183" : {
            "name" : "Dem_SelectDTC",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_SelectDTC(uint8 ClientId,uint32 DTC,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin);"
         },
         "184" : {
            "name" : "Dem_GetDTCSelectionResult",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetDTCSelectionResult(uint8 ClientId);"
         },
         "185" : {
            "name" : "Dem_SelectFreezeFrameData",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SelectFreezeFrameData(uint8 ClientId,uint8 RecordNumber);"
         },
         "186" : {
            "name" : "Dem_SelectExtendedDataRecord",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SelectExtendedDataRecord(uint8 ClientId,uint8 ExtendedDataNumber);"
         },
         "187" : {
            "name" : "Dem_GetDTCSelectionResultForClearDTC",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_GetDTCSelectionResultForClearDTC(uint8 ClientId);"
         },
         "188" : {
            "name" : "Dem_GetDTCSuppression",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetDTCSuppression(uint8 ClientId,boolean* SuppressionStatus);"
         },
         "189" : {
            "name" : "Dem_SetEventStatusWithMonitorData",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_SetEventStatusWithMonitorData(Dem_EventIdType EventId,Dem_EventStatusType EventStatus,Dem_MonitorDataType monitorData0,Dem_MonitorDataType monitorData1);"
         },
         "19" : {
            "name" : "Dem_SetDTCFilter",
            "param" : 7,
            "proto" : "Std_ReturnType Dem_SetDTCFilter(uint8 ClientId,uint8 DTCStatusMask,Dem_DTCFormatType DTCFormat,Dem_DTCOriginType DTCOrigin,boolean FilterWithSeverity,Dem_DTCSeverityType DTCSeverityMask,boolean FilterForFaultDetectionCounter);"
         },
         "190" : {
            "name" : "Dem_GetEventAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetEventAvailable(Dem_EventIdType EventId,boolean* AvailableStatus);"
         },
         "191" : {
            "name" : "Dem_SetEventFailedWithSyncFreezeFrame",
            "param" : 1,
            "proto" : "void Dem_SetEventFailedWithSyncFreezeFrame(Dem_EventIdType EventId);"
         },
         "192" : {
            "name" : "Dem_CallbackEventSyncStorageProcessed",
            "param" : 0,
            "proto" : "Std_ReturnType Dem_CallbackEventSyncStorageProcessed();"
         },
         "2" : {
            "name" : "Dem_Init",
            "param" : 1,
            "proto" : "void Dem_Init(const Dem_ConfigType* ConfigPtr);"
         },
         "21" : {
            "name" : "Dem_GetStatusOfDTC",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetStatusOfDTC(uint8 ClientId,uint8* DTCStatus);"
         },
         "22" : {
            "name" : "Dem_GetDTCStatusAvailabilityMask",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetDTCStatusAvailabilityMask(uint8 ClientId,Dem_UdsStatusByteType* DTCStatusMask,Dem_DTCOriginType DTCOrigin);"
         },
         "23" : {
            "name" : "Dem_GetNumberOfFilteredDTC",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetNumberOfFilteredDTC(uint8 ClientId,uint16* NumberOfFilteredDTC);"
         },
         "24" : {
            "name" : "Dem_GetNextFilteredDTC",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNextFilteredDTC(uint8 ClientId,uint32* DTC,uint8* DTCStatus);"
         },
         "25" : {
            "name" : "Dem_GetDTCByOccurrenceTime",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetDTCByOccurrenceTime(uint8 ClientId,Dem_DTCRequestType DTCRequest,uint32* DTC);"
         },
         "26" : {
            "name" : "Dem_DisableDTCRecordUpdate",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DisableDTCRecordUpdate(uint8 ClientId);"
         },
         "27" : {
            "name" : "Dem_EnableDTCRecordUpdate",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_EnableDTCRecordUpdate(uint8 ClientId);"
         },
         "29" : {
            "name" : "Dem_GetNextFreezeFrameData",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNextFreezeFrameData(uint8 ClientId,uint8* DestBuffer,uint16* BufSize);"
         },
         "3" : {
            "name" : "Dem_Shutdown",
            "param" : 0,
            "proto" : "void Dem_Shutdown();"
         },
         "32" : {
            "name" : "Dem_GetNextExtendedDataRecord",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNextExtendedDataRecord(uint8 ClientId,uint8* DestBuffer,uint16* BufSize);"
         },
         "33" : {
            "name" : "Dem_GetSizeOfExtendedDataRecordSelection",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetSizeOfExtendedDataRecordSelection(uint8 ClientId,uint32* SizeOfExtendedDataRecord);"
         },
         "35" : {
            "name" : "Dem_ClearDTC",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ClearDTC(uint8 ClientId);"
         },
         "36" : {
            "name" : "Dem_DisableDTCSetting",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DisableDTCSetting(uint8 ClientId);"
         },
         "37" : {
            "name" : "Dem_EnableDTCSetting",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_EnableDTCSetting(uint8 ClientId);"
         },
         "4" : {
            "name" : "Dem_SetEventStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEventStatus(Dem_EventIdType EventId,Dem_EventStatusType EventStatus);"
         },
         "41" : {
            "name" : "Dem_GetIndicatorStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetIndicatorStatus(uint8 IndicatorId,Dem_IndicatorStatusType* IndicatorStatus);"
         },
         "42" : {
            "name" : "Dem_GetComponentFailed",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetComponentFailed(Dem_ComponentIdType ComponentId,boolean* ComponentFailed);"
         },
         "43" : {
            "name" : "Dem_SetComponentAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetComponentAvailable(Dem_ComponentIdType ComponentId,boolean AvailableStatus);"
         },
         "5" : {
            "name" : "Dem_ResetEventStatus",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ResetEventStatus(Dem_EventIdType EventId);"
         },
         "50" : {
            "name" : "Dem_GetEventMemoryOverflow",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetEventMemoryOverflow(uint8 ClientId,Dem_DTCOriginType DTCOrigin,boolean* OverflowIndication);"
         },
         "52" : {
            "name" : "Dem_GetFunctionalUnitOfDTC",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetFunctionalUnitOfDTC(uint8 ClientId,uint8* DTCFunctionalUnit);"
         },
         "53" : {
            "name" : "Dem_GetNumberOfEventMemoryEntries",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNumberOfEventMemoryEntries(uint8 ClientId,Dem_DTCOriginType DTCOrigin,uint8* NumberOfEventMemoryEntries);"
         },
         "55" : {
            "name" : "Dem_SetEventAvailable",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEventAvailable(Dem_EventIdType EventId,boolean AvailableStatus);"
         },
         "56" : {
            "name" : "Dem_SetStorageCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetStorageCondition(uint8 StorageConditionID,boolean ConditionFulfilled);"
         },
         "57" : {
            "name" : "Dem_SetEnableCondition",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEnableCondition(uint8 EnableConditionID,boolean ConditionFulfilled);"
         },
         "58" : {
            "name" : "Dem_GetNextFilteredRecord",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNextFilteredRecord(uint8 ClientId,uint32* DTC,uint8* RecordNumber);"
         },
         "59" : {
            "name" : "Dem_GetNextFilteredDTCAndFDC",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_GetNextFilteredDTCAndFDC(uint8 ClientId,uint32* DTC,sint8* DTCFaultDetectionCounter);"
         },
         "6" : {
            "name" : "Dem_PrestoreFreezeFrame",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_PrestoreFreezeFrame(Dem_EventIdType EventId);"
         },
         "60" : {
            "name" : "Dem_GetTranslationType",
            "param" : 1,
            "proto" : "Dem_DTCTranslationFormatType Dem_GetTranslationType(uint8 ClientId);"
         },
         "61" : {
            "name" : "Dem_GetNextFilteredDTCAndSeverity",
            "param" : 5,
            "proto" : "Std_ReturnType Dem_GetNextFilteredDTCAndSeverity(uint8 ClientId,uint32* DTC,uint8* DTCStatus,Dem_DTCSeverityType* DTCSeverity,uint8* DTCFunctionalUnit);"
         },
         "62" : {
            "name" : "Dem_GetFaultDetectionCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetFaultDetectionCounter(Dem_EventIdType EventId,sint8* FaultDetectionCounter);"
         },
         "63" : {
            "name" : "Dem_SetFreezeFrameRecordFilter",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetFreezeFrameRecordFilter(uint8 ClientId,Dem_DTCFormatType DTCFormat);"
         },
         "7" : {
            "name" : "Dem_ClearPrestoredFreezeFrame",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_ClearPrestoredFreezeFrame(Dem_EventIdType EventId);"
         },
         "8" : {
            "name" : "Dem_RestartOperationCycle",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_RestartOperationCycle(uint8 OperationCycleId);"
         },
         "81" : {
            "name" : "Dem_SetEventDisabled",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_SetEventDisabled(Dem_EventIdType EventId);"
         },
         "82" : {
            "name" : "Dem_DcmReadDataOfOBDFreezeFrame",
            "param" : 4,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfOBDFreezeFrame(uint8 PID,uint8 DataElementIndexOfPID,uint8* DestBuffer,uint16* BufSize);"
         },
         "83" : {
            "name" : "Dem_DcmGetDTCOfOBDFreezeFrame",
            "param" : 3,
            "proto" : "Std_ReturnType Dem_DcmGetDTCOfOBDFreezeFrame(uint8 FrameNumber,uint32* DTC,Dem_DTCFormatType DTCFormat);"
         },
         "85" : {
            "name" : "Dem_MainFunction",
            "param" : 0,
            "proto" : "void Dem_MainFunction();"
         },
         "87" : {
            "name" : "Dem_SetEventConfirmationThresholdCounter",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_SetEventConfirmationThresholdCounter(Dem_EventIdType EventId,uint8 FailureCycleCounterThreshold);"
         },
         "9" : {
            "name" : "Dem_ResetEventDebounceStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_ResetEventDebounceStatus(Dem_EventIdType EventId,Dem_DebounceResetStatusType DebounceResetStatus);"
         },
         "90" : {
            "name" : "Dem_GetNumberOfFreezeFrameRecords",
            "param" : 2,
            "proto" : "Std_ReturnType Dem_GetNumberOfFreezeFrameRecords(uint8 ClientId,uint16* NumberOfFilteredRecords);"
         },
         "97" : {
            "name" : "Dem_DcmReadDataOfPID01",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID01(uint8* PID01value);"
         },
         "99" : {
            "name" : "Dem_DcmReadDataOfPID1C",
            "param" : 1,
            "proto" : "Std_ReturnType Dem_DcmReadDataOfPID1C(uint8* PID1Cvalue);"
         }
      }
   },
   "55" : {
      "abbreviation" : "Dlt",
      "services" : {
         "1" : {
            "name" : "Dlt_Init",
            "param" : 1,
            "proto" : "void Dlt_Init(const Dlt_ConfigType* config);"
         },
         "10" : {
            "name" : "Dlt_GetLogInfo",
            "param" : 5,
            "proto" : "Std_ReturnType Dlt_GetLogInfo(uint8 options,Dlt_ApplicationIDType appId,Dlt_ContextIDType contextId,uint8* status,Dlt_LogInfoType* logInfo);"
         },
         "128" : {
            "name" : "Dlt_TxFunction",
            "param" : 0,
            "proto" : "void Dlt_TxFunction();"
         },
         "17" : {
            "name" : "Dlt_SetDefaultLogLevel",
            "param" : 1,
            "proto" : "Std_ReturnType Dlt_SetDefaultLogLevel(Dlt_MessageLogLevelType newLogLevel);"
         },
         "18" : {
            "name" : "Dlt_SetDefaultTraceStatus",
            "param" : 2,
            "proto" : "Std_ReturnType Dlt_SetDefaultTraceStatus(boolean newTraceStatus,Dlt_LogChannelNameType logChannelName);"
         },
         "2" : {
            "name" : "Dlt_GetVersionInfo",
            "param" : 1,
            "proto" : "void Dlt_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "22" : {
            "name" : "Dlt_UnregisterContext",
            "param" : 3,
            "proto" : "Std_ReturnType Dlt_UnregisterContext(Dlt_SessionIDType sessionId,Dlt_ApplicationIDType appId,Dlt_ContextIDType contextId);"
         },
         "24" : {
            "name" : "Dlt_GetDefaultLogLevel",
            "param" : 1,
            "proto" : "Std_ReturnType Dlt_GetDefaultLogLevel(Dlt_MessageLogLevelType* defaultLogLevel);"
         },
         "27" : {
            "name" : "Dlt_SetMessageFiltering",
            "param" : 1,
            "proto" : "Std_ReturnType Dlt_SetMessageFiltering(boolean status);"
         },
         "32" : {
            "name" : "Dlt_SetLogChannelAssignment",
            "param" : 4,
            "proto" : "Std_ReturnType Dlt_SetLogChannelAssignment(Dlt_ApplicationIDType appId,Dlt_ContextIDType contextId,Dlt_LogChannelNameType logChannelName,Dlt_AssignmentOperation addRemoveOp);"
         },
         "33" : {
            "name" : "Dlt_SetLogChannelThreshold",
            "param" : 3,
            "proto" : "Std_ReturnType Dlt_SetLogChannelThreshold(Dlt_LogChannelNameType logChannelName,Dlt_MessageLogLevelType newThreshold,boolean newTraceStatus);"
         },
         "4" : {
            "name" : "Dlt_SendTraceMessage",
            "param" : 4,
            "proto" : "Std_ReturnType Dlt_SendTraceMessage(Dlt_SessionIDType sessionId,const Dlt_MessageTraceInfoType* traceInfo,const uint8* traceData,uint16 traceDataLength);"
         },
         "69" : {
            "name" : "Dlt_TpRxIndication",
            "param" : 2,
            "proto" : "void Dlt_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "7" : {
            "name" : "Dlt_DetForwardErrorTrace",
            "param" : 4,
            "proto" : "void Dlt_DetForwardErrorTrace(uint16 moduleId,uint8 instanceId,uint8 apiId,uint8 errorId);"
         },
         "72" : {
            "name" : "Dlt_TpTxConfirmation",
            "param" : 2,
            "proto" : "void Dlt_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "8" : {
            "name" : "Dlt_SetLogLevel",
            "param" : 3,
            "proto" : "Std_ReturnType Dlt_SetLogLevel(Dlt_ApplicationIDType appId,Dlt_ContextIDType contextId,Dlt_MessageLogLevelType newLogLevel);"
         },
         "9" : {
            "name" : "Dlt_SetTraceStatus",
            "param" : 3,
            "proto" : "Std_ReturnType Dlt_SetTraceStatus(Dlt_ApplicationIDType appId,Dlt_ContextIDType contextId,boolean newTraceStatus);"
         }
      }
   },
   "56" : {
      "abbreviation" : "SoAd",
      "services" : {
         "1" : {
            "name" : "SoAd_Init",
            "param" : 1,
            "proto" : "void SoAd_Init(const SoAd_ConfigType* SoAdConfigPtr);"
         },
         "11" : {
            "name" : "SoAd_ReleaseIpAddrAssignment",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_ReleaseIpAddrAssignment(SoAd_SoConIdType SoConId);"
         },
         "13" : {
            "name" : "SoAd_GetPhysAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetPhysAddr(SoAd_SoConIdType SoConId,uint8* PhysAddrPtr);"
         },
         "16" : {
            "name" : "SoAd_SetRemoteAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_SetRemoteAddr(SoAd_SoConIdType SoConId,const TcpIp_SockAddrType* RemoteAddrPtr);"
         },
         "18" : {
            "name" : "SoAd_RxIndication",
            "param" : 4,
            "proto" : "void SoAd_RxIndication(TcpIp_SocketIdType SocketId,const TcpIp_SockAddrType* RemoteAddrPtr,const uint8* BufPtr,uint16 Length);"
         },
         "2" : {
            "name" : "SoAd_GetVersionInfo",
            "param" : 1,
            "proto" : "void SoAd_GetVersionInfo(Std_VersionInfoType* versioninfo);"
         },
         "20" : {
            "name" : "SoAd_TxConfirmation",
            "param" : 2,
            "proto" : "void SoAd_TxConfirmation(TcpIp_SocketIdType SocketId,uint16 Length);"
         },
         "23" : {
            "name" : "SoAd_TcpIpEvent",
            "param" : 2,
            "proto" : "void SoAd_TcpIpEvent(TcpIp_SocketIdType SocketId,TcpIp_EventType Event);"
         },
         "24" : {
            "name" : "SoAd_LocalIpAddrAssignmentChg",
            "param" : 2,
            "proto" : "void SoAd_LocalIpAddrAssignmentChg(TcpIp_LocalAddrIdType IpAddrId,TcpIp_IpAddrStateType State);"
         },
         "25" : {
            "name" : "SoAd_MainFunction",
            "param" : 0,
            "proto" : "void SoAd_MainFunction();"
         },
         "26" : {
            "name" : "SoAd_ReadDhcpHostNameOption",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_ReadDhcpHostNameOption(SoAd_SoConIdType SoConId,uint8* length,uint8* data);"
         },
         "27" : {
            "name" : "SoAd_WriteDhcpHostNameOption",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_WriteDhcpHostNameOption(SoAd_SoConIdType SoConId,uint8 length,const uint8* data);"
         },
         "28" : {
            "name" : "SoAd_GetRemoteAddr",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetRemoteAddr(SoAd_SoConIdType SoConId,TcpIp_SockAddrType* IpAddrPtr);"
         },
         "29" : {
            "name" : "SoAd_IfRoutingGroupTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_IfRoutingGroupTransmit(SoAd_RoutingGroupIdType id);"
         },
         "31" : {
            "name" : "SoAd_IfSpecificRoutingGroupTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_IfSpecificRoutingGroupTransmit(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "32" : {
            "name" : "SoAd_EnableSpecificRouting",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_EnableSpecificRouting(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "33" : {
            "name" : "SoAd_DisableSpecificRouting",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_DisableSpecificRouting(SoAd_RoutingGroupIdType id,SoAd_SoConIdType SoConId);"
         },
         "34" : {
            "name" : "SoAd_GetSoConMode",
            "param" : 2,
            "proto" : "void SoAd_GetSoConMode(SoAd_SoConIdType SoConId,SoAd_SoConModeType* ModePtr);"
         },
         "35" : {
            "name" : "SoAd_ReleaseRemoteAddr",
            "param" : 1,
            "proto" : "void SoAd_ReleaseRemoteAddr(SoAd_SoConIdType SoConId);"
         },
         "7" : {
            "name" : "SoAd_GetSoConId",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_GetSoConId(PduIdType TxPduId,SoAd_SoConIdType* SoConIdPtr);"
         },
         "73" : {
            "name" : "SoAd_IfTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_IfTransmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "75" : {
            "name" : "SoAd_TpChangeParameter",
            "param" : 3,
            "proto" : "Std_ReturnType SoAd_TpChangeParameter(PduIdType id,TPParameterType parameter,uint16 value);"
         },
         "76" : {
            "name" : "SoAd_TpCancelReceive",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_TpCancelReceive(PduIdType RxPduId);"
         },
         "8" : {
            "name" : "SoAd_OpenSoCon",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_OpenSoCon(SoAd_SoConIdType SoConId);"
         },
         "84" : {
            "name" : "SoAd_TpCancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType SoAd_TpCancelTransmit(PduIdType TxPduId);"
         },
         "9" : {
            "name" : "SoAd_CloseSoCon",
            "param" : 2,
            "proto" : "Std_ReturnType SoAd_CloseSoCon(SoAd_SoConIdType SoConId,boolean abort);"
         }
      }
   },
   "58" : {
      "abbreviation" : "J1939Dcm",
      "services" : {
         "10" : {
            "name" : "J1939Dcm_DemTriggerOnDTCStatus",
            "param" : 2,
            "proto" : "void J1939Dcm_DemTriggerOnDTCStatus(uint32 DTC,uint8 ClientId);"
         },
         "3" : {
            "name" : "J1939Dcm_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Dcm_GetVersionInfo(Std_VersionInfoType * versioninfo);"
         },
         "64" : {
            "name" : "J1939Dcm_TxConfirmation",
            "param" : 2,
            "proto" : "void J1939Dcm_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "66" : {
            "name" : "J1939Dcm_RxIndication",
            "param" : 2,
            "proto" : "void J1939Dcm_RxIndication(PduIdType RxPduId,const PduInfoType* PduInfoPtr);"
         },
         "69" : {
            "name" : "J1939Dcm_TpRxIndication",
            "param" : 2,
            "proto" : "void J1939Dcm_TpRxIndication(PduIdType id,Std_ReturnType result);"
         },
         "71" : {
            "name" : "J1939Dcm_RequestIndication",
            "param" : 7,
            "proto" : "void J1939Dcm_RequestIndication(uint8 node,NetworkHandleType channel,uint32 requestedPgn,const J1939Rm_ExtIdInfoType* extIdInfo,uint8 sourceAddress,uint8 destAddress,uint8 priority);"
         },
         "72" : {
            "name" : "J1939Dcm_TpTxConfirmation",
            "param" : 2,
            "proto" : "void J1939Dcm_TpTxConfirmation(PduIdType id,Std_ReturnType result);"
         },
         "73" : {
            "name" : "J1939Dcm_GenericDMxTransmit",
            "param" : 5,
            "proto" : "Std_ReturnType J1939Dcm_GenericDMxTransmit(uint8 dmId,uint8 node,NetworkHandleType channel,uint8 destAddress,uint8 priority);"
         }
      }
   },
   "59" : {
      "abbreviation" : "J1939Rm",
      "services" : {
         "1" : {
            "name" : "J1939Rm_Init",
            "param" : 1,
            "proto" : "void J1939Rm_Init(const J1939Rm_ConfigType* configPtr);"
         },
         "2" : {
            "name" : "J1939Rm_DeInit",
            "param" : 0,
            "proto" : "void J1939Rm_DeInit();"
         },
         "3" : {
            "name" : "J1939Rm_GetVersionInfo",
            "param" : 1,
            "proto" : "void J1939Rm_GetVersionInfo(Std_VersionInfoType* versionInfo);"
         },
         "4" : {
            "name" : "J1939Rm_MainFunction",
            "param" : 0,
            "proto" : "void J1939Rm_MainFunction();"
         },
         "40" : {
            "name" : "J1939Rm_CheckReceivedComIPdu",
            "param" : 2,
            "proto" : "boolean J1939Rm_CheckReceivedComIPdu(PduIdType PduId,const PduInfoType* PduInfoPtr);"
         },
         "64" : {
            "name" : "J1939Rm_TxConfirmation",
            "param" : 2,
            "proto" : "void J1939Rm_TxConfirmation(PduIdType TxPduId,Std_ReturnType result);"
         },
         "7" : {
            "name" : "J1939Rm_SendRequest",
            "param" : 7,
            "proto" : "Std_ReturnType J1939Rm_SendRequest(uint8 userId,NetworkHandleType channel,uint32 requestedPgn,const J1939Rm_ExtIdInfoType* extIdInfo,uint8 destAddress,uint8 priority,boolean checkTimeout);"
         },
         "8" : {
            "name" : "J1939Rm_CancelRequestTimeout",
            "param" : 5,
            "proto" : "Std_ReturnType J1939Rm_CancelRequestTimeout(uint8 userId,NetworkHandleType channel,uint32 requestedPgn,const J1939Rm_ExtIdInfoType* extIdInfo,uint8 destAddress);"
         },
         "9" : {
            "name" : "J1939Rm_SendAck",
            "param" : 8,
            "proto" : "Std_ReturnType J1939Rm_SendAck(uint8 userId,NetworkHandleType channel,uint32 ackPgn,const J1939Rm_ExtIdInfoType* extIdInfo,J1939Rm_AckCode ackCode,uint8 ackAddress,uint8 priority,boolean broadcast);"
         }
      }
   },
   "60" : {
      "abbreviation" : "CanIf",
      "services" : {
         "1" : {
            "name" : "CanIf_Init",
            "param" : 1,
            "proto" : "void CanIf_Init(const CanIf_ConfigType* ConfigPtr);"
         },
         "10" : {
            "name" : "CanIf_GetPduMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetPduMode(uint8 ControllerId,CanIf_PduModeType* PduModePtr);"
         },
         "11" : {
            "name" : "CanIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void CanIf_GetVersionInfo(Std_VersionInfoType* VersionInfo);"
         },
         "12" : {
            "name" : "CanIf_SetDynamicTxId",
            "param" : 2,
            "proto" : "void CanIf_SetDynamicTxId(PduIdType CanIfTxSduId,Can_IdType CanId);"
         },
         "13" : {
            "name" : "CanIf_SetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetTrcvMode(uint8 TransceiverId,CanTrcv_TrcvModeType TransceiverMode);"
         },
         "14" : {
            "name" : "CanIf_GetTrcvMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetTrcvMode(uint8 TransceiverId,CanTrcv_TrcvModeType* TransceiverModePtr);"
         },
         "15" : {
            "name" : "CanIf_GetTrcvWakeupReason",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetTrcvWakeupReason(uint8 TransceiverId,CanTrcv_TrcvWakeupReasonType* TrcvWuReasonPtr);"
         },
         "17" : {
            "name" : "CanIf_CheckWakeup",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckWakeup(EcuM_WakeupSourceType WakeupSource);"
         },
         "18" : {
            "name" : "CanIf_CheckValidation",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckValidation(EcuM_WakeupSourceType WakeupSource);"
         },
         "19" : {
            "name" : "CanIf_TxConfirmation",
            "param" : 1,
            "proto" : "void CanIf_TxConfirmation(PduIdType CanTxPduId);"
         },
         "2" : {
            "name" : "CanIf_DeInit",
            "param" : 0,
            "proto" : "void CanIf_DeInit();"
         },
         "20" : {
            "name" : "CanIf_RxIndication",
            "param" : 2,
            "proto" : "void CanIf_RxIndication(const Can_HwType* Mailbox,const PduInfoType* PduInfoPtr);"
         },
         "22" : {
            "name" : "CanIf_ControllerBusOff",
            "param" : 1,
            "proto" : "void CanIf_ControllerBusOff(uint8 ControllerId);"
         },
         "23" : {
            "name" : "CanIf_ControllerModeIndication",
            "param" : 2,
            "proto" : "void CanIf_ControllerModeIndication(uint8 ControllerId,Can_ControllerStateType ControllerMode);"
         },
         "25" : {
            "name" : "CanIf_GetTxConfirmationState",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_GetTxConfirmationState(uint8 ControllerId);"
         },
         "26" : {
            "name" : "CanIf_ConfirmPnAvailability",
            "param" : 1,
            "proto" : "void CanIf_ConfirmPnAvailability(uint8 TransceiverId);"
         },
         "3" : {
            "name" : "CanIf_SetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetControllerMode(uint8 ControllerId,Can_ControllerStateType ControllerMode);"
         },
         "30" : {
            "name" : "CanIf_ClearTrcvWufFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_ClearTrcvWufFlag(uint8 TransceiverId);"
         },
         "31" : {
            "name" : "CanIf_CheckTrcvWakeFlag",
            "param" : 1,
            "proto" : "Std_ReturnType CanIf_CheckTrcvWakeFlag(uint8 TransceiverId);"
         },
         "32" : {
            "name" : "CanIf_ClearTrcvWufFlagIndication",
            "param" : 1,
            "proto" : "void CanIf_ClearTrcvWufFlagIndication(uint8 TransceiverId);"
         },
         "33" : {
            "name" : "CanIf_CheckTrcvWakeFlagIndication",
            "param" : 1,
            "proto" : "void CanIf_CheckTrcvWakeFlagIndication(uint8 TransceiverId);"
         },
         "34" : {
            "name" : "CanIf_TrcvModeIndication",
            "param" : 2,
            "proto" : "void CanIf_TrcvModeIndication(uint8 TransceiverId,CanTrcv_TrcvModeType TransceiverMode);"
         },
         "39" : {
            "name" : "CanIf_SetBaudrate",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetBaudrate(uint8 ControllerId,uint16 BaudRateConfigID);"
         },
         "4" : {
            "name" : "CanIf_GetControllerMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetControllerMode(uint8 ControllerId,Can_ControllerStateType* ControllerModePtr);"
         },
         "6" : {
            "name" : "CanIf_ReadRxPduData",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_ReadRxPduData(PduIdType CanIfRxSduId,PduInfoType* CanIfRxInfoPtr);"
         },
         "65" : {
            "name" : "CanIf_TriggerTransmit",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_TriggerTransmit(PduIdType TxPduId,PduInfoType* PduInfoPtr);"
         },
         "7" : {
            "name" : "CanIf_ReadTxNotifStatus",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_ReadTxNotifStatus(PduIdType CanIfTxSduId);"
         },
         "73" : {
            "name" : "CanIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "75" : {
            "name" : "CanIf_GetControllerErrorState",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetControllerErrorState(uint8 ControllerId,Can_ErrorStateType* ErrorStatePtr);"
         },
         "76" : {
            "name" : "CanIf_EnableBusMirroring",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_EnableBusMirroring(uint8 ControllerId,boolean MirroringActive);"
         },
         "77" : {
            "name" : "CanIf_GetControllerRxErrorCounter",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetControllerRxErrorCounter(uint8 ControllerId,uint8* RxErrorCounterPtr);"
         },
         "78" : {
            "name" : "CanIf_GetControllerTxErrorCounter",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_GetControllerTxErrorCounter(uint8 ControllerId,uint8* TxErrorCounterPtr);"
         },
         "79" : {
            "name" : "CanIf_ControllerErrorStatePassive",
            "param" : 3,
            "proto" : "void CanIf_ControllerErrorStatePassive(uint8 ControllerId,uint16 RxErrorCounter,uint16 TxErrorCounter);"
         },
         "8" : {
            "name" : "CanIf_ReadRxNotifStatus",
            "param" : 1,
            "proto" : "CanIf_NotifStatusType CanIf_ReadRxNotifStatus(PduIdType CanIfRxSduId);"
         },
         "80" : {
            "name" : "CanIf_ErrorNotification",
            "param" : 2,
            "proto" : "void CanIf_ErrorNotification(uint8 ControllerId,Can_ErrorType Can_ErrorType);"
         },
         "9" : {
            "name" : "CanIf_SetPduMode",
            "param" : 2,
            "proto" : "Std_ReturnType CanIf_SetPduMode(uint8 ControllerId,CanIf_PduModeType PduModeRequest);"
         }
      }
   },
   "61" : {
      "abbreviation" : "FrIf",
      "services" : {
         "0" : {
            "name" : "FrIf_ReconfigLPdu",
            "param" : 8,
            "proto" : "Std_ReturnType FrIf_ReconfigLPdu(uint8 FrIf_CtrlIdx,uint16 FrIf_LPduIdx,uint16 FrIf_FrameId,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_CycleRepetition,uint8 FrIf_CycleOffset,uint8 FrIf_PayloadLength,uint16 FrIf_HeaderCRC);"
         },
         "1" : {
            "name" : "FrIf_GetVersionInfo",
            "param" : 1,
            "proto" : "void FrIf_GetVersionInfo(Std_VersionInfoType* FrIf_VersionInfoPtr);"
         },
         "10" : {
            "name" : "FrIf_SendWUP",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_SendWUP(uint8 FrIf_CtrlIdx);"
         },
         "13" : {
            "name" : "FrIf_GetPOCStatus",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetPOCStatus(uint8 FrIf_CtrlIdx,Fr_POCStatusType* FrIf_POCStatusPtr);"
         },
         "14" : {
            "name" : "FrIf_GetGlobalTime",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetGlobalTime(uint8 FrIf_CtrlIdx,uint8* FrIf_CyclePtr,uint16* FrIf_MacroTickPtr);"
         },
         "15" : {
            "name" : "FrIf_GetNmVector",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetNmVector(uint8 FrIf_CtrlIdx,uint8* FrIf_NmVectorPtr);"
         },
         "16" : {
            "name" : "FrIf_AllowColdstart",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AllowColdstart(uint8 FrIf_CtrlIdx);"
         },
         "19" : {
            "name" : "FrIf_SetTransceiverMode",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_SetTransceiverMode(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvModeType FrIf_TrcvMode);"
         },
         "2" : {
            "name" : "FrIf_Init",
            "param" : 1,
            "proto" : "void FrIf_Init(const FrIf_ConfigType* FrIf_ConfigPtr);"
         },
         "20" : {
            "name" : "FrIf_GetTransceiverMode",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetTransceiverMode(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvModeType* FrIf_TrcvModePtr);"
         },
         "21" : {
            "name" : "FrIf_GetTransceiverWUReason",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetTransceiverWUReason(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,FrTrcv_TrcvWUReasonType* FrIf_TrcvWUReasonPtr);"
         },
         "24" : {
            "name" : "FrIf_ClearTransceiverWakeup",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_ClearTransceiverWakeup(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         },
         "25" : {
            "name" : "FrIf_SetAbsoluteTimer",
            "param" : 4,
            "proto" : "Std_ReturnType FrIf_SetAbsoluteTimer(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx,uint8 FrIf_Cycle,uint16 FrIf_Offset);"
         },
         "27" : {
            "name" : "FrIf_CancelAbsoluteTimer",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_CancelAbsoluteTimer(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "29" : {
            "name" : "FrIf_EnableAbsoluteTimerIRQ",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_EnableAbsoluteTimerIRQ(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx);"
         },
         "3" : {
            "name" : "FrIf_ControllerInit",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_ControllerInit(uint8 FrIf_CtrlIdx);"
         },
         "31" : {
            "name" : "FrIf_GetAbsoluteTimerIRQStatus",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetAbsoluteTimerIRQStatus(uint8 FrIf_CtrlIdx,uint8 FrIf_AbsTimerIdx,boolean* FrIf_IRQStatusPtr);"
         },
         "38" : {
            "name" : "FrIf_GetChannelStatus",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetChannelStatus(uint8 FrIf_CtrlIdx,uint16* FrIf_ChannelAStatusPtr,uint16* FrIf_ChannelBStatusPtr);"
         },
         "4" : {
            "name" : "FrIf_StartCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_StartCommunication(uint8 FrIf_CtrlIdx);"
         },
         "40" : {
            "name" : "FrIf_DisableLPdu",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_DisableLPdu(uint8 FrIf_CtrlIdx,uint16 FrIf_LPduIdx);"
         },
         "41" : {
            "name" : "FrIf_GetClockCorrection",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_GetClockCorrection(uint8 FrIf_CtrlIdx,sint16* FrIf_RateCorrectionPtr,sint32* FrIf_OffsetCorrectionPtr);"
         },
         "49" : {
            "name" : "FrIf_GetMacrotickDuration",
            "param" : 1,
            "proto" : "uint16 FrIf_GetMacrotickDuration(uint8 FrIf_CtrlIdx);"
         },
         "51" : {
            "name" : "FrIf_AllSlots",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AllSlots(uint8 FrIf_CtrlIdx);"
         },
         "53" : {
            "name" : "FrIf_GetTransceiverError",
            "param" : 4,
            "proto" : "Std_ReturnType FrIf_GetTransceiverError(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_BranchIdx,uint32* FrIf_BusErrorState);"
         },
         "55" : {
            "name" : "FrIf_DisableTransceiverBranch",
            "param" : 3,
            "proto" : "Std_ReturnType FrIf_DisableTransceiverBranch(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx,uint8 FrIf_BranchIdx);"
         },
         "57" : {
            "name" : "FrIf_CheckWakeupByTransceiver",
            "param" : 2,
            "proto" : "void FrIf_CheckWakeupByTransceiver(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         },
         "58" : {
            "name" : "FrIf_GetCycleLength",
            "param" : 1,
            "proto" : "uint32 FrIf_GetCycleLength(uint8 FrIf_CtrlIdx);"
         },
         "6" : {
            "name" : "FrIf_AbortCommunication",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_AbortCommunication(uint8 FrIf_CtrlIdx);"
         },
         "7" : {
            "name" : "FrIf_GetState",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_GetState(uint8 FrIf_ClstIdx,FrIf_StateType* FrIf_StatePtr);"
         },
         "73" : {
            "name" : "FrIf_Transmit",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_Transmit(PduIdType TxPduId,const PduInfoType* PduInfoPtr);"
         },
         "74" : {
            "name" : "FrIf_CancelTransmit",
            "param" : 1,
            "proto" : "Std_ReturnType FrIf_CancelTransmit(PduIdType TxPduId);"
         },
         "8" : {
            "name" : "FrIf_SetState",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_SetState(uint8 FrIf_ClstIdx,FrIf_StateTransitionType FrIf_StateTransition);"
         },
         "9" : {
            "name" : "FrIf_SetWakeupChannel",
            "param" : 2,
            "proto" : "Std_ReturnType FrIf_SetWakeupChannel(uint8 FrIf_CtrlIdx,Fr_ChannelType FrIf_ChnlIdx);"
         }
      }
   }
}
